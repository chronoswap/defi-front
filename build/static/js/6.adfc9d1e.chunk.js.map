{"version":3,"sources":["hooks/useFarmsWithBalance.ts","hooks/useAllEarnings.ts","views/Home/components/CakeHarvestBalance.tsx","views/Home/components/CakeWalletBalance.tsx","views/Home/components/FarmStakingCard.tsx","views/Home/components/ChronostoneCard.tsx","hooks/useGetThoPPerBlock.ts","views/Home/components/CakeStats.tsx","hooks/useGetTvl.ts","views/Home/components/TotalValueLockedCard.tsx","views/Home/components/EarnAPYCard.tsx","views/Home/Home.tsx","views/TradingCompetition/components/CompetitionHeadingText.tsx","views/TradingCompetition/components/Section/sectionStyles.tsx","hooks/useTokenBalance.ts","views/TradingCompetition/pngs/all-bunnies-clipped.png","views/TradingCompetition/components/LeadInBanner/index.tsx","../node_modules/lodash/max.js","../node_modules/lodash/_baseExtremum.js","../node_modules/lodash/_baseGt.js"],"names":["useFarmsWithBalance","useState","farmsWithBalances","setFarmsWithBalances","account","useWeb3React","fastRefresh","useRefresh","useEffect","a","calls","farmsConfig","map","farm","address","getMasterChefAddress","name","params","pid","multicall","masterChefABI","rawResults","results","index","balance","BigNumber","fetchBalances","useAllEarnings","balances","setBalance","res","fetchAllBalances","Block","styled","div","CakeHarvestBalance","TranslateString","useI18n","earningsSum","reduce","accum","earning","pow","toNumber","cakePriceBusd","usePriceCakeBusd","earningsBusd","multipliedBy","CardValue","value","lineHeight","eq","CardBusdValue","color","style","CakeWalletBalance","cakeBalance","useTokenBalance","getCakeAddress","busdBalance","getBalanceNumber","decimals","fontSize","StyledFarmStakingCard","Card","CardImage","img","Label","theme","colors","textSubtle","Actions","FarmedStakingCard","pendingTx","setPendingTx","balancesWithValue","filter","balanceType","onReward","useAllHarvest","farmWithBalance","harvestAllFarms","useCallback","size","mb","src","alt","width","height","id","disabled","length","onClick","count","UnlockButton","useGetThoPPerBlock","thoPPerBlock","setthoPPerBlock","slowRefresh","masterChefContract","getMasterchefContract","methods","cakePerBlock","call","rawThoPPerBlock","_thoPPerBlock","fetchThoPPerBlock","StyledCakeStats","Row","CakeStats","totalSupply","useTotalSupply","burnedBalance","useBurnedBalance","cakeSupply","useGetStats","pools","farms","prices","useGetApiPrices","farmsLP","useFarms","poolCalls","poolsConfig","poolConfig","getAddress","tokens","cake","contractAddress","cakeABI","tokenBalancePool","tokenBalancePoolSum","farmsPrice","forEach","element","quotePrice","quoteToken","tokenPrice","token","quoteTotalPrice","quoteTokenAmount","times","tokenTotalPrice","tokenAmount","push","Number","isNaN","tokenBalanceFarmSum","Math","round","StyledTotalValueLockedCard","TvlHeading","Heading","CenteredText","Text","TotalValueLockedCard","tvl","mediaQueries","lg","CardMidContent","attrs","EarnAPYCard","cakePrice","highestApy","useMemo","apys","multiplier","lpTotalInQuoteToken","quoteTokenPriceUsd","toLowerCase","totalLiquidity","getFarmApy","poolWeight","maxApy","max","toLocaleString","maximumFractionDigits","animation","variant","justifyContent","exact","activeClassName","to","mt","Hero","Cards","BaseLayout","sm","Home","LeadInBanner","Page","as","FarmStakingCard","ChronostoneCard","H1SizeStyles","H2SizeStyles","sharedStyles","props","background","$fill","sharedVisiblyHiddenStyles","Heading1Text","Heading2Text","VisuallyHiddenHeading2Text","DARKBG","DARKFILL","MIDBLUEBG","MIDBLUEBG_DARK","MIDBLUEFILL","MIDBLUEFILL_DARK","LIGHTBLUEBG","LIGHTBLUEBG_DARK","LIGHTBLUEFILL","LIGHTBLUEFILL_DARK","GOLDGRADIENT","setTotalSupply","cakeContract","getCakeContract","supply","fetchTotalSupply","tokenAddress","web3","useWeb3","contract","getBep20Contract","balanceOf","fetchBalance","StyledLeadInBanner","Box","Container","PageContainer","md","allBunniesImageClipped","Header","SubHeader","LearnMoreLink","Link","primary","LaurelWrapper","alignItems","px","ml","baseExtremum","require","baseGt","identity","module","exports","array","undefined","isSymbol","iteratee","comparator","current","computed","result","other"],"mappings":"+YAyCeA,EA3Ba,WAC1B,MAAkDC,mBAA4B,IAA9E,mBAAOC,EAAP,KAA0BC,EAA1B,KACQC,EAAYC,cAAZD,QACAE,EAAgBC,cAAhBD,YAqBR,OAnBAE,qBAAU,WAcJJ,GAbe,uCAAG,gCAAAK,EAAA,6DACdC,EAAQC,IAAYC,KAAI,SAACC,GAAD,MAAW,CACvCC,QAASC,cACTC,KAAM,cACNC,OAAQ,CAACJ,EAAKK,IAAKd,OAJD,SAOKe,YAAUC,EAAeV,GAP9B,OAOdW,EAPc,OAQdC,EAAUX,IAAYC,KAAI,SAACC,EAAMU,GAAP,mBAAC,eAAsBV,GAAvB,IAA6BW,QAAS,IAAIC,IAAUJ,EAAWE,SAE/FpB,EAAqBmB,GAVD,2CAAH,oDAcjBI,KAED,CAACtB,EAASE,IAENJ,G,SCLMyB,EAzBQ,WACrB,MAA+B1B,mBAAS,IAAxC,mBAAO2B,EAAP,KAAiBC,EAAjB,KACQzB,EAAYC,cAAZD,QACAE,EAAgBC,cAAhBD,YAmBR,OAjBAE,qBAAU,WAYJJ,GAXkB,uCAAG,8BAAAK,EAAA,6DACjBC,EAAQC,IAAYC,KAAI,SAACC,GAAD,MAAW,CACvCC,QAASC,cACTC,KAAM,cACNC,OAAQ,CAACJ,EAAKK,IAAKd,OAJE,SAMLe,YAAUC,EAAeV,GANpB,OAMjBoB,EANiB,OAQvBD,EAAWC,GARY,2CAAH,oDAYpBC,KAED,CAAC3B,EAASE,IAENsB,G,iCCnBHI,EAAQC,IAAOC,IAAV,oDA8BIC,EA1BY,WACzB,IAAMC,EAAkBC,cAChBjC,EAAYC,cAAZD,QAEFkC,EADcX,IACYY,QAAO,SAACC,EAAOC,GAC7C,OAAOD,EAAQ,IAAIf,IAAUgB,GAASP,IAAI,IAAIT,IAAU,IAAIiB,IAAI,KAAKC,aACpE,GACGC,EAAgBC,cAChBC,EAAe,IAAIrB,IAAUa,GAAaS,aAAaH,GAAeD,WAE5E,OAAKvC,EASH,eAAC4B,EAAD,WACE,cAACgB,EAAA,EAAD,CAAWC,MAAOX,EAAaY,WAAW,SACxCN,EAAcO,GAAG,IAAM,cAACC,EAAA,EAAD,CAAeH,MAAOH,OAT/C,cAAC,KAAD,CAAMO,MAAM,eAAeC,MAAO,CAAEJ,WAAY,QAAhD,SACGd,EAAgB,IAAK,a,kBCOfmB,GAvBW,WACxB,IAAMnB,EAAkBC,cAClBmB,EAAcC,YAAgBC,eAC9Bd,EAAgBC,cAChBc,EAAc,IAAIlC,YAAUmC,aAAiBJ,IAAcT,aAAaH,GAAeD,WAG7F,OAFoBtC,cAAZD,QAWN,qCACE,cAAC4C,EAAA,EAAD,CAAWC,MAAOW,aAAiBJ,GAAcK,SAAU,EAAGC,SAAS,OAAOZ,WAAW,SACvFN,EAAcO,GAAG,GAA6C,uBAAxC,cAACC,EAAA,EAAD,CAAeH,MAAOU,OAT9C,cAAC,KAAD,CAAMN,MAAM,eAAeC,MAAO,CAAEJ,WAAY,QAAhD,SACGd,EAAgB,IAAK,aCXxB2B,GAAwB9B,YAAO+B,IAAP/B,CAAH,uKAOrBD,GAAQC,IAAOC,IAAV,oDAIL+B,GAAYhC,IAAOiC,IAAV,oDAITC,GAAQlC,IAAOC,IAAV,+DACA,qBAAGkC,MAAkBC,OAAOC,cAIjCC,GAAUtC,IAAOC,IAAV,iDA8DEsC,GA1DW,WACxB,MAAkCvE,oBAAS,GAA3C,mBAAOwE,EAAP,KAAkBC,EAAlB,KACQtE,EAAYC,cAAZD,QACFgC,EAAkBC,cAElBsC,EADmB3E,IACkB4E,QAAO,SAACC,GAAD,OAAiBA,EAAYrD,QAAQmB,WAAa,KAE5FmC,EAAaC,YAAcJ,EAAkB/D,KAAI,SAACoE,GAAD,OAAqBA,EAAgB9D,QAAtF4D,SAEFG,EAAkBC,sBAAW,sBAAC,sBAAAzE,EAAA,6DAClCiE,GAAa,GADqB,kBAG1BI,IAH0B,6EAOhCJ,GAAa,GAPmB,0EASjC,CAACI,IAEJ,OACE,cAACf,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASoB,KAAK,KAAKC,GAAG,OAAtB,SACGhD,EAAgB,IAAK,qBAExB,cAAC6B,GAAD,CAAWoB,IAAI,mBAAmBC,IAAI,YAAYC,MAAO,GAAIC,OAAQ,KACrE,eAAC,GAAD,WACE,eAACrB,GAAD,WAAQ/B,EAAgB,IAAK,mBAA7B,OACA,cAAC,EAAD,OAEF,eAAC,GAAD,WACE,eAAC+B,GAAD,WAAQ/B,EAAgB,IAAK,kBAA7B,OACA,cAAC,GAAD,OAEF,cAACmC,GAAD,UACGnE,EACC,cAAC,IAAD,CACEqF,GAAG,cACHC,SAAUf,EAAkBgB,QAAU,GAAKlB,EAC3CmB,QAASX,EACTM,MAAM,OAJR,SAMGd,EACGrC,EAAgB,IAAK,mBACrBA,EAAgB,IAAD,uBAAsBuC,EAAkBgB,OAAxC,KAAmD,CAChEE,MAAOlB,EAAkBgB,WAIjC,cAACG,EAAA,EAAD,CAAcP,MAAM,iBC1E1BxB,GAAwB9B,YAAO+B,IAAP/B,CAAH,uKAOrBD,GAAQC,IAAOC,IAAV,oDAIL+B,GAAYhC,IAAOiC,IAAV,oDAITC,GAAQlC,IAAOC,IAAV,+DACA,qBAAGkC,MAAkBC,OAAOC,cAIjCC,GAAUtC,IAAOC,IAAV,iDA8DEsC,GA1DW,WACxB,MAAkCvE,oBAAS,GAA3C,mBAAOwE,EAAP,KAAkBC,EAAlB,KACQtE,EAAYC,cAAZD,QACFgC,EAAkBC,cAElBsC,EADmB3E,IACkB4E,QAAO,SAACC,GAAD,OAAiBA,EAAYrD,QAAQmB,WAAa,KAE5FmC,EAAaC,YAAcJ,EAAkB/D,KAAI,SAACoE,GAAD,OAAqBA,EAAgB9D,QAAtF4D,SAEFG,EAAkBC,sBAAW,sBAAC,sBAAAzE,EAAA,6DAClCiE,GAAa,GADqB,kBAG1BI,IAH0B,6EAOhCJ,GAAa,GAPmB,0EASjC,CAACI,IAEJ,OACE,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASK,KAAK,KAAKC,GAAG,OAAtB,SACGhD,EAAgB,IAAK,iBAExB,cAAC,GAAD,CAAWiD,IAAI,mBAAmBC,IAAI,YAAYC,MAAO,GAAIC,OAAQ,KACrE,eAAC,GAAD,WACE,eAAC,GAAD,WAAQpD,EAAgB,IAAK,mBAA7B,OACA,cAAC,EAAD,OAEF,eAAC,GAAD,WACE,eAAC,GAAD,WAAQA,EAAgB,IAAK,kBAA7B,OACA,cAAC,GAAD,OAEF,cAAC,GAAD,UACGhC,EACC,cAAC,IAAD,CACEqF,GAAG,cACHC,SAAUf,EAAkBgB,QAAU,GAAKlB,EAC3CmB,QAASX,EACTM,MAAM,OAJR,SAMGd,EACGrC,EAAgB,IAAK,mBACrBA,EAAgB,IAAD,uBAAsBuC,EAAkBgB,OAAxC,KAAmD,CAChEE,MAAOlB,EAAkBgB,WAIjC,cAACG,EAAA,EAAD,CAAcP,MAAM,iB,mBC/DjBQ,GAjBY,WACzB,MAAwC9F,mBAAS,GAAjD,mBAAO+F,EAAP,KAAqBC,EAArB,KACQC,EAAgB3F,cAAhB2F,YACFC,EAAqBC,eAW3B,OATA5F,qBAAU,YACe,uCAAG,8BAAAC,EAAA,sEACM0F,EAAmBE,QAAQC,eAAeC,OADhD,OAClBC,EADkB,OAElBC,EAAgB,IAAIhF,IAAU+E,GAAiBtE,IAA/B,SAAmC,GAAI,KAC7D+D,EAAgBQ,EAAc9D,YAHN,2CAAH,qDAKvB+D,KACC,CAACR,EAAaC,IAEVH,GCTHW,GAAkB1E,YAAO+B,KAAP/B,CAAH,yEAKf2E,GAAM3E,IAAOC,IAAV,oJAsCM2E,GA9BG,WAChB,IAAMzE,EAAkBC,cAClByE,EAAcC,cACdC,EAAgBpD,aAAiBqD,YAAiBvD,gBAClDwD,EAAaJ,EAAclD,aAAiBkD,GAAeE,EAAgB,EAC3EhB,EAAeD,KAErB,OACE,cAACY,GAAD,UACE,eAAC,KAAD,WACE,cAAC,KAAD,CAASxB,KAAK,KAAKC,GAAG,OAAtB,SACGhD,EAAgB,IAAK,gBAExB,eAACwE,GAAD,WACE,cAAC,KAAD,CAAM9C,SAAS,OAAf,SAAuB1B,EAAgB,IAAK,uBAC3C8E,GAAc,cAAClE,EAAA,EAAD,CAAWc,SAAS,OAAOb,MAAOiE,OAEnD,eAACN,GAAD,WACE,cAAC,KAAD,CAAM9C,SAAS,OAAf,SAAuB1B,EAAgB,IAAK,uBAC5C,cAACY,EAAA,EAAD,CAAWc,SAAS,OAAOD,SAAU,EAAGZ,MAAO+D,OAEjD,eAACJ,GAAD,WACE,cAAC,KAAD,CAAM9C,SAAS,OAAf,SAAuB1B,EAAgB,IAAK,oBAC5C,cAACY,EAAA,EAAD,CAAWc,SAAS,OAAOD,SAAU,EAAGZ,MAAO+C,a,4BCS1CmB,GA7CK,WAClB,MAA+BlH,mBAAS,CAACmH,MAAO,EAAKC,MAAO,IAA5D,mBAAOzF,EAAP,KAAiBC,EAAjB,KACQvB,EAAgBC,cAAhBD,YACFgH,EAASC,cACT3E,EAAgBC,cAChB2E,EAAUC,cAqChB,OAnCAjH,qBAAU,YACW,uCAAG,4CAAAC,EAAA,6DACdiH,EAAYC,KAAY/G,KAAI,SAACgH,GAAD,MAAiB,CACjD9G,QAAS+G,YAAWC,KAAOC,KAAKjH,SAChCE,KAAM,YACNC,OAAQ,CAAC4G,YAAWD,EAAWI,sBAJb,SAMW7G,YAAU8G,GAASP,GAN9B,OAMdQ,EANc,OAOdC,EAAsBD,EAAiB3F,QAAO,SAACC,EAAOC,GAC1D,OAAOD,EAAQ,IAAIf,IAAUgB,GAASP,IAAI,IAAIT,IAAU,IAAIiB,IAAI,KAAKC,aACpE,GAEGyF,EAAa,GAMnBZ,EAAQa,SAAQ,SAAAC,GACdC,EAAajB,EAAOO,YAAWS,EAAQE,WAAW1H,UAAY,IAAIW,IAAU6F,EAAOO,YAAWS,EAAQE,WAAW1H,WAAW6B,WAAaC,EAAcD,WACvJ8F,EAAaH,EAAQI,QAAUZ,KAAOC,KAAOnF,EAAcD,WAAa,IAAIlB,IAAU6F,EAAOO,YAAWS,EAAQI,MAAM5H,WAAW6B,WACjIgG,EAAkBL,EAAQM,iBAAmB,IAAInH,IAAU6G,EAAQM,kBAAkBC,MAAMN,GAAY5F,WAAa,EACpHmG,EAAkBR,EAAQS,YAAc,IAAItH,IAAU6G,EAAQS,aAAaF,MAAMJ,GAAY9F,WAAa,EAC1GyF,EAAWY,KAAKC,OAAOC,MAAMP,EAAkBG,GAAmB,EAAKH,EAAkBG,MAGrFK,EAAsBf,EAAW7F,QAAO,SAACC,EAAOC,GACpD,OAAOD,EAAQC,IACd,GACHZ,EAAW,CAACuF,MAAOe,EAAqBd,MAAO8B,IA5B3B,2CAAH,qDA8BnBzH,KACC,CAACpB,EAAagH,EAAQ1E,EAAe4E,IAE5B4B,KAAKC,MAA6E,IAAvE,IAAI5H,IAAUG,EAASwF,OAAOrE,aAAaH,GAAeD,YAAoB,IACxFf,EAASyF,OC5ClBiC,GAA6BrH,YAAO+B,IAAP/B,CAAH,kGAM1BsH,GAAatH,YAAOuH,IAAPvH,CAAH,kGAMVwH,GAAexH,YAAOyH,KAAPzH,CAAH,mDA+BH0H,GA3Bc,WAC3B,IAAMvH,EAAkBC,cAClBuH,EAAMzC,KAEZ,OACE,cAACmC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASnE,KAAK,KAAKC,GAAG,OAAtB,SACGhD,EAAgB,IAAK,8BAEvBwH,EACC,qCACE,eAACL,GAAD,CAAYpE,KAAK,KAAjB,cACG,cAACnC,EAAA,EAAD,CAAWC,MAAO2G,OAErB,cAACH,GAAD,CAAcpG,MAAM,aAApB,SACGjB,EAAgB,IAAK,uCAI1B,cAAC,KAAD,CAAUoD,OAAQ,W,wCCjCtBzB,GAAwB9B,YAAO+B,IAAP/B,CAAH,+IAKvB,qBAAGmC,MAAkByF,aAAaC,MAKhCC,GAAiB9H,YAAOuH,KAASQ,MAAM,CAAE7E,KAAM,MAA9BlD,CAAH,kDAoDLgI,GAjDK,WAClB,IAAM7H,EAAkBC,cAClBmF,EAAUC,cACVH,EAASC,cACT2C,EAAYrH,cAEZsH,EAAaC,mBAAQ,WACzB,IAAMC,EAAO7C,EAEV5C,QAAO,SAAC/D,GAAD,OAAuB,IAAbA,EAAKK,KAAiC,OAApBL,EAAKyJ,cACxC1J,KAAI,SAACC,GACJ,GAAIA,EAAK0J,qBAAuBjD,EAAQ,CACtC,IAAMkD,EAAqBlD,EAAOO,YAAWhH,EAAK2H,WAAW1H,SAAS,GAAM2J,eACtEC,EAAiB,IAAIjJ,IAAUZ,EAAK0J,qBAAqB1B,MAAM2B,GACrE,OAAOG,aAAW9J,EAAK+J,WAAYV,EAAWQ,GAEhD,OAAO,QAGLG,EAASC,KAAIT,GACnB,cAAOQ,QAAP,IAAOA,OAAP,EAAOA,EAAQE,eAAe,QAAS,CAAEC,sBAAuB,MAC/D,CAACd,EAAW1C,EAASF,IAExB,OACE,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASjE,MAAM,WAAW8B,KAAK,KAA/B,wBAGA,cAAC4E,GAAD,CAAgB1G,MAAM,UAAtB,SACG8G,EAAU,UACNA,EADM,aACS/H,EAAgB,IAAK,QAEvC,cAAC,KAAD,CAAU6I,UAAU,QAAQC,QAAQ,OAAO1F,OAAO,WAGtD,eAAC,IAAD,CAAM2F,eAAe,gBAArB,UACE,cAAC,IAAD,CAAS9H,MAAM,WAAW8B,KAAK,KAA/B,sBAGA,cAAC,KAAD,CAASiG,OAAK,EAACC,gBAAgB,SAASC,GAAG,SAAS7F,GAAG,eAAvD,SACE,cAAC,IAAD,CAAkB8F,GAAI,GAAIlI,MAAM,uB,UClDtCmI,GAAOvJ,IAAOC,IAAV,4gBAaN,qBAAGkC,MAAkByF,aAAaC,MAQhC2B,GAAQxJ,YAAOyJ,IAAPzJ,CAAH,mUAWP,qBAAGmC,MAAkByF,aAAa8B,MAMlC,qBAAGvH,MAAkByF,aAAaC,MA0DvB8B,IAnDE3J,YAAOyJ,IAAPzJ,CAAH,kRASV,qBAAGmC,MAAkByF,aAAa8B,MAMlC,qBAAGvH,MAAkByF,aAAaC,MAOf,WACrB,IAAM1H,EAAkBC,cAExB,OACE,qCACE,cAACwJ,GAAA,EAAD,IACA,eAACC,EAAA,EAAD,WACE,eAACN,GAAD,WACE,cAAC,IAAD,CAASO,GAAG,KAAK5G,KAAK,KAAKC,GAAG,OAAO/B,MAAM,YAA3C,SACGjB,EAAgB,IAAK,sBAExB,cAAC,KAAD,UAAOA,EAAgB,IAAK,wDAE9B,gCACE,eAACqJ,GAAD,WACE,cAACO,GAAD,IACA,cAACC,GAAD,OAEF,cAAC,GAAD,IACA,eAACR,GAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,mB,yKCpGNS,EAAe,SAAC9H,GAAD,kEAIjBA,EAAMyF,aAAa8B,GAJF,oCASfQ,EAAe,SAAC/H,GAAD,kEAIjBA,EAAMyF,aAAa8B,GAJF,mCASfS,EAAe,SAACC,GAAD,iGAIJA,EAAMC,WAAaD,EAAMC,WAAa,4CAJlC,4EAQjBD,EAAME,MAAN,sIARiB,OAefC,EAAyB,4CAUlBC,EAAexK,YAAOuH,IAAPvH,CAAH,0CACrB,gBAAGmC,EAAH,EAAGA,MAAH,OAAe8H,EAAa9H,MAC5B,SAACiI,GAAD,OAAWD,EAAaC,MAGfK,EAAezK,YAAOuH,IAAPvH,CAAH,0CACrB,gBAAGmC,EAAH,EAAGA,MAAH,OAAe+H,EAAa/H,MAC5B,SAACiI,GAAD,OAAWD,EAAaC,MAQfM,GAL6B1K,YAAOuH,IAAPvH,CAAH,0CACnC,gBAAGmC,EAAH,EAAGA,MAAH,OAAe8H,EAAa9H,KAC5BoI,GAGsCvK,YAAOuH,IAAPvH,CAAH,0CACnC,gBAAGmC,EAAH,EAAGA,MAAH,OAAe+H,EAAa/H,KAC5BoI,K,iCC/DJ,sXAAO,IAAMI,EAAS,oEACTC,EAAW,UACXC,EAAY,oDACZC,EAAiB,oDACjBC,EAAc,UACdC,EAAmB,UACnBC,EAAc,uDACdC,EAAmB,uDACnBC,EAAgB,UAChBC,EAAqB,UACrBC,EAAe,qD,kMCkBfvG,EAAiB,WAC5B,IAAQb,EAAgB3F,cAAhB2F,YACR,EAAsCjG,qBAAtC,mBAAO6G,EAAP,KAAoByG,EAApB,KAYA,OAVA/M,qBAAU,WAAM,4CACd,8BAAAC,EAAA,6DACQ+M,EAAeC,cADvB,SAEuBD,EAAanH,QAAQS,cAAcP,OAF1D,OAEQmH,EAFR,OAGEH,EAAe,IAAI9L,IAAUiM,IAH/B,4CADc,uBAAC,WAAD,wBAOdC,KACC,CAACzH,IAEGY,GAGIG,EAAmB,SAAC2G,GAC/B,MAA8B3N,mBAAS,IAAIwB,IAAU,IAArD,mBAAOD,EAAP,KAAgBK,EAAhB,KACQqE,EAAgB3F,cAAhB2F,YACF2H,EAAOC,cAYb,OAVAtN,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsN,EAAWC,YAAiBJ,EAAcC,GAD7B,SAEDE,EAAS1H,QAAQ4H,UAAU,8CAA8C1H,OAFxE,OAEbzE,EAFa,OAGnBD,EAAW,IAAIJ,IAAUK,IAHN,2CAAH,qDAMlBoM,KACC,CAACL,EAAMD,EAAc1H,IAEjB1E,GAGMiC,IAxDS,SAACmK,GACvB,MAA8B3N,mBAAS,IAAIwB,IAAU,IAArD,mBAAOD,EAAP,KAAgBK,EAAhB,KACQzB,EAAYC,cAAZD,QACFyN,EAAOC,cACLxN,EAAgBC,cAAhBD,YAcR,OAZAE,qBAAU,WAOJJ,GANc,uCAAG,8BAAAK,EAAA,6DACbsN,EAAWC,YAAiBJ,EAAcC,GAD7B,SAEDE,EAAS1H,QAAQ4H,UAAU7N,GAASmG,OAFnC,OAEbzE,EAFa,OAGnBD,EAAW,IAAIJ,IAAUK,IAHN,2CAAH,oDAOhBoM,KAED,CAAC9N,EAASwN,EAAcC,EAAMvN,IAE1BkB,I,uGCzBM,MAA0B,gD,yBCUnC2M,EAAqBlM,YAAOmM,IAAPnM,CAAH,+CACR2K,KAGVyB,EAAYpM,YAAOqM,IAAPrM,CAAH,gMAKX,qBAAGmC,MAAkByF,aAAa0E,KAChBC,GAKhBC,EAASxM,YAAOwK,IAAPxK,CAAH,gDAINyM,EAAYzM,YAAOyK,IAAPzK,CAAH,uEAKT0M,EAAgB1M,YAAO2M,IAAP3M,CAAH,iHAER,qBAAGmC,MAAkBC,OAAOwK,WAKjCC,EAAgB7M,IAAOC,IAAV,+FAIf,qBAAGkC,MAAkByF,aAAa0E,MAkCvB1C,IA7BM,WACnB,IAAMzJ,EAAkBC,cAExB,OACE,cAAC8L,EAAD,UACE,cAAC,EAAD,UACE,eAAC,IAAD,CAAMY,WAAW,SAAS5D,eAAgB,CAAC,SAAU,SAAU,KAAM,SAArE,UACE,cAAC2D,EAAD,UACE,cAAC,IAAD,CAAgBvJ,MAAM,OAAOlC,MAAM,cAErC,eAAC,IAAD,CAAK2L,GAAI,CAAC,MAAO,OAAQ,KAAM,KAA/B,UACE,cAACP,EAAD,UAASrM,EAAgB,IAAK,mBAC9B,cAACsM,EAAD,CAAWpC,WAAYgB,IAAcf,OAAK,EAA1C,SACGnK,EAAgB,IAAK,yBAExB,eAACuM,EAAD,CAAelJ,GAAG,oBAAoB6F,GAAG,eAAzC,UACGlJ,EAAgB,IAAK,cACtB,cAAC,IAAD,CAAkBiB,MAAM,UAAU4L,GAAG,cAGzC,cAACH,EAAD,UACE,cAAC,IAAD,CAAiBvJ,MAAM,OAAOlC,MAAM,uB,oBCvEhD,IAAI6L,EAAeC,EAAQ,KACvBC,EAASD,EAAQ,KACjBE,EAAWF,EAAQ,KA0BvBG,EAAOC,QANP,SAAaC,GACX,OAAQA,GAASA,EAAM7J,OACnBuJ,EAAaM,EAAOH,EAAUD,QAC9BK,I,oBCzBN,IAAIC,EAAWP,EAAQ,KA+BvBG,EAAOC,QAnBP,SAAsBC,EAAOG,EAAUC,GAIrC,IAHA,IAAIrO,GAAS,EACToE,EAAS6J,EAAM7J,SAEVpE,EAAQoE,GAAQ,CACvB,IAAI1C,EAAQuM,EAAMjO,GACdsO,EAAUF,EAAS1M,GAEvB,GAAe,MAAX4M,SAAiCJ,IAAbK,EACfD,IAAYA,IAAYH,EAASG,GAClCD,EAAWC,EAASC,IAE1B,IAAIA,EAAWD,EACXE,EAAS9M,EAGjB,OAAO8M,I,kBCfTT,EAAOC,QAJP,SAAgBtM,EAAO+M,GACrB,OAAO/M,EAAQ+M","file":"static/js/6.adfc9d1e.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport { FarmConfig } from 'config/constants/types'\nimport useRefresh from './useRefresh'\n\nexport interface FarmWithBalance extends FarmConfig {\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithBalances, setFarmsWithBalances] = useState<FarmWithBalance[]>([])\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n\n      const rawResults = await multicall(masterChefABI, calls)\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\n\n      setFarmsWithBalances(results)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh])\n\n  return farmsWithBalances\n}\n\nexport default useFarmsWithBalance\n","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from './useRefresh'\n\nconst useAllEarnings = () => {\n  const [balances, setBalance] = useState([])\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchAllBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n      const res = await multicall(masterChefABI, calls)\n\n      setBalance(res)\n    }\n\n    if (account) {\n      fetchAllBalances()\n    }\n  }, [account, fastRefresh])\n\n  return balances\n}\n\nexport default useAllEarnings\n","import React from 'react'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport useAllEarnings from 'hooks/useAllEarnings'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport styled from 'styled-components'\nimport CardValue from './CardValue'\nimport CardBusdValue from './CardBusdValue'\n\nconst Block = styled.div`\n  margin-bottom: 24px;\n`\n\nconst CakeHarvestBalance = () => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const allEarnings = useAllEarnings()\n  const earningsSum = allEarnings.reduce((accum, earning) => {\n    return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber()\n  }, 0)\n  const cakePriceBusd = usePriceCakeBusd()\n  const earningsBusd = new BigNumber(earningsSum).multipliedBy(cakePriceBusd).toNumber()\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '76px' }}>\n        {TranslateString(298, 'Locked')}\n      </Text>\n    )\n  }\n\n  return (\n    <Block>\n      <CardValue value={earningsSum} lineHeight=\"1.5\" />\n      {!cakePriceBusd.eq(0) && <CardBusdValue value={earningsBusd} />}\n    </Block>\n  )\n}\n\nexport default CakeHarvestBalance\n","import React from 'react'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { BigNumber } from 'bignumber.js'\nimport CardValue from './CardValue'\nimport CardBusdValue from './CardBusdValue'\n\nconst CakeWalletBalance = () => {\n  const TranslateString = useI18n()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  const cakePriceBusd = usePriceCakeBusd()\n  const busdBalance = new BigNumber(getBalanceNumber(cakeBalance)).multipliedBy(cakePriceBusd).toNumber()\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '54px' }}>\n        {TranslateString(298, 'Locked')}\n      </Text>\n    )\n  }\n\n  return (\n    <>\n      <CardValue value={getBalanceNumber(cakeBalance)} decimals={4} fontSize=\"24px\" lineHeight=\"36px\" />\n      {!cakePriceBusd.eq(0) ? <CardBusdValue value={busdBalance} /> : <br />}\n    </>\n  )\n}\n\nexport default CakeWalletBalance\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button } from '@pancakeswap-libs/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useI18n from 'hooks/useI18n'\nimport { useAllHarvest } from 'hooks/useHarvest'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeHarvestBalance from './CakeHarvestBalance'\nimport CakeWalletBalance from './CakeWalletBalance'\n\nconst StyledFarmStakingCard = styled(Card)`\n  background-image: url('/images/cake-bg.svg');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nconst FarmedStakingCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWeb3React()\n  const TranslateString = useI18n()\n  const farmsWithBalance = useFarmsWithBalance()\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    try {\n      await onReward()\n    } catch (error) {\n      // TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false)\n    }\n  }, [onReward])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(542, 'Farms & Staking')}\n        </Heading>\n        <CardImage src=\"/images/cake.svg\" alt=\"cake logo\" width={64} height={64} />\n        <Block>\n          <Label>{TranslateString(544, 'ThoP to Harvest')}:</Label>\n          <CakeHarvestBalance />\n        </Block>\n        <Block>\n          <Label>{TranslateString(546, 'ThoP in Wallet')}:</Label>\n          <CakeWalletBalance />\n        </Block>\n        <Actions>\n          {account ? (\n            <Button\n              id=\"harvest-all\"\n              disabled={balancesWithValue.length <= 0 || pendingTx}\n              onClick={harvestAllFarms}\n              width=\"100%\"\n            >\n              {pendingTx\n                ? TranslateString(548, 'Collecting ThoP')\n                : TranslateString(532, `Harvest all (${balancesWithValue.length})`, {\n                    count: balancesWithValue.length,\n                  })}\n            </Button>\n          ) : (\n            <UnlockButton width=\"100%\" />\n          )}\n        </Actions>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default FarmedStakingCard\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button } from '@pancakeswap-libs/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useI18n from 'hooks/useI18n'\nimport { useAllHarvest } from 'hooks/useHarvest'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeHarvestBalance from './CakeHarvestBalance'\nimport CakeWalletBalance from './CakeWalletBalance'\n\nconst StyledFarmStakingCard = styled(Card)`\n  background-image: url('/images/cake-bg.svg');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nconst FarmedStakingCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWeb3React()\n  const TranslateString = useI18n()\n  const farmsWithBalance = useFarmsWithBalance()\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    try {\n      await onReward()\n    } catch (error) {\n      // TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false)\n    }\n  }, [onReward])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(542, 'Chronostone')}\n        </Heading>\n        <CardImage src=\"/images/cake.svg\" alt=\"cake logo\" width={64} height={64} />\n        <Block>\n          <Label>{TranslateString(544, 'TKN1 to Harvest')}:</Label>\n          <CakeHarvestBalance />\n        </Block>\n        <Block>\n          <Label>{TranslateString(546, 'TKN1 in Wallet')}:</Label>\n          <CakeWalletBalance />\n        </Block>\n        <Actions>\n          {account ? (\n            <Button\n              id=\"harvest-all\"\n              disabled={balancesWithValue.length <= 0 || pendingTx}\n              onClick={harvestAllFarms}\n              width=\"100%\"\n            >\n              {pendingTx\n                ? TranslateString(548, 'Collecting CAKE')\n                : TranslateString(532, `Harvest all (${balancesWithValue.length})`, {\n                    count: balancesWithValue.length,\n                  })}\n            </Button>\n          ) : (\n            <UnlockButton width=\"100%\" />\n          )}\n        </Actions>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default FarmedStakingCard\n","import { useEffect, useState } from 'react'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport BigNumber from 'bignumber.js'\nimport useRefresh from './useRefresh'\n\nconst useGetThoPPerBlock = () => {\n  const [thoPPerBlock, setthoPPerBlock] = useState(0)\n  const { slowRefresh } = useRefresh()\n  const masterChefContract = getMasterchefContract()\n\n  useEffect(() => {\n    const fetchThoPPerBlock = async () => {\n      const rawThoPPerBlock = await masterChefContract.methods.cakePerBlock().call()\n      const _thoPPerBlock = new BigNumber(rawThoPPerBlock).div(10**18) // TODO No me gusta meter datos a piñone\n      setthoPPerBlock(_thoPPerBlock.toNumber())\n    }\n    fetchThoPPerBlock()\n  }, [slowRefresh, masterChefContract])\n\n  return thoPPerBlock\n}\n\nexport default useGetThoPPerBlock\n","import React from 'react'\nimport { Card, CardBody, Heading, Text } from '@onekswaps/uikit'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport useGetThoPPerBlock from 'hooks/useGetThoPPerBlock'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport CardValue from './CardValue'\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst CakeStats = () => {\n  const TranslateString = useI18n()\n  const totalSupply = useTotalSupply()\n  const burnedBalance = getBalanceNumber(useBurnedBalance(getCakeAddress()))\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply) - burnedBalance : 0\n  const thoPPerBlock = useGetThoPPerBlock()\n\n  return (\n    <StyledCakeStats>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(534, 'ThoP Stats')}\n        </Heading>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(536, 'Total ThoP Supply')}</Text>\n          {cakeSupply && <CardValue fontSize=\"14px\" value={cakeSupply} />}\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(538, 'Total ThoP Burned')}</Text>\n          <CardValue fontSize=\"14px\" decimals={0} value={burnedBalance} />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(540, 'New ThoP/block')}</Text>\n          <CardValue fontSize=\"14px\" decimals={0} value={thoPPerBlock} />\n        </Row>\n      </CardBody>\n    </StyledCakeStats>\n  )\n}\n\nexport default CakeStats\n","import { useEffect, useState } from 'react'\nimport multicall from 'utils/multicall'\nimport { getAddress } from 'utils/addressHelpers'\nimport poolsConfig from 'config/constants/pools'\nimport tokens from 'config/constants/tokens'\nimport cakeABI from 'config/abi/cake.json'\nimport useRefresh from 'hooks/useRefresh'\nimport BigNumber from 'bignumber.js'\nimport { useFarms, usePriceCakeBusd, useGetApiPrices } from 'state/hooks'\n\nconst useGetStats = () => {\n  const [balances, setBalance] = useState({pools: 0.0, farms: 0.0})\n  const { fastRefresh } = useRefresh()\n  const prices = useGetApiPrices()\n  const cakePriceBusd = usePriceCakeBusd()\n  const farmsLP = useFarms()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const poolCalls = poolsConfig.map((poolConfig) => ({\n        address: getAddress(tokens.cake.address),\n        name: 'balanceOf',\n        params: [getAddress(poolConfig.contractAddress)],\n      }))\n      const tokenBalancePool = await multicall(cakeABI, poolCalls)\n      const tokenBalancePoolSum = tokenBalancePool.reduce((accum, earning) => {\n        return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber()\n      }, 0)\n\n      const farmsPrice = []\n      let quotePrice\n      let tokenPrice\n      let quoteTotalPrice\n      let tokenTotalPrice\n      // TODO A checkear porque tengo una ñapa con la api de precios que habrá que quitar en mainnet\n      farmsLP.forEach(element => {\n        quotePrice = prices[getAddress(element.quoteToken.address)] ? new BigNumber(prices[getAddress(element.quoteToken.address)]).toNumber() : cakePriceBusd.toNumber()\n        tokenPrice = element.token === tokens.cake ? cakePriceBusd.toNumber() : new BigNumber(prices[getAddress(element.token.address)]).toNumber()\n        quoteTotalPrice = element.quoteTokenAmount ? new BigNumber(element.quoteTokenAmount).times(quotePrice).toNumber() : 0\n        tokenTotalPrice = element.tokenAmount ? new BigNumber(element.tokenAmount).times(tokenPrice).toNumber() : 0\n        farmsPrice.push(Number.isNaN(quoteTotalPrice + tokenTotalPrice) ? 0 : (quoteTotalPrice + tokenTotalPrice));\n      });\n\n      const tokenBalanceFarmSum = farmsPrice.reduce((accum, earning) => {\n        return accum + earning\n      }, 0)\n      setBalance({pools: tokenBalancePoolSum, farms: tokenBalanceFarmSum})\n    }\n    fetchBalances()\n  }, [fastRefresh, prices, cakePriceBusd, farmsLP])\n\n  const tvl = Math.round(new BigNumber(balances.pools).multipliedBy(cakePriceBusd).toNumber() * 100) / 100\n  return tvl + balances.farms\n}\n\nexport default useGetStats;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetStats from 'hooks/useGetTvl'\nimport CardBusdValue from './CardBusdValue'\nimport CardValue from './CardValue'\n\nconst StyledTotalValueLockedCard = styled(Card)`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n`\n\nconst TvlHeading = styled(Heading)`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n`\n\nconst CenteredText = styled(Text)`\n  text-align: center;\n`\n\nconst TotalValueLockedCard = () => {\n  const TranslateString = useI18n()\n  const tvl = useGetStats()\n\n  return (\n    <StyledTotalValueLockedCard>\n      <CardBody>\n        <Heading size=\"lg\" mb=\"24px\">\n          {TranslateString(762, 'Total Value Locked (TVL)')}\n        </Heading>\n        {tvl ? (\n          <>\n            <TvlHeading size=\"xl\">\n              $<CardValue value={tvl}/>\n            </TvlHeading>\n            <CenteredText color=\"textSubtle\">\n              {TranslateString(764, 'Across all LPs and Syrup Pools')}\n            </CenteredText>\n          </>\n        ) : (\n          <Skeleton height={66} />\n        )}\n      </CardBody>\n    </StyledTotalValueLockedCard>\n  )\n}\n\nexport default TotalValueLockedCard\n","import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon, Skeleton } from '@pancakeswap-libs/uikit'\nimport max from 'lodash/max'\nimport { NavLink } from 'react-router-dom'\nimport useI18n from 'hooks/useI18n'\nimport BigNumber from 'bignumber.js'\nimport { getFarmApy } from 'utils/apy'\nimport { useFarms, usePriceCakeBusd, useGetApiPrices } from 'state/hooks'\nimport { getAddress } from 'utils/addressHelpers'\n\nconst StyledFarmStakingCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ size: 'xl' })`\n  line-height: 44px;\n`\nconst EarnAPYCard = () => {\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const prices = useGetApiPrices()\n  const cakePrice = usePriceCakeBusd()\n\n  const highestApy = useMemo(() => {\n    const apys = farmsLP\n      // Filter inactive farms, because their theoretical APY is super high. In practice, it's 0.\n      .filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X')\n      .map((farm) => {\n        if (farm.lpTotalInQuoteToken && prices) {  // TODO la funcion get Address ojito con el true\n          const quoteTokenPriceUsd = prices[getAddress(farm.quoteToken.address, true).toLowerCase()]\n          const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\n          return getFarmApy(farm.poolWeight, cakePrice, totalLiquidity)\n        }\n        return null\n      })\n\n    const maxApy = max(apys)\n    return maxApy?.toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }, [cakePrice, farmsLP, prices])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading color=\"contrast\" size=\"lg\">\n          Earn up to\n        </Heading>\n        <CardMidContent color=\"#7645d9\">\n          {highestApy ? (\n            `${highestApy}% ${TranslateString(736, 'APR')}`\n          ) : (\n            <Skeleton animation=\"pulse\" variant=\"rect\" height=\"44px\" />\n          )}\n        </CardMidContent>\n        <Flex justifyContent=\"space-between\">\n          <Heading color=\"contrast\" size=\"lg\">\n            in Farms\n          </Heading>\n          <NavLink exact activeClassName=\"active\" to=\"/farms\" id=\"farm-apy-cta\">\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </NavLink>\n        </Flex>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default EarnAPYCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, BaseLayout } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport FarmStakingCard from 'views/Home/components/FarmStakingCard'\nimport ChronostoneCard from 'views/Home/components/ChronostoneCard'\nimport LotteryCard from 'views/Home/components/LotteryCard'\nimport CakeStats from 'views/Home/components/CakeStats'\nimport TotalValueLockedCard from 'views/Home/components/TotalValueLockedCard'\nimport EarnAPYCard from 'views/Home/components/EarnAPYCard'\nimport EarnAssetCard from 'views/Home/components/EarnAssetCard'\nimport WinCard from 'views/Home/components/WinCard'\nimport LeadInBanner from 'views/TradingCompetition/components/LeadInBanner'\n\nconst Hero = styled.div`\n  align-items: center;\n  background-image: url('/images/pan-bg-mobile.svg');\n  background-repeat: no-repeat;\n  background-position: top center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n  margin-bottom: 32px;\n  padding-top: 116px;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    background-image: url('/images/pan-bg2.svg'), url('/images/pan-bg.svg');\n    background-position: left center, right center;\n    height: 165px;\n    padding-top: 0;\n  }\n`\n\nconst Cards = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 32px;\n  margin-top: 32px;\n\n  & > div {\n    grid-column: span 6;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst CTACards = styled(BaseLayout)`\n  align-items: start;\n  margin-top: 32px;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 4;\n    }\n  }\n`\n\nconst Home: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <LeadInBanner />\n      <Page>\n        <Hero>\n          <Heading as=\"h1\" size=\"xl\" mb=\"24px\" color=\"secondary\">\n            {TranslateString(576, 'OneThousandSwaps')}\n          </Heading>\n          <Text>{TranslateString(578, 'Your AMM and yield farm on Binance Smart Chain.')}</Text>\n        </Hero>\n        <div>\n          <Cards>\n            <FarmStakingCard />\n            <ChronostoneCard />\n          </Cards>\n          <TotalValueLockedCard />\n          <Cards>\n            <CakeStats />\n            <EarnAPYCard />\n          </Cards>\n        </div>\n      </Page>\n    </>\n  )\n}\n\nexport default Home\n","import { Heading } from '@pancakeswap-libs/uikit'\nimport styled, { DefaultTheme } from 'styled-components'\n\nconst H1SizeStyles = (theme: DefaultTheme) => `\n  font-size: 48px;\n  white-space: nowrap;\n\n  ${theme.mediaQueries.sm} {\n    font-size: 64px;\n  }\n`\n\nconst H2SizeStyles = (theme: DefaultTheme) => `\n  font-size: 32px;\n  white-space: nowrap;\n\n  ${theme.mediaQueries.sm} {\n    font-size: 40px\n  }\n`\n\nconst sharedStyles = (props: HeadingProps) => `\n  text-align: center;\n  line-height: 110%;\n  color: #ffffff;\n  background:  ${props.background ? props.background : 'linear-gradient(#7645d9 0%, #452a7a 100%)'};\n  background-clip: text;\n  -webkit-background-clip: text;\n  ${\n    props.$fill\n      ? `-webkit-text-fill-color: transparent;`\n      : `-webkit-text-stroke: 4px transparent;\n       text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);`\n  }\n`\n\nconst sharedVisiblyHiddenStyles = `\n  visibility: hidden;\n  height: 0px;\n`\n\ninterface HeadingProps {\n  background?: string\n  $fill?: boolean\n}\n\nexport const Heading1Text = styled(Heading)<HeadingProps>`\n  ${({ theme }) => H1SizeStyles(theme)}\n  ${(props) => sharedStyles(props)}\n`\n\nexport const Heading2Text = styled(Heading)<HeadingProps>`\n  ${({ theme }) => H2SizeStyles(theme)}\n  ${(props) => sharedStyles(props)}\n`\n\nexport const VisuallyHiddenHeading1Text = styled(Heading)`\n  ${({ theme }) => H1SizeStyles(theme)}\n  ${sharedVisiblyHiddenStyles}\n`\n\nexport const VisuallyHiddenHeading2Text = styled(Heading)`\n  ${({ theme }) => H2SizeStyles(theme)}\n  ${sharedVisiblyHiddenStyles}\n`\n\nexport default Heading1Text\n","export const DARKBG = 'radial-gradient(329.58% 50% at 50% 50%, #3B2864 0%, #191326 100%)'\nexport const DARKFILL = '#191326'\nexport const MIDBLUEBG = 'linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%)'\nexport const MIDBLUEBG_DARK = 'linear-gradient(180deg, #434575 0%, #66578D 100%)'\nexport const MIDBLUEFILL = '#9A9FD0'\nexport const MIDBLUEFILL_DARK = '#66578D'\nexport const LIGHTBLUEBG = 'linear-gradient(139.73deg, #E6FDFF 0%, #F3EFFF 100%)'\nexport const LIGHTBLUEBG_DARK = 'linear-gradient(139.73deg, #313D5C 0%, #3D2A54 100%)'\nexport const LIGHTBLUEFILL = '#F3EFFF'\nexport const LIGHTBLUEFILL_DARK = '#3D2A54'\nexport const GOLDGRADIENT = 'linear-gradient(180deg, #FFD800 0%, #EB8C00 100%)'\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","export default __webpack_public_path__ + \"static/media/all-bunnies-clipped.6aa99e2e.png\";","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { ArrowForwardIcon, Box, Flex, LaurelLeftIcon, LaurelRightIcon } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport PageContainer from 'components/layout/Container'\nimport allBunniesImageClipped from '../../pngs/all-bunnies-clipped.png'\nimport { DARKBG, GOLDGRADIENT } from '../Section/sectionStyles'\nimport { Heading1Text, Heading2Text } from '../CompetitionHeadingText'\n\nconst StyledLeadInBanner = styled(Box)`\n  background: ${DARKBG};\n`\n\nconst Container = styled(PageContainer)`\n  padding-bottom: 24px;\n  padding-top: 24px;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    background: url(${allBunniesImageClipped}) no-repeat bottom right 24px;\n    text-align: left;\n  }\n`\n\nconst Header = styled(Heading1Text)`\n  font-size: 24px;\n`\n\nconst SubHeader = styled(Heading2Text)`\n  font-size: 24px;\n  margin-bottom: 4px;\n`\n\nconst LearnMoreLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: inline-flex;\n  font-weight: 600;\n`\n\nconst LaurelWrapper = styled.div`\n  flex: none;\n  width: 40px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst LeadInBanner = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledLeadInBanner>\n      <Container>\n        <Flex alignItems=\"center\" justifyContent={['center', 'center', null, 'start']}>\n          <LaurelWrapper>\n            <LaurelLeftIcon width=\"40px\" color=\"warning\" />\n          </LaurelWrapper>\n          <Box px={['8px', '16px', null, '0']}>\n            <Header>{TranslateString(999, 'Easter Battle')}</Header>\n            <SubHeader background={GOLDGRADIENT} $fill>\n              {TranslateString(999, '$200,000 in Prizes!')}\n            </SubHeader>\n            <LearnMoreLink id=\"hp-learn-more-cta\" to=\"/competition\">\n              {TranslateString(999, 'Learn More')}\n              <ArrowForwardIcon color=\"primary\" ml=\"4px\" />\n            </LearnMoreLink>\n          </Box>\n          <LaurelWrapper>\n            <LaurelRightIcon width=\"40px\" color=\"warning\" />\n          </LaurelWrapper>\n        </Flex>\n      </Container>\n    </StyledLeadInBanner>\n  )\n}\n\nexport default LeadInBanner\n","var baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    identity = require('./identity');\n\n/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */\nfunction max(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseGt)\n    : undefined;\n}\n\nmodule.exports = max;\n","var isSymbol = require('./isSymbol');\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseExtremum;\n","/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nmodule.exports = baseGt;\n"],"sourceRoot":""}