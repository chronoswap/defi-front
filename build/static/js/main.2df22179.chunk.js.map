{"version":3,"sources":["config/index.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","state/toasts/index.ts","components/Tags.tsx","hooks/useAuth.ts","utils/getRpcUrl.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","hooks/useRefresh.ts","config/constants/meta.ts","components/layout/Page.tsx","state/block/index.ts","state/prices/index.ts","contexts/RefreshContext.tsx","utils/web3React.ts","utils/wallet.ts","contexts/Localisation/translationsContext.ts","config/constants/contracts.ts","utils/addressHelpers.ts","config/constants/tokens.ts","components/UnlockButton.tsx","views/Home/components/CardBusdValue.tsx","hooks/useHarvest.ts","views/Home/components/CardValue.tsx","config/constants/index.ts","hooks/useApprove.ts","hooks/useStake.ts","hooks/useUnstake.ts","utils/apy.ts","components/layout/Container.tsx","components/layout/Flex.tsx","state/actions.ts","hooks/useI18n.ts","config/constants/types.ts","state/hooks.ts","hooks/useContract.ts","state/index.ts","utils/callHelpers.ts","utils/multicall.ts","utils/contractHelpers.ts","hooks/useWeb3.ts","config/constants/pools.ts","utils/formatBalance.ts","config/constants/farms.ts","utils/web3.ts","hooks/useEagerConnect.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","components/PageLoader.tsx","components/EasterEgg/EasterEgg.tsx","views/Pools/components/Card.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Coming.tsx","components/Label/Label.tsx","components/Balance.tsx","components/TokenInput/TokenInput.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Syrup.tsx","routerHistory.ts","App.tsx","Providers.tsx","index.tsx","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts"],"names":["BigNumber","config","EXPONENTIAL_AT","DECIMAL_PLACES","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","BASE_URL","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","LOTTERY_MAX_NUMBER_OF_TICKETS","LOTTERY_TICKET_PRICE","StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","toastsSlice","createSlice","name","initialState","data","reducers","push","state","action","payload","toastIndex","findIndex","toast","id","splice","unshift","remove","clear","actions","CoreTag","variant","outline","startIcon","color","CommunityTag","BinanceTag","DualTag","useAuth","useWeb3React","activate","deactivate","toastError","useToast","login","useCallback","connectorID","connector","connectorsByName","error","a","UnsupportedChainIdError","setupNetwork","window","localStorage","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","logout","nodes","process","getNodeUrl","randomIndex","random","fetchFarms","Promise","all","farmsConfig","farmConfig","lpAddress","getAddress","lpAddresses","calls","address","token","params","quoteToken","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","lpTotalInQuoteToken","pow","times","tokenAmount","quoteTokenAmount","masterchefABI","pid","info","totalAllocPoint","allocPoint","_hex","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","fetchFarmUserAllowances","account","masterChefAddress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","farmsSlice","setFarmsPublicData","liveFarmsData","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","useRefresh","RefreshContext","fastRefresh","fast","slowRefresh","slow","DEFAULT_META","title","description","image","customMeta","StyledPage","Container","mediaQueries","sm","lg","PageMeta","pathname","useLocation","cakePriceUsd","usePriceCakeBusd","cakePriceUsdDisplay","eq","toNumber","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","pageMeta","pageTitle","join","property","content","Page","blockSlice","currentBlock","initialBlock","setBlock","fetchPrices","createAsyncThunk","fetch","response","json","updated_at","Object","keys","reduce","accum","toLowerCase","parseFloat","price","pricesSlice","isLoading","lastUpdated","extraReducers","builder","addCase","pending","fulfilled","createContext","RefreshContextProvider","useState","setSlow","setFast","useEffect","interval","setInterval","prev","clearInterval","Provider","value","rpcUrl","chainId","parseInt","injected","InjectedConnector","supportedChainIds","walletconnect","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","provider","ethereum","request","method","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","console","registerToken","tokenAddress","tokenSymbol","tokenImage","type","options","tokenAdded","defaultTranslationState","translations","setTranslations","TranslationsContext","97","56","1337","check","getCakeAddress","tokens","cake","addresses","getMulticallAddress","getWbnbAddress","wbnb","getLotteryAddress","getLotteryTicketAddress","getPancakeProfileAddress","getPancakeRabbitsAddress","getChronostoneAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","bnb","projectLink","busd","syrup","bunny","dfd","alpaca","xed","lto","tkn6","tkn7","tkn8","tkn9","tkn10","tkn11","tkn12","tkn13","tkn14","tkn15","tkn16","tkn17","tkn18","tkn19","tkn20","UnlockButton","TranslateString","useI18n","onPresentConnectModal","useWalletModal","onClick","CardBusdValue","fontSize","lineHeight","prefix","bold","useHarvest","farmPid","useAppDispatch","masterChefContract","useMasterchef","onReward","harvest","txHash","useAllHarvest","farmPids","harvestPromises","useSousHarvest","sousId","isUsingBnb","sousChefContract","useSousChef","handleHarvest","soushHarvestBnb","soushHarvest","updateUserPendingReward","updateUserBalance","CardValue","useCountUp","start","end","duration","separator","countUp","update","updateValue","useRef","current","style","communityFarms","filter","isCommunity","useApprove","lpContract","onApprove","approve","tx","useSousApprove","updateUserAllowance","useLotteryApprove","cakeContract","useCake","lotteryContract","useLottery","useSousStake","handleStake","amount","stake","sousStakeBnb","sousStake","updateUserStakedBalance","onStake","useStake","SYRUPIDS","useSousUnstake","isOldSyrup","includes","onUnstake","unstake","sousEmergencyUnstake","sousUnstake","useUnstake","getPoolApy","stakingTokenPrice","rewardTokenPrice","totalStaked","tokenPerBlock","totalRewardPricePerYear","totalStakingTokenInPool","apy","isNaN","isFinite","getFarmApy","poolLiquidityUsd","FlexLayout","translationId","fallback","foundTranslation","translation","stringId","text","includesVariable","interpolatedText","isEmpty","dataKey","templateKey","RegExp","replace","PoolCategory","useFetchPublicData","fetchPoolsPublicDataAsync","web3","getWeb3NoAccount","eth","getBlockNumber","blockNumber","useFarms","useSelector","useFarmFromPid","useFarmFromSymbol","lpSymbol","useFarmUser","usePools","fetchPoolsUserDataAsync","pools","useMemo","pushToast","kebabCase","toastTypes","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","removeToast","clearToast","useFetchPriceList","useGetApiPrices","prices","useGetApiPrice","ZERO","cakeBnbFarm","bnbBusdFarm","bnbBusdPrice","useBlock","block","useERC20","useWeb3","getBep20Contract","useLP","getLpContract","getCakeContract","usePancakeRabbits","getPancakeRabbitContract","getLotteryContract","useLotteryTicket","getLotteryTicketContract","getMasterchefContract","getSouschefContract","useBunnySpecialContract","getBunnySpecialContract","store","configureStore","devTools","reducer","farmsReducer","toasts","toastsReducer","poolsReducer","pricesReducer","blockReducer","useDispatch","methods","ethers","constants","MaxUint256","send","from","enterStaking","gas","on","transactionHash","deposit","leaveStaking","withdraw","emergencyWithdraw","abi","multi","Contract","MultiCallAbi","itf","Interface","calldata","call","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","getContract","web3NoAccount","bep20Abi","lpTokenAbi","getIfoContract","ifoAbi","poolsConfig","pool","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getPointCenterIfoContract","pointCenterIfo","cakeAbi","getProfileContract","profileABI","pancakeRabbitsAbi","getChronostoneContract","chronostoneAbi","getBunnyFactoryContract","bunnyFactoryAbi","bunnySpecialAbi","lotteryAbi","lotteryTicketAbi","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","library","refEth","Web3","setweb3","stakingToken","earningToken","CORE","sortOrder","isFinished","getBalanceNumber","balance","displayBalance","dividedBy","getFullDisplayBalance","toFixed","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","_binanceChainListener","resolve","defineProperty","get","this","bsc","set","useEagerConnect","connectorId","getItem","isConnectorBinanceChain","isBinanceChainDefined","Reflect","has","then","GlobalStyle","createGlobalStyle","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","storedLangCode","storedLang","getStoredLang","r","translationApiResponse","log","catch","e","langObject","setItem","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeContext","label","icon","href","items","status","menuStatus","SOON","Menu","currentLang","langs","setLang","links","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","history","nextState","replaceState","location","reload","Component","ToastListener","onRemove","Wrapper","PageLoader","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","memo","Card","card","isActive","CardTitle","Balance","Label","textSubtle","DetailPlaceholder","Value","Footer","Coming","padding","role","aria-label","src","width","height","alt","as","external","mb","flex","StyledLabel","isDisabled","unit","previousValue","defaultProps","TokenInput","max","onChange","onSelectMax","justifyContent","minHeight","alignItems","placeholder","textTransform","mx","scale","DepositModal","onConfirm","onDismiss","tokenName","stakingTokenDecimals","val","setVal","pendingTx","setPendingTx","fullBalance","handleChange","currentTarget","handleSelectMax","disabled","WithdrawModal","CompoundModal","BalanceRow","Number","Title","ActionLink","OldSyrupTitle","hasBalance","target","StyledButton","button","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","COMMUNITY","StyledFooter","StyledDetailsButton","primary","Details","Row","Flex","FlexFull","TokenLink","CardFooter","startBlock","endBlock","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","blocksUntilStart","Math","blocksRemaining","imageSrc","ml","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","stakingLimit","isBnbPool","stakingTokenContract","requestedApproval","setRequestedApproval","stakingTokenBalance","pendingReward","earningsBusd","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","poolImage","toLocaleLowerCase","onPresentWithdraw","handleApprove","marginBottom","display","HarvestButton","PoolTabButtons","stakedOnly","setStakedOnly","useRouteMatch","url","isExact","ToggleWrapper","checked","activeIndex","Text","Hero","Farm","path","partition","finishedPools","openPools","stakedOnlyPools","Divider","exact","orderBy","createBrowserHistory","Home","lazy","Farms","Lottery","NotFound","Collectibles","App","warn","Global","component","iterations","Providers","ReactDOM","render","StrictMode","document","getElementById","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","bnbPools","nonMasterPools","masterChefABI","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingCake","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","blockLimits","totalStakings","liveData","blockLimit","totalStaking","stakingTokenBalances"],"mappings":"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","file":"static/js/main.2df22179.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 18 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 12 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in components/CakeStats.tsx = 22 (40 - Amount sent to burn pool)\n\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_EXCHANGE_URL = 'https://exchange.pancakeswap.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","/* eslint-disable no-param-reassign */\nimport { Toast } from '@chronoswap-packages/uikit'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ToastsState } from '../types'\n\nconst initialState: ToastsState = {\n  data: [],\n}\n\nexport const toastsSlice = createSlice({\n  name: 'toasts',\n  initialState,\n  reducers: {\n    push: (state: ToastsState, action: PayloadAction<Toast>) => {\n      const { payload } = action\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\n\n      // If id already matches remove it before adding it to the top of the stack\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n\n      state.data.unshift(payload)\n    },\n    remove: (state: ToastsState, action: PayloadAction<string>) => {\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\n\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n    },\n    clear: (state: ToastsState) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { clear, remove, push } = toastsSlice.actions\n\nexport default toastsSlice.reducer\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@chronoswap-packages/uikit'\n\nconst CoreTag = (props) => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon color=\"secondary\" />} {...props}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = (props) => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon color=\"secondary\" />} {...props}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = (props) => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon color=\"secondary\" />} {...props}>\n    Binance\n  </Tag>\n)\n\nconst DualTag = (props) => (\n  <Tag variant=\"textSubtle\" outline {...props}>\n    Dual\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, DualTag }\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@chronoswap-packages/uikit'\nimport { useToast } from 'state/hooks'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\n\nconst useAuth = () => {\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback((connectorID: ConnectorNames) => {\n    const connector = connectorsByName[connectorID]\n    if (connector) {\n      activate(connector, async (error: Error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork()\n          if (hasSetup) {\n            activate(connector)\n          }\n        } else {\n          window.localStorage.removeItem(connectorLocalStorageKey)\n          if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n            toastError('Provider Error', 'No provider was found')\n          } else if (\n            error instanceof UserRejectedRequestErrorInjected ||\n            error instanceof UserRejectedRequestErrorWalletConnect\n          ) {\n            if (connector instanceof WalletConnectConnector) {\n              const walletConnector = connector as WalletConnectConnector\n              walletConnector.walletConnectProvider = null\n            }\n            toastError('Authorization Error', 'Please authorize to access your account')\n          } else {\n            toastError(error.name, error.message)\n          }\n        }\n      })\n    } else {\n      toastError(\"Can't find connector\", 'The connector config is wrong')\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return { login, logout: deactivate }\n}\n\nexport default useAuth\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAddress = getAddress(farmConfig.lpAddresses)\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: getAddress(farmConfig.token.address),\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: getAddress(farmConfig.quoteToken.address),\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: lpAddress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAddress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: getAddress(farmConfig.token.address),\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: getAddress(farmConfig.quoteToken.address),\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBalanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      ] = await multicall(erc20, calls)\n\n      // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n      const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n      // Total value in staking in quote token value\n      const lpTotalInQuoteToken = new BigNumber(quoteTokenBalanceLP)\n        .div(new BigNumber(10).pow(18))\n        .times(new BigNumber(2))\n        .times(lpTokenRatio)\n\n      // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n      const tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n      const quoteTokenAmount = new BigNumber(quoteTokenBalanceLP)\n        .div(new BigNumber(10).pow(quoteTokenDecimals))\n        .times(lpTokenRatio)\n\n      const [info, totalAllocPoint] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        quoteTokenAmount: quoteTokenAmount.toJSON(),\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: quoteTokenAmount.div(tokenAmount).toJSON(),\n        poolWeight: poolWeight.toJSON(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'Chronoswap',\n  description:\n    'The AMM on BSC by user count! Earn ThoP and CHRON through yield farming or in the Chronostone game, then stake it in our Pools to earn more tokens! A platform you can trust.',\n  image: 'https://pancakeswap.finance/images/easter-battle.png',\n}\n\nexport const customMeta: { [key: string]: PageMeta } = {\n  '/competition': {\n    title: 'PancakeSwap Easter Battle',\n    description: 'Register now for the PancakeSwap Easter battle!',\n    image: 'https://pancakeswap.finance/images/easter-battle.png',\n  },\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { customMeta, DEFAULT_META } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.eq(0)\n    ? ''\n    : `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n  const pageMeta = customMeta[pathname] || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { PriceApiResponse, PriceApiThunk, PriceState } from 'state/types'\n\nconst initialState: PriceState = {\n  isLoading: false,\n  lastUpdated: null,\n  data: null,\n}\n\n// Thunks\nexport const fetchPrices = createAsyncThunk<PriceApiThunk>('prices/fetch', async () => {\n  const response = await fetch('https://api.pancakeswap.info/api/tokens')\n  const data = (await response.json()) as PriceApiResponse\n  // Return normalized token names\n  return {\n    updated_at: data.updated_at,\n    data: Object.keys(data.data).reduce((accum, token) => {\n      return {\n        ...accum,\n        [token.toLowerCase()]: parseFloat(data.data[token].price),\n      }\n    }, {}),\n  }\n})\n\nexport const pricesSlice = createSlice({\n  name: 'prices',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchPrices.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiThunk>) => {\n      state.isLoading = false\n      state.lastUpdated = action.payload.updated_at\n      state.data = action.payload.data\n    })\n  },\n})\n\nexport default pricesSlice.reducer\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@chronoswap-packages/uikit'\nimport Web3 from 'web3'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): Web3 => {\n  return provider\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = (window as WindowChain).ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: ['https://bscscan.com/'],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string,\n) => {\n  const tokenAdded = await (window as WindowChain).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","export default {\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n    1337: '0x8f6DC524242A26399d81CAFF101db95C9d0232D8',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lottery: {\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\n  },\n  lotteryNFT: {\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n    1337: '0xc34175A79ACca40392bECD22ff10fAeBFE780Ae7',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  chronostone: {\n    56: '',\n    97: '',\n    1337: '0xBe0B0f08A599F07699E98A9D001084e97b9a900A',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n}\n","import addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address, check?: boolean): string => {\n  const mainNetChainId = 56\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  if (check) {\n    return address[mainNetChainId]\n  }\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.mulltiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryAddress = () => {\n  return getAddress(addresses.lottery)\n}\nexport const getLotteryTicketAddress = () => {\n  return getAddress(addresses.lotteryNFT)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getChronostoneAddress = () => {\n  return getAddress(addresses.chronostone)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\n","const tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'ONEK',\n    address: {\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n      1337: '0x646A336CD183dc947D3AdbEfb19c3cF637720318',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n      1337: '0x21a59654176f2689d12E828B77a783072CD26680',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n      1337: '0x0aEE5241c9BA3d193A70e6D11Dd5d91A00ECDfeC',\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xc9849e6fdb743d08faee3e34dd2d1bc69ea11a51',\n      1337: '0xCfEB869F69431e42cdB54A4F4f105C19C080A601',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n      1337: '0x254dffcd3277C0b1660F6d42EFbB754edaBAbC2B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8f0528ce5ef7b51152a59745befdd91d97091d2f',\n      1337: '0xC89Ce4735882C9F0f0FE26686c53074E09B0D550',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5a3f4a8008c4ccdd1b942b121c8b1944f1f',\n      1337: '0xD833215cBcc3f914bD1C9ece3EE7BF8B14f841bb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857b222fc79e1cbbf8ca5f78cb133d1b7cf34bbd',\n      1337: '0x9561C133DD8580860B6b7E504bC5Aa500f0f06a7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  wbnb: {\n    symbol: 'WBNB',\n    address: {\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n      1337: '0x5f8e26fAcC23FA4cbd87b8d9Dbbd33D5047abDE1',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  tkn6: {\n    symbol: 'TKN6',\n    address: {\n      56: '',\n      1337: '0xe982E462b094850F12AF94d21D470e21bE9D0E9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  tkn7: {\n    symbol: 'TKN7',\n    address: {\n      56: '',\n      1337: '0x59d3631c86BbE35EF041872d502F218A39FBa150',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  tkn8: {\n    symbol: 'TKN8',\n    address: {\n      56: '',\n      1337: '0x0290FB167208Af455bB137780163b7B7a9a10C16',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  tkn9: {\n    symbol: 'TKN9',\n    address: {\n      56: '',\n      1337: '0x9b1f7F645351AF3631a656421eD2e40f2802E6c0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  tkn10: {\n    symbol: 'TKN10',\n    address: {\n      56: '',\n      1337: '0x67B5656d60a809915323Bf2C40A8bEF15A152e3e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  tkn11: {\n    symbol: 'TKN11',\n    address: {\n      56: '',\n      1337: '0x2612Af3A521c2df9EAF28422Ca335b04AdF3ac66',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  tkn12: {\n    symbol: 'TKN12',\n    address: {\n      56: '',\n      1337: '0xA57B8a5584442B467b4689F1144D269d096A3daF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  tkn13: {\n    symbol: 'TKN13',\n    address: {\n      56: '',\n      1337: '0x26b4AFb60d6C903165150C6F0AA14F8016bE4aec',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  tkn14: {\n    symbol: 'TKN14',\n    address: {\n      56: '',\n      1337: '0x630589690929E9cdEFDeF0734717a9eF3Ec7Fcfe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  tkn15: {\n    symbol: 'TKN15',\n    address: {\n      56: '',\n      1337: '0x0E696947A06550DEf604e82C26fd9E493e576337',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  tkn16: {\n    symbol: 'TKN16',\n    address: {\n      56: '',\n      1337: '0xDb56f2e9369E0D7bD191099125a3f6C370F8ed15',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  tkn17: {\n    symbol: 'TKN17',\n    address: {\n      56: '',\n      1337: '0xA94B7f0465E98609391C623d0560C5720a3f2D33',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  tkn18: {\n    symbol: 'TKN18',\n    address: {\n      56: '',\n      1337: '0x6eD79Aa1c71FD7BdBC515EfdA3Bd4e26394435cC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  tkn19: {\n    symbol: 'TKN19',\n    address: {\n      56: '',\n      1337: '0xb09bCc172050fBd4562da8b229Cf3E45Dc3045A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  tkn20: {\n    symbol: 'TKN20',\n    address: {\n      56: '',\n      1337: '0xFC628dd79137395F3C9744e33b1c5DE554D94882',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  }\n}\n\nexport default tokens\n","import React from 'react'\nimport { Button, useWalletModal } from '@chronoswap-packages/uikit'\nimport useAuth from 'hooks/useAuth'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import React from 'react'\nimport CardValue, { CardValueProps } from './CardValue'\n\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\n  return (\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"textSubtle\" prefix=\"~$\" bold={false} decimals={2} {...props} />\n  )\n}\n\nexport default CardBusdValue\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@chronoswap-packages/uikit'\n\nexport interface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  lineHeight?: string\n  prefix?: string\n  bold?: boolean\n  color?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({\n  value,\n  decimals,\n  fontSize = '40px',\n  lineHeight = '1',\n  prefix = '',\n  bold = true,\n  color = 'text',\n}) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.token.symbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWeb3React()\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\n    return tx\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      dispatch(fetchFarmUserDataAsync(account))\n    },\n    [account, dispatch],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmergencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23, 78]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmergencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK } from 'config'\n\n/**\n * Get the APY value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APY is NaN or infinite.\n */\nexport const getPoolApy = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apy.isNaN() || !apy.isFinite() ? null : apy.toNumber()\n}\n\n/**\n * Get farm APY value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApy = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\n  const yearlyCakeRewardAllocation = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR).times(poolWeight)\n  const apy = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  return apy.isNaN() || !apy.isFinite() ? null : apy.toNumber()\n}\n\nexport default null\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport { clear, remove, push } from './toasts'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { setBlock } from './block'\n","import { useContext } from 'react'\nimport { isEmpty } from 'lodash'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\ninterface ContextData {\n  [key: string]: number | string\n}\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string, data: ContextData = {}) => {\n    if (translations.length === 0) {\n      return fallback\n    }\n\n    const foundTranslation = translations.find((translation) => {\n      return translation.data.stringId === translationId\n    })\n\n    if (foundTranslation) {\n      const { text } = foundTranslation.data\n      const includesVariable = text.includes('%')\n\n      if (includesVariable) {\n        let interpolatedText = text\n\n        // If dynamic tags are found but no data was passed return the fallback\n        if (isEmpty(data)) {\n          return fallback\n        }\n\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey])\n        })\n\n        return interpolatedText\n      }\n\n      return text\n    }\n\n    return fallback\n  }\n}\n\nexport default useI18n\n","import { TranslatableText } from 'state/types'\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  tokenSymbol: string\n  releaseBlockNumber: number\n  campaignId?: string\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  1337?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  stakingLimit?: number\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  images: NftImages\n  sortOrder: number\n  bunnyId: number\n  video?: NftVideo\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description: string\n  image: string\n}\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@chronoswap-packages/uikit'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  push as pushToast,\n  remove as removeToast,\n  clear as clearToast,\n  setBlock,\n} from './actions'\nimport { State, Farm, Pool, PriceState } from './types'\nimport { fetchPrices } from './prices'\n\nexport const useFetchPublicData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n\n  useEffect(() => {\n    const web3 = getWeb3NoAccount()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Toasts\nexport const useToast = () => {\n  const dispatch = useAppDispatch()\n  const helpers = useMemo(() => {\n    const push = (toast: Toast) => dispatch(pushToast(toast))\n\n    return {\n      toastError: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\n      },\n      toastInfo: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\n      },\n      toastSuccess: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\n      },\n      toastWarning: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\n      },\n      push,\n      remove: (id: string) => dispatch(removeToast(id)),\n      clear: () => dispatch(clearToast()),\n    }\n  }, [dispatch])\n\n  return helpers\n}\n\n// Prices\nexport const useFetchPriceList = () => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchPrices())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useGetApiPrices = () => {\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\n  return prices\n}\n\nexport const useGetApiPrice = (token: string) => {\n  const prices = useGetApiPrices()\n  if (!prices) {\n    return null\n  }\n  return prices[token.toLowerCase()]\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const ZERO = new BigNumber(0)\n  const cakeBnbFarm = useFarmFromPid(2) // TODO definir las granjas que usaremos para el precio\n  const bnbBusdFarm = useFarmFromPid(1)\n\n  const bnbBusdPrice = bnbBusdFarm.tokenPriceVsQuote ? new BigNumber(1).div(bnbBusdFarm.tokenPriceVsQuote) : ZERO\n  const cakeBusdPrice = cakeBnbFarm.tokenPriceVsQuote ? bnbBusdPrice.times(cakeBnbFarm.tokenPriceVsQuote) : ZERO\n\n  return cakeBusdPrice\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { useMemo } from 'react'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getBep20Contract,\n  getLpContract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoContract,\n  getLotteryContract,\n  getLotteryTicketContract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n} from 'utils/contractHelpers'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoContract(address, web3), [address, web3])\n}\n\nexport const useERC20 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\n}\n\nexport const useLP = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getLpContract(address, web3), [address, web3])\n}\n\nexport const useCake = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeContract(web3), [web3])\n}\n\nexport const useBunnyFactory = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\n}\n\nexport const usePancakeRabbits = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\n}\n\nexport const useProfile = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getProfileContract(web3), [web3])\n}\n\nexport const useLottery = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryContract(web3), [web3])\n}\n\nexport const useLotteryTicket = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\n}\n\nexport const useMasterchef = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getMasterchefContract(web3), [web3])\n}\n\nexport const useSousChef = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\n}\n\nexport const useBunnySpecialContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\n}\n\nexport const useClaimRefundContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getClaimRefundContract(web3), [web3])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getTradingCompetitionContract(web3), [web3])\n}\n\nexport const useEasterNftContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getEasterNftContract(web3), [web3])\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport toastsReducer from './toasts'\nimport poolsReducer from './pools'\nimport pricesReducer from './prices'\nimport blockReducer from './block'\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    toasts: toastsReducer,\n    pools: poolsReducer,\n    prices: pricesReducer,\n    block: blockReducer,\n  },\n})\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport default store\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .enterStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals = 18, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0x453a75908fb5a36d482d5f8fe88eca836f32ead5') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmergencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking('0')\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // function getName on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport web3NoAccount from 'utils/web3'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getChronostoneAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoAbi from 'config/abi/ifo.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport chronostoneAbi from 'config/abi/Chronostone.json'\n\nconst getContract = (abi: any, address: string, web3?: Web3) => {\n  const _web3 = web3 ?? web3NoAccount\n  return new _web3.eth.Contract((abi as unknown) as AbiItem, address)\n}\n\nexport const getBep20Contract = (address: string, web3?: Web3) => {\n  return getContract(bep20Abi, address, web3)\n}\nexport const getLpContract = (address: string, web3?: Web3) => {\n  return getContract(lpTokenAbi, address, web3)\n}\nexport const getIfoContract = (address: string, web3?: Web3) => {\n  return getContract(ifoAbi, address, web3)\n}\nexport const getSouschefContract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), web3)\n}\nexport const getPointCenterIfoContract = (web3?: Web3) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\n}\nexport const getCakeContract = (web3?: Web3) => {\n  return getContract(cakeAbi, getCakeAddress(), web3)\n}\nexport const getProfileContract = (web3?: Web3) => {\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\n}\nexport const getPancakeRabbitContract = (web3?: Web3) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\n}\nexport const getChronostoneContract = (web3?: Web3) => {\n  return getContract(chronostoneAbi, getChronostoneAddress(), web3)\n}\nexport const getBunnyFactoryContract = (web3?: Web3) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\n}\nexport const getBunnySpecialContract = (web3?: Web3) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\n}\nexport const getLotteryContract = (web3?: Web3) => {\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\n}\nexport const getLotteryTicketContract = (web3?: Web3) => {\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\n}\nexport const getMasterchefContract = (web3?: Web3) => {\n  return getContract(masterChef, getMasterChefAddress(), web3)\n}\nexport const getClaimRefundContract = (web3?: Web3) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\n}\nexport const getTradingCompetitionContract = (web3?: Web3) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), web3)\n}\nexport const getEasterNftContract = (web3?: Web3) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), web3)\n}\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { getWeb3NoAccount } from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      1337: '0x8f6DC524242A26399d81CAFF101db95C9d0232D8',\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n  },\n  {\n    sousId: 1,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bunny,\n    contractAddress: {\n      97: '',\n      1337: '0xE5ABbfaE7d5eD2990A93d1b94619521E6cc333A3',\n      56: '0xaDdAE5f4dB84847ac9d947AED1304A8e7D19f7cA',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 2,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dfd,\n    contractAddress: {\n      97: '',\n      1337: '0xeE5dA784f21d50D2DF16e111263c2c3443C5F6C7',\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10',\n    isFinished: false,\n  },\n  {\n    sousId: 3,\n    stakingToken: tokens.cake,\n    earningToken: tokens.alpaca,\n    contractAddress: {\n      97: '',\n      1337: '0xBA3036428AEAEaE12850Bbd38EF176Da0b6e2AAC',\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10',\n    isFinished: false,\n  },\n  {\n    sousId: 4,\n    stakingToken: tokens.cake,\n    earningToken: tokens.xed,\n    contractAddress: {\n      97: '',\n      1337: '0xb46573e796C59564701c6a1cF18c2D65DdDdc537',\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10',\n    isFinished: false,\n  },\n  {\n    sousId: 5,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lto,\n    contractAddress: {\n      97: '',\n      1337: '0xd593586176684ECe9530b79D81AEB62744D32066',\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10',\n    isFinished: false,\n  },\n  {\n    sousId: 6,\n    stakingToken: tokens.cake,\n    earningToken: tokens.tkn6,\n    contractAddress: {\n      97: '',\n      1337: '0xF2765D470625bAb652FA481e76c3c4fA4c087c45',\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10',\n    isFinished: false,\n  },\n  {\n    sousId: 7,\n    stakingToken: tokens.cake,\n    earningToken: tokens.tkn7,\n    contractAddress: {\n      97: '',\n      1337: '0x884348aBbe8bCAfc890F32376F680BAF703725f2',\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10',\n    isFinished: false,\n  },\n  {\n    sousId: 8,\n    stakingToken: tokens.cake,\n    earningToken: tokens.tkn8,\n    contractAddress: {\n      97: '',\n      1337: '0x95CF362C7a2b7AD6CadEC1CA06e4577384252B24',\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10',\n    isFinished: false,\n  },\n  {\n    sousId: 9,\n    stakingToken: tokens.cake,\n    earningToken: tokens.tkn9,\n    contractAddress: {\n      97: '',\n      1337: '0x70837BBE43F6C0303b3b9Acb5C70e2FdbFbdFcBD',\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10',\n    isFinished: false,\n  },\n  {\n    sousId: 10,\n    stakingToken: tokens.cake,\n    earningToken: tokens.tkn10,\n    contractAddress: {\n      97: '',\n      1337: '0x5019F1aB8474398B2636B4a48f6c3B9E989cDf6B',\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10',\n    isFinished: false,\n  }\n]\n\nexport default pools\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    lpSymbol: 'ONEK',\n    lpAddresses: {\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n      1337: '0x646A336CD183dc947D3AdbEfb19c3cF637720318',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 8,\n    lpSymbol: 'ONEK-BNB LP',\n    lpAddresses: {\n      97: '0xe70b7523f4bffa1f2e88d2ba709afd026030f412',\n      1337: '0xd4F918e917C5fFF3366a8A9406c4D51358e472AD',\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.bunny,\n  },\n  {\n    pid: 9,\n    lpSymbol: 'BNB-BUSD LP',\n    lpAddresses: {\n      97: '0xe70b7523f4bffa1f2e88d2ba709afd026030f412',\n      1337: '0xF087E0c81B9b34c1e154A651B8C11d8Ef4e1e715',\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.bunny,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'ONEK-BUNNY LP',\n    lpAddresses: {\n      97: '0xe70b7523f4bffa1f2e88d2ba709afd026030f412',\n      1337: '0x7c2bf1CD417FD020fa47a777c601459261Bf612d',\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.bunny,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'ONEK-DFD LP',\n    lpAddresses: {\n      97: '0xe70b7523f4bffa1f2e88d2ba709afd026030f412',\n      1337: '0x75803d67ce43d06C6B8b765ef1a2064baC4841A6',\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.dfd,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'ONEK-ALPACA LP',\n    lpAddresses: {\n      97: '0xe70b7523f4bffa1f2e88d2ba709afd026030f412',\n      1337: '0xf3b49459Eb3a2b22c930802B57780Ef275Ea1595',\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.alpaca,\n  },\n  {\n    pid: 4,\n    lpSymbol: 'ONEK-XED LP',\n    lpAddresses: {\n      97: '0xe70b7523f4bffa1f2e88d2ba709afd026030f412',\n      1337: '0x8f19eDE19cEB2a6d4f124242C00CaF06e6006F87',\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.xed,\n  },\n  {\n    pid: 5,\n    lpSymbol: 'ONEK-LTO LP',\n    lpAddresses: {\n      97: '0xe70b7523f4bffa1f2e88d2ba709afd026030f412',\n      1337: '0x1A82B66F9860C92B6Cb68d5189F0DCF7c03f24fd',\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.lto,\n  },\n  {\n    pid: 6,\n    lpSymbol: 'ONEK-TKN6 LP',\n    lpAddresses: {\n      97: '0xe70b7523f4bffa1f2e88d2ba709afd026030f412',\n      1337: '0x58d198f113524d93430622baDdD2390ebAd114E3',\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.tkn6,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'ONEK-TKN7 LP',\n    lpAddresses: {\n      97: '0xe70b7523f4bffa1f2e88d2ba709afd026030f412',\n      1337: '0xe8355B5A04D3829FF361295b671Ab9Dde4a3d530',\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.tkn7,\n  },\n]\n\nexport default farms\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\nconst web3NoAccount = new Web3(httpProvider)\n\nconst getWeb3NoAccount = () => {\n  return web3NoAccount\n}\n\nexport { getWeb3NoAccount }\nexport default web3NoAccount\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@chronoswap-packages/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@chronoswap-packages/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const BN = { code: 'bn', language: 'বাংলা' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PL = { code: 'pl', language: 'Polski' }\nexport const PTPT = { code: 'pt-PT', language: 'Português (Portugal)' }\nexport const PTBR = { code: 'pt-BR', language: 'Português (Brazil)' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const ESES = { code: 'es', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  // AR,\n  // BN,\n  // ZHCN,\n  // ZHTW,\n  // NL,\n  // FIL,\n  // FI,\n  // DE,\n  // FR,\n  // EL,\n  // HI,\n  // HU,\n  // ID,\n  // IT,\n  // JA,\n  // KO,\n  // PL,\n  // PTPT,\n  // PTBR,\n  // RO,\n  // RU,\n  ESES,\n  // SVSE,\n  // TA,\n  // TR,\n  // UK,\n  // VI,\n]\n","import React, { useState, useEffect } from 'react'\n// import { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\n// const fileId = 8\n// const projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\n// const stringTranslationsApi = new StringTranslations({\n//   token: process.env.REACT_APP_CROWDIN_APIKEY,\n// })\n//\n// const fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n//   return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 400)\n// }\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(null)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then((r) => r.json())\n      // fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            console.log(translationApiResponse)\n            setTranslations([])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          setTranslations([])\n          console.error('Error while loading translations', e)\n        })\n    }\n  }, [selectedLanguage])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@chronoswap-packages/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeContext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry, menuStatus } from '@chronoswap-packages/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'http://3.143.210.104',\n      },\n      {\n        label: 'Liquidity',\n        href: 'http://3.143.210.104/#/pool',\n      },\n    ],\n  },\n  {\n    label: 'Farms',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Pools',\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: 'Collectibles',\n    icon: 'NftIcon',\n    href: '/collectibles',\n    status: menuStatus.SOON,\n  },\n  {\n    label: 'Info (Pancake)',\n    icon: 'InfoIcon',\n    items: [\n      {\n        label: 'Overview',\n        href: 'https://pancakeswap.info',\n      },\n      {\n        label: 'Tokens',\n        href: 'https://pancakeswap.info/tokens',\n      },\n      {\n        label: 'Pairs',\n        href: 'https://pancakeswap.info/pairs',\n      },\n      {\n        label: 'Accounts',\n        href: 'https://pancakeswap.info/accounts',\n      },\n    ],\n  },\n  {\n    label: 'More',\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: 'Contact',\n        href: 'https://docs.pancakeswap.finance/contact-us',\n        status: menuStatus.SOON,\n      },\n      {\n        label: 'Voting (SOON?)',\n        href: 'https://voting.pancakeswap.finance',\n        status: menuStatus.SOON,\n      },\n      {\n        label: 'Github',\n        href: 'https://github.com/chronoswap',\n      },\n      {\n        label: 'Docs',\n        href: 'https://docs.pancakeswap.finance',\n        status: menuStatus.SOON,\n      },\n      {\n        label: 'Blog',\n        href: 'https://pancakeswap.medium.com',\n        status: menuStatus.SOON,\n      },\n      {\n        label: 'Merch',\n        href: 'https://pancakeswap.creator-spring.com/',\n        status: menuStatus.SOON,\n      },\n    ],\n  },\n]\nexport default config\n","import React, { useContext } from 'react'\nimport { Menu as UikitMenu } from '@chronoswap-packages/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { ToastContainer, Toast } from '@chronoswap-packages/uikit'\nimport { useToast } from 'state/hooks'\nimport { State } from 'state/types'\n\nconst ToastListener = () => {\n  const toasts: Toast[] = useSelector((state: State) => state.toasts.data)\n  const { remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@chronoswap-packages/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@chronoswap-packages/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Image, Button } from '@chronoswap-packages/uikit'\nimport { CommunityTag } from 'components/Tags'\nimport useI18n from 'hooks/useI18n'\nimport Card from './Card'\nimport CardTitle from './CardTitle'\n\nconst Balance = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 40px;\n  font-weight: 600;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  margin-bottom: 16px;\n`\n\nconst DetailPlaceholder = styled.div`\n  display: flex;\n  font-size: 14px;\n`\nconst Value = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 14px;\n`\n\nconst Footer = styled.div`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  padding: 24px;\n`\nconst Coming: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <div style={{ padding: '24px' }}>\n        <CardTitle>\n          {TranslateString(414, 'Your Project?')}{' '}\n          <span role=\"img\" aria-label=\"eyes\">\n            👀\n          </span>\n        </CardTitle>\n        <Image src=\"/images/bunny-question.svg\" width={64} height={64} alt=\"Your project here\" />\n        <Balance>???</Balance>\n        <Label>{TranslateString(416, 'Create a pool for your token')}</Label>\n        <Button\n          variant=\"secondary\"\n          as=\"a\"\n          href=\"https://docs.google.com/forms/d/e/1FAIpQLScGdT5rrVMr4WOWr08pvcroSeuIOtEJf1sVdQGVdcAOqryigQ/viewform\"\n          external\n          width=\"100%\"\n          mb=\"16px\"\n        >\n          {TranslateString(418, 'Apply Now')}\n        </Button>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          <Value>??</Value>\n        </DetailPlaceholder>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label=\"syrup\">\n              🥞{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Value>??? CAKE</Value>\n        </DetailPlaceholder>\n      </div>\n      <Footer>\n        <CommunityTag />\n      </Footer>\n    </Card>\n  )\n}\n\nexport default Coming\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text } from '@chronoswap-packages/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text bold color={isDisabled ? 'textDisabled' : color} fontSize={fontSize}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import React from 'react'\nimport { Box, Button, Flex, Text, Input, InputProps } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  value: string\n  onSelectMax?: () => void\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Box>\n      <Flex justifyContent=\"flex-end\" minHeight=\"21px\" mb=\"8px\">\n        <Text color=\"primary\" fontSize=\"14px\">\n          {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n        </Text>\n      </Flex>\n      <Flex alignItems=\"center\">\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\n        <Flex alignItems=\"center\">\n          <Text bold color=\"primary\" textTransform=\"uppercase\" mx=\"8px\">\n            {symbol}\n          </Text>\n          <div>\n            <Button scale=\"sm\" onClick={onSelectMax}>\n              {TranslateString(452, 'Max')}\n            </Button>\n          </div>\n        </Flex>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default TokenInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@chronoswap-packages/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string, decimals: number) => void\n  onDismiss?: () => void\n  tokenName?: string\n  stakingTokenDecimals?: number\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({\n  max,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  stakingTokenDecimals = 18,\n}) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, stakingTokenDecimals)\n  }, [max, stakingTokenDecimals])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val, stakingTokenDecimals)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@chronoswap-packages/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string, decimals: number) => void\n  onDismiss?: () => void\n  tokenName?: string\n  stakingTokenDecimals?: number\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({\n  onConfirm,\n  onDismiss,\n  max,\n  tokenName = '',\n  stakingTokenDecimals = 18,\n}) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, stakingTokenDecimals)\n  }, [max, stakingTokenDecimals])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val, stakingTokenDecimals)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@chronoswap-packages/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string, decimals: number) => void\n  onDismiss?: () => void\n  tokenName?: string\n  stakingTokenDecimals?: number\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({\n  earnings,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  stakingTokenDecimals = 18,\n}) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings, stakingTokenDecimals)\n  }, [earnings, stakingTokenDecimals])\n\n  return (\n    <Modal\n      title={`${TranslateString(704, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          width=\"100%\"\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance, stakingTokenDecimals)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport { Flex, MetamaskIcon } from '@chronoswap-packages/uikit'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { useBlock } from 'state/hooks'\nimport { PoolCategory } from 'config/constants/types'\nimport { registerToken } from 'utils/wallet'\nimport { BASE_URL } from 'config'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  decimals: number\n  totalStaked: BigNumber\n  tokenName: string\n  tokenAddress: string\n  tokenDecimals: number\n  startBlock: number\n  endBlock: number\n  isFinished: boolean\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled(Flex)`\n  align-items: center;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  decimals,\n  tokenAddress,\n  totalStaked,\n  tokenName,\n  tokenDecimals,\n  isFinished,\n  startBlock,\n  endBlock,\n  poolCategory,\n}) => {\n  const { currentBlock } = useBlock()\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenName.toLowerCase()}.png`\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row mb=\"4px\">\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  🥞{' '}\n                </span>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked, decimals)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row mb=\"4px\">\n              <FlexFull>\n                <Label>{TranslateString(1212, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row mb=\"4px\">\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          {tokenAddress && (\n            <Flex mb=\"4px\">\n              <TokenLink onClick={() => registerToken(tokenAddress, tokenName, tokenDecimals, imageSrc)}>\n                Add {tokenName} to Metamask\n              </TokenLink>\n              <MetamaskIcon height={15} width={15} ml=\"4px\" />\n            </Flex>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@chronoswap-packages/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getPoolApy } from 'utils/apy'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { PoolCategory } from 'config/constants/types'\nimport tokens from 'config/constants/tokens'\nimport { Pool } from 'state/types'\nimport { useGetApiPrice, usePriceCakeBusd } from 'state/hooks'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\nimport CardBusdValue from '../../Home/components/CardBusdValue'\n\ninterface HarvestProps {\n  pool: Pool\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    harvest,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { account } = useWeb3React()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  // APY\n  const stakingTokenPrice = usePriceCakeBusd().toNumber()\n  let rewardTokenPrice = useGetApiPrice(earningToken.address ? getAddress(earningToken.address, true) : '') // TODO este segundo argumento habrá que quitarlo\n  rewardTokenPrice = sousId === 0 ? stakingTokenPrice : rewardTokenPrice\n  const apy = getPoolApy(\n    stakingTokenPrice,\n    rewardTokenPrice,\n    getBalanceNumber(pool.totalStaked, stakingToken.decimals),\n    parseFloat(pool.tokenPerBlock),\n  )\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n  const earningsBusd = earnings.times(rewardTokenPrice)\n\n  const isOldSyrup = stakingToken.symbol === tokens.syrup.symbol\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(earningToken.decimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingToken.symbol} (${stakingLimit} max)` : stakingToken.symbol}\n      stakingTokenDecimals={stakingToken.decimals}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingToken.symbol} />,\n  )\n  const poolImage = `${pool.earningToken.symbol}-${pool.stakingToken.symbol}.svg`.toLocaleLowerCase()\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      onConfirm={onUnstake}\n      tokenName={stakingToken.symbol}\n      stakingTokenDecimals={stakingToken.decimals}\n    />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {earningToken.symbol} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/pools/${poolImage}`} alt={earningToken.symbol} width={64} height={64} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? TranslateString(999, 'Collecting') : TranslateString(562, 'Harvest')}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, earningToken.decimals)} isDisabled={isFinished} />\n            {sousId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(704, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${earningToken.symbol} earned`)} />\n        <CardBusdValue value={getBalanceNumber(earningsBusd, earningToken.decimals)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} width=\"100%\">\n                  {`Approve ${stakingToken.symbol}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0', stakingToken.decimals)\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingToken.symbol}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"white\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div>{TranslateString(736, 'APR')}:</div>\n          {isFinished || isOldSyrup || !apy ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div>{TranslateString(384, 'Your Stake')}:</div>\n          <Balance\n            fontSize=\"14px\"\n            isDisabled={isFinished}\n            value={getBalanceNumber(stakedBalance, stakingToken.decimals)}\n          />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={earningToken.projectLink}\n        decimals={stakingToken.decimals}\n        totalStaked={totalStaked}\n        startBlock={startBlock}\n        endBlock={endBlock}\n        isFinished={isFinished}\n        poolCategory={poolCategory}\n        tokenName={earningToken.symbol}\n        tokenAddress={earningToken.address ? getAddress(earningToken.address) : ''}\n        tokenDecimals={earningToken.decimals}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly }) => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ToggleWrapper>\n        <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} />\n        <Text> {TranslateString(999, 'Staked only')}</Text>\n      </ToggleWrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(1198, 'Live')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(388, 'Finished')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 32px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React, { useState, useMemo } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading } from '@chronoswap-packages/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport { usePools, useBlock } from 'state/hooks'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const pools = usePools(account)\n  const { currentBlock } = useBlock()\n  const [stakedOnly, setStakedOnly] = useState(false)\n\n  const [finishedPools, openPools] = useMemo(\n    () => partition(pools, (pool) => pool.isFinished || currentBlock > pool.endBlock),\n    [currentBlock, pools],\n  )\n  const stakedOnlyPools = useMemo(\n    () => openPools.filter((pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)),\n    [openPools],\n  )\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" scale=\"xxl\" mb=\"16px\">\n            {TranslateString(738, 'Syrup Pool')}\n          </Heading>\n          <ul>\n            <li>{TranslateString(580, 'Stake CAKE to earn new tokens.')}</li>\n            <li>{TranslateString(486, 'You can unstake at any time.')}</li>\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\n          </ul>\n        </div>\n        <img src=\"/images/syrup.png\" alt=\"SYRUP POOL icon\" width={410} height={191} />\n      </Hero>\n      <PoolTabButtons stakedOnly={stakedOnly} setStakedOnly={setStakedOnly} />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {stakedOnly\n              ? orderBy(stakedOnlyPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)\n              : orderBy(openPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)}\n            <Coming />\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import React, { useEffect, lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@chronoswap-packages/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { useFetchPriceList, useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport Pools from './views/Pools'\nimport history from './routerHistory'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  // Monkey patch warn() because of web3 flood\n  // To be removed when web3 1.3.5 is released\n  useEffect(() => {\n    console.warn = () => null\n  }, [])\n\n  useEagerConnect()\n  useFetchPublicData()\n  useFetchPriceList()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            {/* Redirect */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider } from '@chronoswap-packages/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <HelmetProvider>\n          <ThemeContextProvider>\n            <LanguageContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </LanguageContextProvider>\n          </ThemeContextProvider>\n        </HelmetProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3NoAccount()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingCake('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n"],"sourceRoot":""}