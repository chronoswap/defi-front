{"version":3,"sources":["hooks/useTokenBalance.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","contexts/PastLotteryDataContext.tsx","utils/lotteryUtils.ts","hooks/useGetLotteryHasDrawn.ts","hooks/useTimer.ts","utils/getTimePeriods.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","hooks/useTickets.ts","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","hooks/useBuyLottery.ts","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","hooks/useApproval.ts","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","hooks/useAllowance.ts","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","a","cakeContract","getCakeContract","methods","call","supply","BigNumber","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","web3","useWeb3","contract","getBep20Contract","balanceOf","res","fetchBalance","useTokenBalance","account","useWeb3React","fastRefresh","Wrapper","styled","div","theme","colors","primary","ExpandableSectionButton","onClick","expanded","TranslateString","useI18n","aria-label","role","color","bold","defaultProps","React","createContext","mostRecentLotteryNumber","historyError","historyData","multiCall","abi","calls","getWeb3NoAccount","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","length","i","newCalls","slice","calldata","map","toLowerCase","encodeFunctionData","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","lotteryContract","price","numbersList","times","pow","toString","send","from","on","tx","transactionHash","console","error","getTickets","ticketsContract","customLotteryNum","issueIndex","getTicketsAmount","calls1","Array","apply","options","address","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","eq","push","calls3","tickets","getLotteryStatus","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finalTokenIds","r","getTotalClaim","drawed","calls4","claim","reduce","p","c","sum","getTotalRewards","getMax","maxNumber","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","amount","LOTTERY_TICKET_PRICE","toNumber","getWinningNumbers","numbers","parseInt","historyNumbers","winningNumbers","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","useLottery","state","fetchLotteryStatus","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","setInterval","prevMillis","clearInterval","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getLotteryDrawStep","ProgressWrapper","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","LotteryProgress","timeUntilTicketSale","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","showProgressBunny","fontSize","Title","Heading","attrs","as","scale","secondary","Blurb","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","textSubtle","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","useLotteryTicket","useCallback","useWinningNumbers","setWinningNumbers","useMatchingRewardLength","matchingNumbers","setMatchingNumbers","matchedNumbaers","useTickets","lotteryNumber","setTickets","StyledLoading","Loading","RewardP","TicketsList","props","StyledButton","Button","spacing","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","rewardMatch","number","n","listItems","emoji","join","title","TICKETS","variant","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","onMultiClaim","lotteryTicketContract","txHash","useMultiClaimLottery","useModal","onPresentMyTickets","handleClaim","winnings","getBalanceNumber","toFixed","style","marginRight","width","disabled","TextWrapper","StyledText","Image","img","md","NoPrizesContent","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","UnlockButton","useApproval","onPresentApprove","requestedApproval","setRequestedApproval","onApprove","useLotteryApprove","handleApprove","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onChange","onSelectMax","value","alignItems","type","pattern","min","placeholder","size","toLocaleString","BuyTicketModal","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getFullDisplayBalance","maxTickets","onMultiBuy","useMultiBuyLottery","setMax","fetchMax","useMaxNumber","handleBuy","random","handleSelectMax","Number","LOTTERY_MAX_NUMBER_OF_TICKETS","e","currentTarget","validity","valid","Tips","num","Announce","Final","ModalActions","isInteger","WarningModal","CardActions","TicketCard","allowance","setAllowance","useCake","getLotteryAddress","fetchAllowance","useLotteryAllowance","cakeBalance","getCakeAddress","ticketsLength","PurchaseWarningModal","tokenName","onPresentBuy","isSecondCard","CardHeader","TicketCountWrapper","TicketActions","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","cakeBusdPrice","usePriceCakeBusd","getCakeBusdValue","multipliedBy","CardBusdValue","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","setRewards","useTotalRewards","lotteryPrizeAmountBusd","lotteryPrizeWithCommaSeparators","currentLotteryNumber","useContext","PastLotteryDataContext","mb","justifyContent","height","fontWeight","Link","Row","RabbitRow","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBox","RabbitBoxSmall","StyledCardHeader","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","responsive","marginLeft","href","target","LayoutWrapper","StyledImage","StyledLink","HowItWorks","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","fetch","response","json","data","Error","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","SearchWrapper","InputWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","isWarning","PastRoundCardError","message","LotteryCardHeading","valueToDisplay","children","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match1Ticket","match2Ticket","match3Ticket","poolSize","TicketRound","PancakeRoundIcon","oneTicketMatches","PastLotteryActions","PastRoundCard","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","Lottery","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","onItemClick","Divider","Provider"],"mappings":"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","file":"static/js/6.44cdb701.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { LOTTERY_TICKET_PRICE } from 'config'\nimport { AbiItem } from 'web3-utils'\nimport { getMulticallAddress } from './addressHelpers'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract.methods\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIndex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\n  const length = await getTicketsAmount(ticketsContract, account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (new BigNumber(ticketIssue).eq(issueIndex)) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n\n  await getLotteryStatus(lotteryContract)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.methods.balanceOf(account).call()\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.methods.issueIndex().call()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finalTokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finalTokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finalTokenIds.length > 200) {\n    finalTokenIds = finalTokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.methods\n      .multiClaim(finalTokenIds)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIndex = await lotteryContract.methods.issueIndex().call()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n      ticketsContract.options.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenIds = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIndex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenIds.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), new BigNumber(0))\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return new BigNumber(0)\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return lotteryContract.methods.getTotalRewards(issueIndex).call()\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.methods.maxNumber().call()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.methods.drawed().call()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIndex = await lotteryContract.methods.issueIndex().call()\n  const drawed = await lotteryContract.methods.drawed().call()\n  if (!drawed) {\n    issueIndex -= 1\n  }\n  try {\n    const amount = await lotteryContract.methods.historyAmount(issueIndex, 5 - matchNumber).call()\n\n    return new BigNumber(amount).div(new BigNumber(10).pow(18)).div(LOTTERY_TICKET_PRICE).toNumber()\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  const numbers = []\n  const drawed = await lotteryContract.methods.drawed().call()\n\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIndex - 1, i).call()).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\n    }\n  }\n  return numbers\n}\n","import { useEffect, useState } from 'react'\nimport { useLottery } from 'hooks/useContract'\nimport { getLotteryStatus } from 'utils/lotteryUtils'\n\n/**\n * Returns whether or not the current lottery has drawn numbers\n *\n * @return {Boolean}\n */\nconst useGetLotteryHasDrawn = () => {\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\n  const lotteryContract = useLottery()\n\n  useEffect(() => {\n    if (lotteryContract) {\n      const fetchLotteryStatus = async () => {\n        const state = await getLotteryStatus(lotteryContract)\n        setLotteryHasDrawn(state)\n      }\n\n      fetchLotteryStatus()\n    }\n  }, [lotteryContract])\n\n  return lotteryHasDrawn\n}\n\nexport default useGetLotteryHasDrawn\n","import { useState, useEffect } from 'react'\n\nexport const useCurrentTime = () => {\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\n\n  useEffect(() => {\n    const tick = () => {\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\n    }\n\n    const timerID = setInterval(() => tick(), 1000)\n\n    return () => clearInterval(timerID)\n  }, [])\n\n  return currentMillis\n}\n\nexport default useCurrentTime\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import getTimePeriods from 'utils/getTimePeriods'\n\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\nconst lotteryDrawHoursUtc = [2, 14]\n\nconst getClosestLotteryHour = (currentHour) => {\n  switch (true) {\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[0]\n    case currentHour < lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[1]\n    default:\n      return 0\n  }\n}\n\nconst getNextLotteryDrawTime = (currentMillis) => {\n  const date = new Date(currentMillis)\n  const currentHour = date.getUTCHours()\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\n  // ...and current time is between 02:00am & 23:59pm UTC\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\n  let millisTimeOfNextDraw\n\n  if (nextLotteryIsTomorrow) {\n    const tomorrow = new Date(currentMillis)\n    const nextDay = tomorrow.getUTCDate() + 1\n    tomorrow.setUTCDate(nextDay)\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\n  } else {\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\n  }\n\n  return millisTimeOfNextDraw\n}\n\n// @ts-ignore\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\n\nexport const getTicketSaleTime = (currentMillis): string => {\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getLotteryDrawTime = (currentMillis): string => {\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getTicketSaleStep = () => (1 / 12) * 100\n\nexport const getLotteryDrawStep = (currentMillis) => {\n  const msBetweenLotteries = 43200000\n  const endTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = endTime - currentMillis\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\n  return 100 - percentageRemaining\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Progress } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport {\n  getLotteryDrawTime,\n  getLotteryDrawStep,\n  getTicketSaleTime,\n  getTicketSaleStep,\n} from '../helpers/CountdownHelpers'\n\nconst ProgressWrapper = styled.div`\n  display: block;\n  width: 100%;\n`\n\nconst TopTextWrapper = styled.div`\n  margin-top: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst BottomTextWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst StyledPrimaryText = styled(Text)`\n  margin-right: 16px;\n`\nconst LotteryProgress = () => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\n\n  return (\n    <ProgressWrapper>\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\n      <TopTextWrapper>\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"contrast\">\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\n        </StyledPrimaryText>\n        <Text fontSize=\"20px\" bold color=\"invertedContrast\">\n          {lotteryHasDrawn ? TranslateString(434, 'Until ticket sale') : TranslateString(492, 'Until lottery draw')}\n        </Text>\n      </TopTextWrapper>\n      {lotteryHasDrawn && (\n        <BottomTextWrapper>\n          <Text color=\"invertedContrast\">\n            {timeUntilLotteryDraw} {TranslateString(492, 'Until lottery draw')}\n          </Text>\n        </BottomTextWrapper>\n      )}\n    </ProgressWrapper>\n  )\n}\n\nexport default LotteryProgress\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Container from 'components/layout/Container'\nimport LotteryProgress from './LotteryProgress'\n\nconst Title = styled(Heading).attrs({ as: 'h1', scale: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n  }\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <Title>{TranslateString(708, 'The CAKE Lottery')}</Title>\n          <Blurb>{TranslateString(710, 'Buy tickets with CAKE')}</Blurb>\n          <Blurb>{TranslateString(712, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\n        </LeftWrapper>\n        <RightWrapper>\n          <LotteryProgress />\n        </RightWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(new BigNumber(0))\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\n\n  return { claimLoading, claimAmount }\n}\n\nexport const useWinningNumbers = () => {\n  const [winningNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winningNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbaers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Loading: React.FC = () => <StyledLoading />\n\nconst StyledLoading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useCallback } from 'react'\nimport { Button, Modal } from '@chronoswap-packages/uikit'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const TranslateString = useI18n()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return <p key={index}>{number.toString()}</p>\n  })\n\n  return (\n    <Modal\n      title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`, { TICKETS: myTicketNumbers.length })}\n      onDismiss={onDismiss}\n    >\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {TranslateString(438, 'Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\nconst PrizesWonContent: React.FC = () => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <Won />\n      </IconWrapper>\n      <Heading as=\"h3\" scale=\"lg\" color=\"secondary\">\n        {TranslateString(660, 'You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" scale=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" scale=\"lg\">\n              CAKE\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button width=\"100%\" disabled={requestedClaim} onClick={handleClaim}>\n          {TranslateString(1056, 'Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {TranslateString(432, 'View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n  const lotteryTicketContract = useLotteryTicket()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useLottery()\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, useModal } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const TranslateString = useI18n()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\n      <TextWrapper>\n        <StyledText color=\"textDisabled\">{TranslateString(726, 'Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n          {TranslateString(432, 'View your tickets')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@chronoswap-packages/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  ${(props) =>\n    props.isDisabled\n      ? `\n        margin-top: 16px;\n        background-color: unset;\n        box-shadow: unset;\n        border: 1px solid ${props.theme.colors.textDisabled};\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst YourPrizesCard: React.FC = () => {\n  const { claimAmount } = useTotalClaim()\n\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <Ticket />\n        </IconWrapper>\n        <StyledHeading scale=\"md\">{TranslateString(1080, 'Unlock wallet to access lottery')}</StyledHeading>\n        <UnlockButton />\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import { useCallback, useState } from 'react'\nimport { useLotteryApprove } from './useApprove'\n\nexport const useApproval = (onPresentApprove: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { onApprove } = useLotteryApprove()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n      onPresentApprove()\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, onPresentApprove])\n\n  return { handleApprove, requestedApproval }\n}\n\nexport default useApproval\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Flex, Input, InputProps } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  availableSymbol: string\n  value: string\n  onSelectMax?: () => void\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n}\n\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <Flex alignItems=\"center\">\n        <Input type=\"number\" pattern=\"\\d*\" min=\"0\" onChange={onChange} placeholder=\"0\" value={value} />\n        <StyledTokenAdornmentWrapper>\n          <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n          <StyledSpacer />\n          <div>\n            <Button size=\"sm\" onClick={onSelectMax}>\n              {TranslateString(452, 'Max')}\n            </Button>\n          </div>\n        </StyledTokenAdornmentWrapper>\n      </Flex>\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\n    </>\n  )\n}\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TicketInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@chronoswap-packages/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\nimport useI18n from 'hooks/useI18n'\nimport { LOTTERY_MAX_NUMBER_OF_TICKETS, LOTTERY_TICKET_PRICE } from 'config'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onConfirm?: (amount: string, numbers: Array<number>) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(LOTTERY_TICKET_PRICE)), 10)\n  }, [max])\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    if (e.currentTarget.validity.valid) {\n      setVal(e.currentTarget.value)\n    }\n  }\n\n  const { onMultiBuy } = useMultiBuyLottery()\n  const maxNumber = useMaxNumber()\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true)\n      const length = parseInt(val)\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      const numbers = Array.apply(null, { length }).map(() => [\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n      ])\n      const txHash = await onMultiBuy(LOTTERY_TICKET_PRICE.toString(), numbers)\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedBuy(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > LOTTERY_MAX_NUMBER_OF_TICKETS) {\n      setVal(LOTTERY_MAX_NUMBER_OF_TICKETS.toString())\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const cakeCosts = (amount: string): number => {\n    return +amount * LOTTERY_TICKET_PRICE\n  }\n  return (\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol=\"TICKET\"\n        availableSymbol=\"CAKE\"\n      />\n      <div>\n        <Tips>{TranslateString(999, `1 Ticket = ${LOTTERY_TICKET_PRICE} CAKE`, { num: LOTTERY_TICKET_PRICE })}</Tips>\n      </div>\n      <div>\n        <Announce>\n          {TranslateString(\n            478,\n            'Ticket purchases are final. Your CAKE cannot be returned to you after buying tickets.',\n          )}\n        </Announce>\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} CAKE`)}</Final>\n      </div>\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          width=\"100%\"\n          disabled={\n            pendingTx ||\n            !Number.isInteger(parseInt(val)) ||\n            parseInt(val) > Number(maxTickets) ||\n            parseInt(val) > LOTTERY_MAX_NUMBER_OF_TICKETS ||\n            parseInt(val) < 1\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #ed4b9e;\n`\n","import React from 'react'\nimport { Button, Modal } from '@chronoswap-packages/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\n        <br />\n        {TranslateString(470, 'Your CAKE will not be returned to you after you spend it to buy tickets.')}\n        <br />\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burned after the draw.')}\n        <br />\n        {TranslateString(\n          474,\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button width=\"100%\" onClick={onDismiss}>\n          {TranslateString(476, 'I understand')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useLotteryAllowance } from 'hooks/useAllowance'\nimport useTickets from 'hooks/useTickets'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { useApproval } from 'hooks/useApproval'\nimport BuyTicketModal from './BuyTicketModal'\nimport MyTicketsModal from './UserTicketsModal'\nimport PurchaseWarningModal from './PurchaseWarningModal'\n\nconst CardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    justify-content: space-between;\n  }\n`\n\nconst TicketCard: React.FC = () => {\n  const TranslateString = useI18n()\n  const allowance = useLotteryAllowance()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"CAKE\" />)\n  const { handleApprove, requestedApproval } = useApproval(onPresentApprove)\n\n  const renderLotteryTicketButtons = () => {\n    if (!allowance.toNumber()) {\n      return (\n        <>\n          <Button width=\"100%\" disabled>\n            {TranslateString(432, 'View your tickets')}\n          </Button>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n            {TranslateString(494, 'Approve CAKE')}\n          </Button>\n        </>\n      )\n    }\n    return (\n      <>\n        <Button\n          style={{ marginRight: '8px' }}\n          width=\"100%\"\n          disabled={ticketsLength === 0}\n          variant=\"secondary\"\n          onClick={onPresentMyTickets}\n        >\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n        <Button id=\"lottery-buy-start\" width=\"100%\" onClick={onPresentBuy}>\n          {TranslateString(430, 'Buy ticket')}\n        </Button>\n      </>\n    )\n  }\n\n  return (\n    <CardActions>\n      {lotteryHasDrawn ? (\n        <Button disabled> {TranslateString(874, 'On sale soon')}</Button>\n      ) : (\n        renderLotteryTicketButtons()\n      )}\n    </CardActions>\n  )\n}\n\nexport default TicketCard\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport { useCake } from './useContract'\nimport useRefresh from './useRefresh'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await cakeContract.methods.allowance(account, getLotteryAddress()).call()\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchAllowance()\n    }\n  }, [account, cakeContract, fastRefresh])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any): BigNumber => {\n  const { account } = useWeb3React()\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, TicketRound, Text, Heading } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTickets from 'hooks/useTickets'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport TicketActions from './TicketActions'\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\n\ninterface CardProps {\n  isSecondCard?: boolean\n}\n\nconst StyledCard = styled(Card)<CardProps>`\n  ${(props) =>\n    props.isSecondCard\n      ? `\n        margin-top: 16px;\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst CardHeader = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst TicketCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\n\n  return (\n    <StyledCard isSecondCard={isSecondCard}>\n      <CardBody>\n        <CardHeader>\n          <IconWrapper>\n            <TicketRound />\n          </IconWrapper>\n          {lotteryHasDrawn ? (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(870, 'Until ticket sale:')}\n              </Text>\n              <Heading scale=\"lg\">{timeUntilTicketSale}</Heading>\n            </TicketCountWrapper>\n          ) : (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(724, 'Your tickets for this round')}\n              </Text>\n              <Heading scale=\"lg\">{ticketsLength}</Heading>\n            </TicketCountWrapper>\n          )}\n        </CardHeader>\n        <TicketActions />\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { Heading, Text } from '@chronoswap-packages/uikit'\nimport { BigNumber } from 'bignumber.js'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport CardBusdValue from '../../Home/components/CardBusdValue'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  oneTicketMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const TranslateString = useI18n()\n  const cakeBusdPrice = usePriceCakeBusd()\n\n  const getCakeBusdValue = (amount: number) => {\n    return new BigNumber(amount).multipliedBy(cakeBusdPrice).toNumber()\n  }\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(756, 'No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {TranslateString(754, 'Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(752, 'Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading scale=\"md\">4</Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading scale=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading scale=\"md\">\n          {fourMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(fourMatchesAmount)} />}\n        </RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {threeMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(threeMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem>\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {twoMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(twoMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@chronoswap-packages/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { useTotalRewards } from 'hooks/useTickets'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\nimport { BigNumber } from 'bignumber.js'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport PrizeGrid from '../PrizeGrid'\nimport CardBusdValue from '../../../Home/components/CardBusdValue'\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Right = styled.div`\n  display: flex;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst Left = styled.div`\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst PrizeCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 100%;\n  }\n`\n\nconst TotalPrizesCard = () => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const [showFooter, setShowFooter] = useState(false)\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\n  const lotteryPrizeAmountBusd = new BigNumber(lotteryPrizeAmount).multipliedBy(usePriceCakeBusd()).toNumber()\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  return (\n    <Card>\n      <CardBody>\n        {account && (\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\n            {currentLotteryNumber > 0 && (\n              <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>\n                {TranslateString(720, `Round #${currentLotteryNumber}`, { num: currentLotteryNumber })}\n              </Text>\n            )}\n          </Flex>\n        )}\n        <CardHeading>\n          <Left>\n            <IconWrapper>\n              <PancakeRoundIcon />\n            </IconWrapper>\n            <PrizeCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(722, 'Total Pot:')}\n              </Text>\n              <Heading scale=\"lg\">{lotteryPrizeWithCommaSeparators} CAKE</Heading>\n              {lotteryPrizeAmountBusd !== 0 && <CardBusdValue value={lotteryPrizeAmountBusd} />}\n            </PrizeCountWrapper>\n          </Left>\n          <Right>\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\n          </Right>\n        </CardHeading>\n      </CardBody>\n      <ExpandingWrapper showFooter={showFooter}>\n        <CardFooter>\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\n        </CardFooter>\n      </ExpandingWrapper>\n    </Card>\n  )\n}\n\nexport default TotalPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Card, CardBody } from '@chronoswap-packages/uikit'\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\n\nconst WinningNumbers: React.FC = () => {\n  const { account } = useWeb3React()\n  const winNumbers = useWinningNumbers()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const MatchedNumber4 = useMatchingRewardLength(4)\n  const MatchedNumber3 = useMatchingRewardLength(3)\n  const MatchedNumber2 = useMatchingRewardLength(2)\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <CardBody>\n        <StyledCardContentInner>\n          <StyledCardHeader>\n            <Title>\n              {account && lotteryHasDrawn\n                ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\n                : TranslateString(440, 'Latest Winning Numbers')}\n            </Title>\n            <br />\n          </StyledCardHeader>\n          <Row>\n            {winNumbers.map((number, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <TicketNumberBox key={index}>\n                <CenteredText>{number}</CenteredText>\n              </TicketNumberBox>\n            ))}\n          </Row>\n          <RabbitRow>\n            <RabbitBox>\n              <CardImageFirst>\n                <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\n              </CardImageFirst>\n            </RabbitBox>\n            <RabbitBox>\n              <CardImage style={{ marginLeft: '-1.2em' }}>\n                <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\n              </CardImage>\n            </RabbitBox>\n            <RabbitBox>\n              <CardImage style={{ marginLeft: '-1.2em' }}>\n                <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\n              </CardImage>\n            </RabbitBox>\n            <RabbitBox>\n              <CardImage style={{ marginLeft: '-1.2em' }}>\n                <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\n              </CardImage>\n            </RabbitBox>\n          </RabbitRow>\n          <RabbitRowSmall>\n            <RabbitBoxSmall>\n              <CardImageFirst>\n                <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\n              </CardImageFirst>\n            </RabbitBoxSmall>\n            <RabbitBoxSmall>\n              <CardImage style={{ marginLeft: '-1.2em' }}>\n                <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\n              </CardImage>\n            </RabbitBoxSmall>\n            <RabbitBoxSmall>\n              <CardImage style={{ marginLeft: '-1.2em' }}>\n                <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\n              </CardImage>\n            </RabbitBoxSmall>\n            <RabbitBoxSmall>\n              <CardImage style={{ marginLeft: '-1.2em' }}>\n                <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\n              </CardImage>\n            </RabbitBoxSmall>\n          </RabbitRowSmall>\n          <Column>\n            <RowNoPadding>\n              <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\n              <CenteredTextWithPadding>\n                <strong>{MatchedNumber4}</strong>\n              </CenteredTextWithPadding>\n            </RowNoPadding>\n            <RowNoPadding>\n              <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\n              <CenteredTextWithPadding>\n                <strong>{MatchedNumber3}</strong>\n              </CenteredTextWithPadding>\n            </RowNoPadding>\n            <RowNoPadding>\n              <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\n              <CenteredTextWithPadding>\n                <strong>{MatchedNumber2}</strong>\n              </CenteredTextWithPadding>\n            </RowNoPadding>\n          </Column>\n          <Link href=\"https://api.pancakeswap.com/api/lottery?page=0&pageSize=25\" target=\"_blank\">\n            {TranslateString(448, 'Export recent winning numbers')}\n          </Link>\n        </StyledCardContentInner>\n      </CardBody>\n    </Card>\n  )\n}\nconst Link = styled.a`\n  margin-top: 1em;\n  text-decoration: none;\n  color: #25beca;\n`\n\nconst Row = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst RabbitRow = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst RabbitRowSmall = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`\n\nconst CardImage = styled.div`\n  text-align: center;\n`\n\nconst CardImageFirst = styled.div`\n  text-align: center;\n  margin-left: -1.2em;\n\n  @media (max-width: 600) {\n    margin-left: -0.2em;\n  }\n`\n\nconst RowNoPadding = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst Column = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CenteredText = styled.div`\n  text-align: center;\n  align-items: center;\n`\n\nconst CenteredTextWithPadding = styled.div`\n  text-align: center;\n  align-items: center;\n  padding-left: 2px;\n  padding-right: 2px;\n`\n\nconst TicketNumberBox = styled.div`\n  padding: 10px;\n  border-radius: 12px;\n  background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\n  color: white;\n  font-size: 20px;\n  font-weight: 900;\n  margin: 10px;\n  margin-bottom: 7px;\n  width: 40px;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    margin: 20px;\n    width: 60px;\n  }\n`\n\nconst RabbitBox = styled.div`\n  /* padding: 10px; */\n  border-radius: 12px;\n  margin: 16px 20px;\n  width: 60px;\n`\n\nconst RabbitBoxSmall = styled.div`\n  padding-top: 10px;\n  padding-left: 10px;\n  border-radius: 12px;\n  margin: 20px;\n  width: 20px;\n`\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.colors.secondary};\n  font-size: 24px;\n  width: 50vw;\n  text-align: center;\n  font-weight: 1000;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport default WinningNumbers\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Link, Image } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst LayoutWrapper = styled.div`\n  max-width: 500px;\n  margin: 0 auto 40px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst StyledImage = styled(Image)`\n  align-self: center;\n`\n\nconst StyledLink = styled(Link)`\n  align-self: center;\n  margin-top: 16px;\n`\n\nconst HowItWorks = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <LayoutWrapper>\n      <StyledImage src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" width={163} height={140} />\n      <StyledHeading scale=\"lg\" as=\"h3\" color=\"secondary\">\n        {TranslateString(632, 'How it works')}\n      </StyledHeading>\n      <Text fontSize=\"16px\">\n        {TranslateString(\n          426,\n          'Spend CAKE to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\n        )}\n      </Text>\n      <StyledLink href=\"https://docs.pancakeswap.finance/lottery-1\">{TranslateString(610, 'Read more')}</StyledLink>\n    </LayoutWrapper>\n  )\n}\n\nexport default HowItWorks\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { BaseLayout } from '@chronoswap-packages/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport YourPrizesCard from './components/YourPrizesCard'\nimport UnlockWalletCard from './components/UnlockWalletCard'\nimport TicketCard from './components/TicketCard'\nimport TotalPrizesCard from './components/TotalPrizesCard'\nimport WinningNumbers from './components/WinningNumbers'\nimport HowItWorks from './components/HowItWorks'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\n`\n\nconst NextDrawPage: React.FC = () => {\n  const { account } = useWeb3React()\n  const { claimAmount } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <>\n      <Cards>\n        <TotalPrizesCard />\n        <SecondCardColumnWrapper isAWin={isAWin}>\n          {!account ? (\n            <UnlockWalletCard />\n          ) : (\n            <>\n              <YourPrizesCard />\n              <TicketCard isSecondCard={isAWin} />\n            </>\n          )}\n        </SecondCardColumnWrapper>\n      </Cards>\n      <HowItWorks />\n      {/* legacy page content */}\n      <WinningNumbers />\n    </>\n  )\n}\n\nexport default NextDrawPage\n","export type DataResponse = {\n  lotteryNumber: number\n  lotteryDate: string\n  lotteryNumbers: number[]\n  poolSize: number\n  burned: number\n  contractLink: string\n  jackpotTicket: number\n  match1Ticket: number | null\n  match2Ticket: number\n  match3Ticket: number\n  match4Ticket: number\n  poolJackpot: number\n  poolMatch3: number\n  poolMatch2: number\n  poolMatch1: number | null\n\n  // TODO: Fill in the error type\n  error: any\n}\n\n/**\n * Get data for a specific lottery\n */\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\n  try {\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\n    const data = await response.json()\n\n    return data\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getLotteryRoundData\n","import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (mostRecentLotteryNumber > 0) {\n      fetchRecentLotteryData()\n    }\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\nconst InputWrapper = styled.div`\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const TranslateString = useI18n()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(lotteryNumber)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    if (evt.currentTarget.value) {\n      const value = parseInt(evt.currentTarget.value, 10)\n\n      // The max value will always be the initialLotteryNumber which equals\n      // the latest lottery round\n      setIsError(value > initialLotteryNumber)\n      setLotteryNumber(value)\n    } else {\n      setLotteryNumber(initialLotteryNumber)\n    }\n  }\n\n  return (\n    <Wrapper>\n      <Text>{TranslateString(742, 'Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <InputWrapper>\n            <Input\n              value={lotteryNumber}\n              type=\"number\"\n              pattern=\"\\d*\"\n              min=\"0\"\n              isWarning={isError}\n              max={initialLotteryNumber}\n              onChange={handleChange}\n            />\n          </InputWrapper>\n          <ButtonWrapper>\n            <Button type=\"submit\" scale=\"sm\" disabled={isError}>\n              {TranslateString(744, 'Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","import React from 'react'\nimport { Text } from '@chronoswap-packages/uikit'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@chronoswap-packages/uikit'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading scale=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWeb3React } from '@web3-react/core'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 24px;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n`\n\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\n  const TranslateString = useI18n()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <div>\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} width=\"100%\">\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n      </div>\n      <div>\n        <ExternalLinkWrap href={contractLink}>{TranslateString(356, 'View on BscScan')}</ExternalLinkWrap>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","const formatLotteryDate = (lotteryDate: string) => {\n  if (!lotteryDate) {\n    return {}\n  }\n\n  const date = new Date(lotteryDate)\n\n  const dateString = date.toDateString()\n  const hours = date.getUTCHours()\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\n\n  return { hours, monthAndDay }\n}\n\nexport default formatLotteryDate\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@chronoswap-packages/uikit'\nimport formatLotteryDate from '../helpers/formatLotteryDate'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst Timestamp = ({ timeValue }) => {\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\">\n        {monthAndDay}, {hours}:00 UTC\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Timestamp\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const TranslateString = useI18n()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match1Ticket,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody>\n          <CardHeading>\n            <Timestamp timeValue={lotteryDate} />\n            <Heading scale=\"md\" mb=\"24px\">\n              Round #{lotteryNumber}\n            </Heading>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\n              Icon={TicketRound}\n            >\n              {TranslateString(999, 'Winning numbers')}\n            </TopLotteryCardHeading>\n            <LotteryCardHeading\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} CAKE`)}\n              Icon={PancakeRoundIcon}\n            >\n              {TranslateString(999, 'Total prizes')}\n            </LotteryCardHeading>\n          </CardHeading>\n        </CardBody>\n        <CardFooter>\n          <PrizeGrid\n            lotteryPrizeAmount={poolSize}\n            jackpotMatches={jackpotTicket}\n            oneTicketMatches={match1Ticket}\n            twoTicketMatches={match2Ticket}\n            threeTicketMatches={match3Ticket}\n            pastDraw\n          />\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n        </CardFooter>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","import React from 'react'\nimport { Card } from '@chronoswap-packages/uikit'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\n}\n\nexport default PastRoundCard\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@chronoswap-packages/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport useI18n from 'hooks/useI18n'\nimport useGetRecentLotteryRoundData from 'hooks/useGetRecentLotteryRoundData'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const TranslateString = useI18n()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: TranslateString(1076, 'The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: TranslateString(1078, 'Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","import React, { lazy, Suspense, useContext } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@chronoswap-packages/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst HistoryChart: React.FC = () => {\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const getDataArray = (kind) => {\n    return historyData\n      .map((dataPoint) => {\n        return dataPoint[kind]\n      })\n      .reverse()\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = {\n    labels: getDataArray('lotteryNumber'),\n    datasets: [\n      {\n        label: 'Pool Size',\n        data: getDataArray('poolSize'),\n        yAxisID: 'y-axis-pool',\n        ...lineStyles({ color: '#8F80BA' }),\n      },\n      {\n        label: 'Burned',\n        data: getDataArray('burned'),\n        yAxisID: 'y-axis-burned',\n        ...lineStyles({ color: '#1FC7D4' }),\n      },\n    ],\n  }\n\n  const axesStyles = ({ color, lineHeight }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: 'Kanit, sans-serif',\n        fontColor: color,\n        fontSize: 14,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return value.toLocaleString()\n        },\n      },\n    }\n  }\n\n  const options = {\n    legend: { display: false },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-pool',\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-burned',\n          ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\n        },\n      ],\n      xAxes: [\n        {\n          ...axesStyles({ color: '#452A7A', lineHeight: 1 }),\n        },\n      ],\n    },\n  }\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>Error fetching data</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length > 1 ? (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Line data={chartData} options={options} type=\"line\" />\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 36px 0 28px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{TranslateString(748, 'Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{TranslateString(750, 'Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","import React from 'react'\nimport { Heading, Card, CardBody } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <CardBody>\n        <Heading scale=\"md\">{TranslateString(746, 'History')}</Heading>\n        <Legend />\n        <HistoryChart />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PastDrawsHistoryCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@chronoswap-packages/uikit'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: column;\n`\n\nconst BunnyImageWrapper = styled.div`\n  display: flex;\n  margin-top: 32px;\n  justify-content: center;\n`\n\nconst PastDrawsPage: React.FC = () => {\n  return (\n    <Cards>\n      <PastLotteryRoundViewer />\n      <SecondCardColumnWrapper>\n        <PastDrawsHistoryCard />\n        <BunnyImageWrapper>\n          <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\n        </BunnyImageWrapper>\n      </SecondCardColumnWrapper>\n    </Cards>\n  )\n}\n\nexport default PastDrawsPage\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem } from '@chronoswap-packages/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport useI18n from 'hooks/useI18n'\nimport { useLottery } from 'hooks/useContract'\nimport Page from 'components/layout/Page'\nimport Hero from './components/Hero'\nimport Divider from './components/Divider'\nimport NextDrawPage from './NextDrawPage'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useLottery()\n  const TranslateString = useI18n()\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  useEffect(() => {\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [lotteryContract])\n\n  const handleClick = (index) => {\n    setActiveIndex(index)\n  }\n\n  return (\n    <>\n      <Hero />\n      <Page>\n        <Wrapper>\n          <ButtonMenu activeIndex={activeIndex} onItemClick={handleClick} scale=\"sm\" variant=\"subtle\">\n            <ButtonMenuItem>{TranslateString(716, 'Next draw')}</ButtonMenuItem>\n            <ButtonMenuItem>{TranslateString(718, 'Past draws')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Wrapper>\n        <Divider />\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\n        </PastLotteryDataContext.Provider>\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n"],"sourceRoot":""}