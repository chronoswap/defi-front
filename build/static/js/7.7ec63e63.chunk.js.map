{"version":3,"sources":["components/ExpandableSectionButton/ExpandableSectionButton.tsx","views/Farms/components/types.ts","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","hooks/useFarmStakedPrice.tsx","components/ModalInput/ModalInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","utils/compoundApyHelpers.ts","views/Farms/components/FarmCard/ApyCalculatorModal.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/Tooltip/Tooltip.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/SearchInput.tsx","views/Farms/components/ToggleView/ToggleView.tsx","views/Farms/components/Select/Select.tsx","views/Farms/Farms.tsx"],"names":["Wrapper","styled","div","theme","colors","primary","ExpandableSectionButton","onClick","expanded","TranslateString","useI18n","aria-label","role","color","bold","defaultProps","ViewMode","getLiquidityUrlPathParts","quoteTokenAddress","tokenAddress","wBNBAddressString","getWbnbAddress","quoteTokenAddressString","chainId","tokenAddressString","secondPart","StyledLinkExternal","LinkExternal","DetailsSection","bscScanAddress","infoAddress","removed","totalValueFormatted","lpLabel","addLiquidityUrl","lpValue","justifyContent","href","name","Flex","MultiplierTag","Tag","CardHeading","multiplier","isCommunityFarm","farmImage","tokenSymbol","alignItems","mb","src","alt","width","height","flexDirection","split","variant","useFarmStakedPrice","pid","farmLiquidity","useState","farmStakedPrice","setFarmStakedPrice","account","useWeb3React","fastRefresh","useRefresh","farm","useFarmFromPid","lpContract","useLP","getAddress","lpAddresses","useEffect","a","methods","balanceOf","getMasterChefAddress","call","rawlpSupply","lpSupply","BigNumber","token","decimals","lpPrice","stakedBalance","userData","stakedBalancePrice","times","toNumber","fetchStaked","StyledTokenInput","input","isWarning","shadows","warning","inset","text","StyledInput","Input","mediaQueries","xs","sm","StyledErrorMessage","Text","ModalInput","max","symbol","onChange","onSelectMax","value","inputTitle","isBalanceZero","displayBalance","parseFloat","toFixed","style","position","pl","fontSize","toLocaleString","placeholder","scale","mr","external","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","useCallback","e","currentTarget","handleSelectMax","title","ModalActions","disabled","alignSelf","WithdrawModal","IconButtonWrapper","StakeAction","tokenBalance","onStake","useStake","onUnstake","useUnstake","rawStakedBalance","getBalanceNumber","useModal","onPresentDeposit","onPresentWithdraw","CardBusdValue","HarvestAction","earnings","onReward","useHarvest","cakePrice","usePriceCakeBusd","rawEarningsBalance","earningsUsd","Action","CardActions","requestedApproval","setRequestedApproval","useFarmFromSymbol","lpSymbol","useFarmUser","allowance","lpAddress","lpName","toUpperCase","isApproved","isGreaterThan","web3","useWeb3","liquidity","getBep20Contract","onApprove","useApprove","handleApprove","console","error","textTransform","pr","mt","UnlockButton","calculateCakeEarnedPerThousandDollars","number","numberOfDays","apyAsDecimal","farmApy","daysAsDecimalOfYear","principal","finalAmount","Math","round","apyModalRoi","amountEarned","amountInvested","Grid","GridItem","Description","ApyCalculatorModal","apy","oneThousandDollarsWorthOfCake","cakeEarnedPerThousand1D","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","ApyButton","onPresentApyModal","event","stopPropagation","ml","RainbowLight","keyframes","StyledCardAccent","FCard","props","card","background","Divider","cardBorder","ExpandingWrapper","FarmCard","showExpandableSection","setShowExpandableSection","communityFarms","includes","toLocaleLowerCase","undefined","maximumFractionDigits","replace","earnLabel","dual","farmAPY","liquidityUrlPathParts","quoteToken","address","BASE_ADD_LIQUIDITY_URL","process","display","CardActionsContainer","Container","textSubtle","AprWrapper","Apr","originalValue","hideButton","IconImage","Image","Farm","image","label","Amount","span","earned","textDisabled","Earned","ArrowIcon","ChevronDownIcon","toggled","Details","actionPanelToggled","isMobile","useMatchBreakpoints","isXl","TooltipContent","tooltip","zIndices","modal","Tooltip","content","children","className","MultiplierWrapper","Multiplier","displayMultiplier","toLowerCase","LiquidityWrapper","Liquidity","displayLiquidity","Number","ActionContainer","xl","ActionTitles","Title","secondary","Subtle","ActionContent","Staked","earningsBigNumber","earningsBusd","multipliedBy","useCountUp","start","end","duration","separator","countUp","update","updateValue","useRef","current","lg","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","apr","isActive","bsc","info","StakedAction","Label","ContentContainer","CellLayout","MobileColumnSchema","id","translationId","sortable","DesktopColumnSchema","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","setActionPanelToggled","toggleActionPanel","isXs","tableSchema","columnNames","map","column","Object","keys","key","columnIndex","indexOf","React","createElement","colSpan","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","data","columns","rows","useTable","sortColumn","ref","row","original","scrollIntoView","behavior","FarmTabButtons","useRouteMatch","url","isExact","activeIndex","as","Link","to","InputWrapper","SearchInput","setToggled","inputEl","onBlur","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","DropDownHeader","inputSecondary","DropDownListContainer","dropdown","DropDownContainer","isOpen","css","boxShadow","DropDownList","ul","ListItem","li","Select","options","containerRef","dropdownRef","setIsOpen","selectedOption","setSelectedOption","containerSize","setContainerSize","toggling","onOptionClicked","option","offsetWidth","offsetHeight","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","StyledImage","Header","gradients","bubblegum","Farms","path","pathname","useLocation","farmsLP","useFarms","query","setQuery","setViewMode","sortOption","setSortOption","prices","useGetApiPrices","dispatch","useAppDispatch","fetchFarmUserDataAsync","stakedOnly","setStakedOnly","activeFarms","filter","inactiveFarms","stakedOnlyFarms","stakedInactiveFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPY","lpTotalInQuoteToken","quoteTokenPriceUsd","totalLiquidity","getFarmApy","poolWeight","lowercaseQuery","farmsStaked","rowData","farms","orderBy","slice","sortFarms","Page","checked","marginLeft","target","length","sort","b","exact","renderContent"],"mappings":"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","file":"static/js/7.7ec63e63.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","export type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  label: string\n  name: string\n  translationId: number\n  sortable: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APY: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    translationId: 1072,\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    translationId: 736,\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 6,\n    name: 'details',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    translationId: 1072,\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    translationId: 736,\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 4,\n    name: 'liquidity',\n    translationId: 999,\n    sortable: true,\n    label: 'Liquidity',\n  },\n  {\n    id: 5,\n    name: 'multiplier',\n    translationId: 999,\n    sortable: true,\n    label: 'Multiplier',\n  },\n  {\n    id: 6,\n    name: 'details',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n]\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\nimport { getWbnbAddress } from './addressHelpers'\n\nconst getLiquidityUrlPathParts = ({ quoteTokenAddress, tokenAddress }) => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const wBNBAddressString = getWbnbAddress()\n  const quoteTokenAddressString: string = quoteTokenAddress ? quoteTokenAddress[chainId] : null\n  const tokenAddressString: string = tokenAddress ? tokenAddress[chainId] : null\n  const firstPart =\n    !quoteTokenAddressString || quoteTokenAddressString === wBNBAddressString ? 'BNB' : quoteTokenAddressString\n  const secondPart = !tokenAddressString || tokenAddressString === wBNBAddressString ? 'BNB' : tokenAddressString\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import React from 'react'\nimport useI18n from 'hooks/useI18n'\nimport styled from 'styled-components'\nimport { Text, Flex, LinkExternal } from '@chronoswap-packages/uikit'\n\nexport interface ExpandableSectionProps {\n  bscScanAddress?: string\n  infoAddress?: string\n  removed?: boolean\n  totalValueFormatted?: string\n  lpLabel?: string\n  addLiquidityUrl?: string\n  lpValue?: number\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  bscScanAddress,\n  infoAddress,\n  removed,\n  totalValueFormatted,\n  lpLabel,\n  addLiquidityUrl,\n  lpValue,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(354, 'Total Liquidity')}:</Text>\n        <Text>{totalValueFormatted}</Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(355, `${lpLabel} Value`)}:</Text>\n        <Text>{lpValue}</Text>\n      </Flex>\n      {!removed && (\n        <StyledLinkExternal href={addLiquidityUrl}>\n          {TranslateString(999, `Get ${lpLabel}`, { name: lpLabel })}\n        </StyledLinkExternal>\n      )}\n      <StyledLinkExternal href={bscScanAddress}>{TranslateString(999, 'View Contract')}</StyledLinkExternal>\n      <StyledLinkExternal href={infoAddress}>{TranslateString(999, 'See Pair Info')}</StyledLinkExternal>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Image } from '@chronoswap-packages/uikit'\nimport { CommunityTag, CoreTag } from 'components/Tags'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  isCommunityFarm?: boolean\n  farmImage?: string\n  tokenSymbol?: string\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  lpLabel,\n  multiplier,\n  isCommunityFarm,\n  farmImage,\n  tokenSymbol,\n}) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <Image src={`/images/farms/${farmImage}.svg`} alt={tokenSymbol} width={64} height={64} />\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\n        <Flex justifyContent=\"center\">\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useFarmFromPid } from 'state/hooks'\nimport { useLP } from 'hooks/useContract'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useFarmStakedPrice = (pid, farmLiquidity) => {\n  const [farmStakedPrice, setFarmStakedPrice] = useState(0.0)\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const farm = useFarmFromPid(pid)\n\n  const lpContract = useLP(getAddress(farm.lpAddresses))\n  useEffect(() => {\n    const fetchStaked = async () => {\n      const rawlpSupply = await lpContract.methods.balanceOf(getMasterChefAddress()).call()\n      const lpSupply = new BigNumber(rawlpSupply).div(10**farm.token.decimals)\n      const lpPrice = farmLiquidity.div(lpSupply)\n      const stakedBalance = new BigNumber(farm.userData.stakedBalance).div(10**farm.token.decimals)\n      const stakedBalancePrice = stakedBalance.times(lpPrice)\n      setFarmStakedPrice(stakedBalancePrice.toNumber())\n    }\n\n    if (account) {\n      fetchStaked()\n    }\n  }, [account, farm, lpContract, farmLiquidity, fastRefresh])\n\n  return farmStakedPrice\n}\n\nexport default useFarmStakedPrice\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n}) => {\n  const TranslateString = useI18n()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = isBalanceZero ? '0' : parseFloat(max).toFixed(4)\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">\n            {TranslateString(1120, 'Balance')}: {displayBalance.toLocaleString()}\n          </Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput onChange={onChange} placeholder=\"0\" value={value} />\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {TranslateString(452, 'Max')}\n          </Button>\n          <Text fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          No tokens to stake:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {TranslateString(999, 'get')} {symbol}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, LinkExternal } from '@chronoswap-packages/uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  addLiquidityUrl?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', addLiquidityUrl }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={TranslateString(1068, 'Stake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n        inputTitle={TranslateString(1070, 'Stake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={pendingTx || fullBalance === '0' || val === '0'}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\n        {TranslateString(999, 'Get')} {tokenName}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@chronoswap-packages/uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={TranslateString(1126, 'Unstake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={TranslateString(588, 'Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport useFarmStakedPrice from 'hooks/useFarmStakedPrice'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\nimport CardBusdValue from '../../../Home/components/CardBusdValue'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  farmLiquidity?: BigNumber\n  addLiquidityUrl?: string\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  farmLiquidity,\n  addLiquidityUrl,\n}) => {\n  const TranslateString = useI18n()\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n  const displayBalance = rawStakedBalance.toLocaleString()\n  const farmStakedPrice = useFarmStakedPrice(pid, farmLiquidity)\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} addLiquidityUrl={addLiquidityUrl} />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\n  )\n\n  const renderStakingButtons = () => {\n    return rawStakedBalance === 0 ? (\n      <Button onClick={onPresentDeposit}>{TranslateString(999, 'Stake LP')}</Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>\n        {displayBalance}\n        <CardBusdValue value={farmStakedPrice}/>\n      </Heading>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useHarvest } from 'hooks/useHarvest'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useWeb3React } from '@web3-react/core'\nimport CardBusdValue from '../../../Home/components/CardBusdValue'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const { account } = useWeb3React()\n  const TranslateString = useI18n()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n\n  const cakePrice = usePriceCakeBusd()\n  const rawEarningsBalance = account ? getBalanceNumber(earnings) : 0\n  const earningsUsd = cakePrice.times(rawEarningsBalance).toNumber()\n  const displayBalance = rawEarningsBalance.toLocaleString()\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>\n        {displayBalance}\n        <CardBusdValue value={earningsUsd}/>\n      </Heading>\n      <Button\n        disabled={rawEarningsBalance === 0 || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          await onReward()\n          setPendingTx(false)\n        }}\n      >\n        {TranslateString(562, 'Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { provider as ProviderType } from 'web3-core'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBep20Contract } from 'utils/contractHelpers'\nimport { Button, Flex, Text } from '@chronoswap-packages/uikit'\nimport { Farm } from 'state/types'\nimport { useFarmFromSymbol, useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport useWeb3 from 'hooks/useWeb3'\nimport { useApprove } from 'hooks/useApprove'\nimport UnlockButton from 'components/UnlockButton'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends Farm {\n  apy?: number\n  liquidity?: BigNumber\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  provider?: ProviderType\n  account?: string\n  addLiquidityUrl?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl }) => {\n  const TranslateString = useI18n()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses } = useFarmFromSymbol(farm.lpSymbol)\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\n  const lpAddress = getAddress(lpAddresses)\n  const lpName = farm.lpSymbol.toUpperCase()\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const web3 = useWeb3()\n  const farmLiquidity = farm.liquidity ? farm.liquidity : new BigNumber(0)\n\n  const lpContract = getBep20Contract(lpAddress, web3)\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={lpName}\n        pid={pid}\n        farmLiquidity={farmLiquidity}\n        addLiquidityUrl={addLiquidityUrl}\n      />\n    ) : (\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n        {TranslateString(758, 'Approve Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\n          CAKE\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(1072, 'Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {lpName}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(1074, 'Staked')}\n        </Text>\n      </Flex>\n      {!account ? <UnlockButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n","const roundToTwoDp = (number) => Math.round(number * 100) / 100\n\nexport const calculateCakeEarnedPerThousandDollars = ({ numberOfDays, farmApy, cakePrice }) => {\n  // Everything here is worked out relative to a year, with the asset compounding daily\n  const timesCompounded = 365\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const apyAsDecimal = farmApy / 100\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\n  //   Calculate the starting CAKE balance with a dollar balance of $1000.\n  const principal = 1000 / cakePrice\n\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n\n  // To get the cake earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\n  const interestEarned = finalAmount - principal\n  return roundToTwoDp(interestEarned)\n}\n\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage.toFixed(2)\n}\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apy?: number\n  addLiquidityUrl?: string\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`\n\nconst GridItem = styled.div`\n  margin-bottom: '10px';\n`\n\nconst Description = styled(Text)`\n  max-width: 320px;\n  margin-bottom: 28px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  lpLabel,\n  cakePrice,\n  apy,\n  addLiquidityUrl,\n}) => {\n  const TranslateString = useI18n()\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber()\n\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy: apy, cakePrice })\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy: apy, cakePrice })\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy: apy, cakePrice })\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 365,\n    farmApy: apy,\n    cakePrice,\n  })\n\n  return (\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\n      <Grid>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(860, 'Timeframe')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(858, 'ROI')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(864, 'CAKE per $1000')}\n          </Text>\n        </GridItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>1d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>7d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>30d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem>\n          <Text>365d(APY)</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Description fontSize=\"12px\" color=\"textSubtle\">\n        {TranslateString(\n          866,\n          'Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n        )}\n      </Description>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={addLiquidityUrl}>\n          {TranslateString(999, 'Get')} {lpLabel}\n        </LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { IconButton, useModal, CalculateIcon } from '@chronoswap-packages/uikit'\nimport ApyCalculatorModal from './ApyCalculatorModal'\n\nexport interface ApyButtonProps {\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apy?: number\n  addLiquidityUrl?: string\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apy, addLiquidityUrl }) => {\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal lpLabel={lpLabel} cakePrice={cakePrice} apy={apy} addLiquidityUrl={addLiquidityUrl} />,\n  )\n\n  const handleClickButton = (event): void => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\n      <CalculateIcon width=\"18px\" />\n    </IconButton>\n  )\n}\n\nexport default ApyButton\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from '@chronoswap-packages/uikit'\nimport { communityFarms } from 'config/constants'\nimport { Farm } from 'state/types'\nimport { provider as ProviderType } from 'web3-core'\nimport useI18n from 'hooks/useI18n'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Farm {\n  apy?: number\n  liquidity?: BigNumber\n}\n\nconst RainbowLight = keyframes`\n\t0% {\n\t\tbackground-position: 0% 50%;\n\t}\n\t50% {\n\t\tbackground-position: 100% 50%;\n\t}\n\t100% {\n\t\tbackground-position: 0% 50%;\n\t}\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 32px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 32px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  provider?: ProviderType\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, account }) => {\n  const TranslateString = useI18n()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const isCommunityFarm = communityFarms.includes(farm.token.symbol)\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\n\n  const totalValueFormatted = farm.liquidity\n    ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('ONETHOUSAND', '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : 'ThoP'\n  const farmAPY = farm.apy && farm.apy.toLocaleString('en-US', { maximumFractionDigits: 2 })\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: farm.quoteToken.address,\n    tokenAddress: farm.token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  return (\n    <FCard>\n      {farm.token.symbol === 'ONEK' && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        isCommunityFarm={isCommunityFarm}\n        farmImage={farmImage}\n        tokenSymbol={farm.token.symbol}\n      />\n      {!removed && (\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Text>{TranslateString(736, 'APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apy ? (\n              <>\n                <ApyButton lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} cakePrice={cakePrice} apy={farm.apy} />\n                {farmAPY}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(318, 'Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <CardActionsContainer farm={farm} account={account} addLiquidityUrl={addLiquidityUrl} />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          bscScanAddress={`https://bscscan.com/address/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`}\n          infoAddress={`https://pancakeswap.info/pair/${lpAddress}`}\n          totalValueFormatted={totalValueFormatted}\n          lpLabel={lpLabel}\n          addLiquidityUrl={addLiquidityUrl}\n          lpValue = {0}  // TODO terminar el valor\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\nimport { Address } from 'config/constants/types'\nimport BigNumber from 'bignumber.js'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport useI18n from 'hooks/useI18n'\n\nexport interface AprProps {\n  value: string\n  multiplier: string\n  lpLabel: string\n  tokenAddress?: Address\n  quoteTokenAddress?: Address\n  cakePrice: BigNumber\n  originalValue: number\n  hideButton?: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst AprWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Apr: React.FC<AprProps> = ({\n  value,\n  lpLabel,\n  tokenAddress,\n  quoteTokenAddress,\n  cakePrice,\n  originalValue,\n  hideButton = false,\n}) => {\n  const TranslateString = useI18n()\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAddress, tokenAddress })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  return originalValue !== 0 ? (\n    <Container>\n      {originalValue ? (\n        <>\n          <AprWrapper>{value}%</AprWrapper>\n          {!hideButton && (\n            <ApyButton lpLabel={lpLabel} cakePrice={cakePrice} apy={originalValue} addLiquidityUrl={addLiquidityUrl} />\n          )}\n        </>\n      ) : (\n        <AprWrapper>{TranslateString(656, 'Loading...')}</AprWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <AprWrapper>{originalValue}%</AprWrapper>\n    </Container>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { Text, Image } from '@chronoswap-packages/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  image: string\n}\n\nconst IconImage = styled(Image)`\n  width: 24px;\n  height: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n    height: 40px;\n  }\n`\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ image, label, pid }) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const TranslateString = useI18n()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\n          {TranslateString(999, 'FARMING')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <IconImage src={`/images/farms/${image}.svg`} alt=\"icon\" width={40} height={40} mr=\"8px\" />\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\n\nexport interface EarnedProps {\n  earnings: number\n  pid: number\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`\n\nconst Earned: React.FunctionComponent<EarnedProps> = ({ earnings }) => {\n  const { account } = useWeb3React()\n  const amountEarned = account ? earnings : null\n\n  const displayBalance = amountEarned ? amountEarned.toLocaleString() : '?'\n  return <Amount earned={amountEarned}>{displayBalance}</Amount>\n}\n\nexport default Earned\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.primary};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\n  const TranslateString = useI18n()\n  const { isXl } = useMatchBreakpoints()\n  const isMobile = !isXl\n\n  return (\n    <Container>\n      {!isMobile && TranslateString(658, 'Details')}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface TooltipProps {\n  content: React.ReactNode\n  className?: string\n}\n\nconst TooltipContent = styled.div`\n  background: ${({ theme }) => theme.tooltip.background};\n  padding: 16px;\n  border-radius: 16px;\n  color: ${({ theme }) => theme.tooltip.text};\n  width: max-content;\n  display: none;\n  max-height: 500px;\n  z-index: ${({ theme }) => theme.zIndices.modal};\n  position: absolute;\n  bottom: calc(100% + 16px);\n  transform: translate(34px, 0);\n  right: 0;\n  max-width: 246px;\n\n  &:after {\n    content: '';\n    display: block;\n    width: 0;\n    height: 0;\n    border-left: 10px solid transparent;\n    border-right: 10px solid transparent;\n    border-top: 10px solid ${({ theme }) => theme.tooltip.background};\n    bottom: 0;\n    position: absolute;\n    transform: translate(-34px, 9px);\n    right: 0;\n  }\n`\n\nconst Container = styled.div`\n  position: relative;\n\n  &:hover ${TooltipContent}, &:focus-within ${TooltipContent} {\n    display: block;\n  }\n`\n\nconst Tooltip: React.FunctionComponent<TooltipProps> = ({ content, children, className }) => {\n  return (\n    <Container>\n      {children}\n      <TooltipContent className={className}>{content}</TooltipContent>\n    </Container>\n  )\n}\n\nexport default Tooltip\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Tooltip from '../Tooltip/Tooltip'\n\nexport interface MultiplierProps {\n  multiplier: string\n}\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: 36px;\n  text-align: right;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    text-align: left;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  svg {\n    margin-left: 14px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    svg {\n      margin-left: 0;\n    }\n  }\n`\n\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : '-'\n  const TranslateString = useI18n()\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\n      <Tooltip\n        content={\n          <div>\n            {TranslateString(999, 'The multiplier represents the amount of CAKE rewards each farm gets.')}\n            <br />\n            <br />\n            {TranslateString(\n              999,\n              'For example, if a 1x farm was getting 1 CAKE per block, a 40x farm would be getting 40 CAKE per block.',\n            )}\n          </div>\n        }\n      >\n        <HelpIcon color=\"textSubtle\" />\n      </Tooltip>\n    </Container>\n  )\n}\n\nexport default Multiplier\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Text } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Tooltip from '../Tooltip/Tooltip'\n\nexport interface LiquidityProps {\n  liquidity: number\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    text-align: left;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  svg {\n    margin-left: 14px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    svg {\n      margin-left: 0;\n    }\n  }\n`\n\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\n  const displayLiquidity = liquidity\n    ? `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n  const TranslateString = useI18n()\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>{displayLiquidity}</Text>\n      </LiquidityWrapper>\n      <Tooltip content={TranslateString(999, 'The total value of the funds in this farm’s liquidity pool')}>\n        <HelpIcon color=\"textSubtle\" />\n      </Tooltip>\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 48px;\n    margin-right: 0;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n  margin-bottom: 8px;\n`\n\nexport const Title = styled.span`\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport const Subtle = styled.span`\n  color: ${({ theme }) => theme.colors.textSubtle};\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nexport const Earned = styled.div`\n  font-weight: 600;\n  font-size: 20px;\n  color: ${({ theme }) => theme.colors.text};\n`\n\nexport const Staked = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n`\n","import React, { useState, useRef, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button } from '@chronoswap-packages/uikit'\nimport BigNumber from 'bignumber.js'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useHarvest } from 'hooks/useHarvest'\nimport useI18n from 'hooks/useI18n'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { useCountUp } from 'react-countup'\n\nimport { ActionContainer, ActionTitles, Title, Subtle, ActionContent, Earned, Staked } from './styles'\n\nconst HarvestAction: React.FunctionComponent<FarmWithStakedValue> = ({ pid, userData }) => {\n  const { account } = useWeb3React()\n  const earningsBigNumber = userData && account ? new BigNumber(userData.earnings) : null\n  const cakePrice = usePriceCakeBusd()\n  let earnings = null\n  let earningsBusd = 0\n  let displayBalance = '?'\n\n  if (earningsBigNumber) {\n    earnings = getBalanceNumber(earningsBigNumber)\n    earningsBusd = new BigNumber(earnings).multipliedBy(cakePrice).toNumber()\n    displayBalance = earnings.toLocaleString()\n  }\n\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n  const TranslateString = useI18n()\n\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: earningsBusd,\n    duration: 1,\n    separator: ',',\n    decimals: 3,\n  })\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(earningsBusd)\n  }, [earningsBusd, updateValue])\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Title>CAKE </Title>\n        <Subtle>{TranslateString(1072, 'EARNED')}</Subtle>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          <Earned>{displayBalance}</Earned>\n          <Staked>~{countUp}USD</Staked>\n        </div>\n        <Button\n          disabled={!earnings || pendingTx || !account}\n          onClick={async () => {\n            setPendingTx(true)\n            await onReward()\n            setPendingTx(false)\n          }}\n          ml=\"4px\"\n        >\n          {TranslateString(562, 'Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon } from '@chronoswap-packages/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useFarmUser } from 'state/hooks'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport useI18n from 'hooks/useI18n'\nimport { useApprove } from 'hooks/useApprove'\nimport { getBep20Contract } from 'utils/contractHelpers'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport useWeb3 from 'hooks/useWeb3'\n\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport { ActionContainer, ActionTitles, ActionContent, Earned, Title, Subtle } from './styles'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\nconst Staked: React.FunctionComponent<FarmWithStakedValue> = ({ pid, lpSymbol, lpAddresses, quoteToken, token }) => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n  const web3 = useWeb3()\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n  const displayBalance = rawStakedBalance.toLocaleString()\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={lpSymbol} addLiquidityUrl={addLiquidityUrl} />,\n  )\n  const [onPresentWithdraw] = useModal(<WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={lpSymbol} />)\n\n  const lpContract = getBep20Contract(lpAddress, web3)\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle>{TranslateString(999, 'START FARMING')}</Subtle>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (rawStakedBalance) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Title>{lpSymbol} </Title>\n            <Subtle>{TranslateString(999, 'STAKED')}</Subtle>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Earned>{displayBalance}</Earned>\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n              <IconButton variant=\"secondary\" onClick={onPresentDeposit}>\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle>{TranslateString(999, 'STAKE')} </Subtle>\n          <Title>{lpSymbol}</Title>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" onClick={onPresentDeposit} variant=\"secondary\">\n            {TranslateString(999, 'Stake LP')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Subtle>{TranslateString(999, 'ENABLE FARM')}</Subtle>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n          {TranslateString(999, 'Enable')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { LinkExternal, Text } from '@chronoswap-packages/uikit'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { communityFarms } from 'config/constants'\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\n\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport Apr, { AprProps } from '../Apr'\nimport Multiplier, { MultiplierProps } from '../Multiplier'\nimport Liquidity, { LiquidityProps } from '../Liquidity'\n\nexport interface ActionPanelProps {\n  apr: AprProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n}\n\nconst Container = styled.div`\n  background: ${({ theme }) => theme.colors.background};\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst StakeContainer = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst TagsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 16px;\n  }\n\n  > div {\n    height: 24px;\n    padding: 0 6px;\n    font-size: 14px;\n    margin-right: 4px;\n\n    svg {\n      width: 14px;\n    }\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({ details, apr, multiplier, liquidity }) => {\n  const farm = details\n\n  const TranslateString = useI18n()\n  const isActive = farm.multiplier !== '0X'\n  const { quoteToken, token, dual } = farm\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const bsc = `https://bscscan.com/address/${lpAddress}`\n  const info = `https://pancakeswap.info/pair/${lpAddress}`\n  const isCommunityFarm = communityFarms.includes(token.symbol)\n\n  return (\n    <Container>\n      <InfoContainer>\n        {isActive && (\n          <StakeContainer>\n            <StyledLinkExternal href={`https://exchange.pancakeswap.finance/#/add/${liquidityUrlPathParts}`}>\n              {TranslateString(999, `Get ${lpLabel}`, { name: lpLabel })}\n            </StyledLinkExternal>\n          </StakeContainer>\n        )}\n        <StyledLinkExternal href={bsc}>{TranslateString(999, 'View Contract')}</StyledLinkExternal>\n        <StyledLinkExternal href={info}>{TranslateString(999, 'See Pair Info')}</StyledLinkExternal>\n        <TagsContainer>\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\n          {dual ? <DualTag /> : null}\n        </TagsContainer>\n      </InfoContainer>\n      <ValueContainer>\n        <ValueWrapper>\n          <Text>{TranslateString(736, 'APR')}</Text>\n          <Apr {...apr} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{TranslateString(999, 'Multiplier')}</Text>\n          <Multiplier {...multiplier} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{TranslateString(999, 'Liquidity')}</Text>\n          <Liquidity {...liquidity} />\n        </ValueWrapper>\n      </ValueContainer>\n      <ActionContainer>\n        <HarvestAction {...farm} />\n        <StakedAction {...farm} />\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n}\n\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useMatchBreakpoints } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport Multiplier, { MultiplierProps } from './Multiplier'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row: React.FunctionComponent<RowProps> = (props) => {\n  const { details } = props\n  const [actionPanelToggled, setActionPanelToggled] = useState(false)\n  const TranslateString = useI18n()\n\n  const toggleActionPanel = () => {\n    setActionPanelToggled(!actionPanelToggled)\n  }\n\n  const { isXl, isXs } = useMatchBreakpoints()\n\n  const isMobile = !isXl\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isXs) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelToggled} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={TranslateString(736, 'APR')}>\n                        <Apr {...props.apr} hideButton={isMobile} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout\n                        label={TranslateString(tableSchema[columnIndex].translationId, tableSchema[columnIndex].label)}\n                      >\n                        {React.createElement(cells[key], props[key])}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...props.farm} />\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label={TranslateString(1072, 'Earned')}>\n                <Earned {...props.earned} />\n              </CellLayout>\n            </EarnedMobileCell>\n            <AprMobileCell>\n              <CellLayout label={TranslateString(736, 'APR')}>\n                <Apr {...props.apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelToggled} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {actionPanelToggled && details && (\n        <tr>\n          <td colSpan={6}>\n            <ActionPanel {...props} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Row, { RowProps } from './Row'\n\nexport interface ITableProps {\n  data: RowProps[]\n  columns: ColumnType<RowProps>[]\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 16px;\n  margin: 16px 0px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst FarmTable: React.FC<ITableProps> = (props) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const TranslateString = useI18n()\n  const { data, columns } = props\n\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\n\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <Container>\n      <TableContainer>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} key={`table-row-${row.id}`} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {TranslateString(999, 'To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@chronoswap-packages/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst FarmTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(1198, 'Live')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(388, 'Finished')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n","import React, { useState, useRef } from 'react'\nimport { Input } from '@chronoswap-packages/uikit'\nimport styled from 'styled-components'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 234px;\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  value: string\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst SearchInput: React.FC<Props> = ({ value, onChange }) => {\n  const [toggled, setToggled] = useState(false)\n  const inputEl = useRef(null)\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          ref={inputEl}\n          value={value}\n          onChange={onChange}\n          placeholder=\"Search farms\"\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@chronoswap-packages/uikit'\nimport { ViewMode } from '../types'\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@chronoswap-packages/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOption, setSelectedOption] = useState(options[0])\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (option: OptionProps) => () => {\n    setSelectedOption(option)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(option)\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{selectedOption.label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option) =>\n            option.label !== selectedOption.label ? (\n              <ListItem onClick={onOptionClicked(option)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React, { useEffect, useCallback, useState } from 'react'\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom'\nimport { useAppDispatch } from 'state'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Heading, RowType, Toggle, Text } from '@chronoswap-packages/uikit'\nimport styled from 'styled-components'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePriceCakeBusd, useGetApiPrices } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { Farm } from 'state/types'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getFarmApy } from 'utils/apy'\nimport { orderBy } from 'lodash'\n\nimport { getAddress } from 'utils/addressHelpers'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport SearchInput from './components/SearchInput'\nimport { RowProps } from './components/FarmTable/Row'\nimport ToggleView from './components/ToggleView/ToggleView'\nimport { DesktopColumnSchema, ViewMode } from './components/types'\nimport Select, { OptionProps } from './components/Select/Select'\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\n\nconst Header = styled.div`\n  padding: 32px 0px;\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nconst Farms: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const [query, setQuery] = useState('')\n  const [viewMode, setViewMode] = useState(ViewMode.CARD)\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n  const prices = useGetApiPrices()\n\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const [stakedOnly, setStakedOnly] = useState(false)\n  const isActive = !pathname.includes('history')\n\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X')\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X')\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedInactiveFarms = inactiveFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n    switch (sortOption) {\n      case 'apr':\n        return orderBy(farms, (farm: FarmWithStakedValue) => farm.apy, 'desc')\n      case 'multiplier':\n        return orderBy(\n          farms,\n          (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(farms, (farm: FarmWithStakedValue) => (farm.userData ? farm.userData.earnings : 0), 'desc')\n      case 'liquidity':\n        return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n      default:\n        return farms\n    }\n  }\n\n  const farmsList = useCallback(\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken || !prices) {\n          return farm\n        }\n\n        const quoteTokenPriceUsd = prices[getAddress(farm.quoteToken.address, true).toLowerCase()]  // TODO true en el getAddress\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\n        const apy = isActive ? getFarmApy(farm.poolWeight, cakePrice, totalLiquidity) : 0\n\n        return { ...farm, apy, liquidity: totalLiquidity }\n      })\n\n      if (query) {\n        const lowercaseQuery = query.toLowerCase()\n        farmsToDisplayWithAPY = farmsToDisplayWithAPY.filter((farm: FarmWithStakedValue) => {\n          return farm.lpSymbol.toLowerCase().includes(lowercaseQuery)\n        })\n      }\n      return farmsToDisplayWithAPY\n    },\n    [cakePrice, prices, query, isActive],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  let farmsStaked = []\n  if (isActive) {\n    farmsStaked = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\n  } else {\n    farmsStaked = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\n  }\n\n  farmsStaked = sortFarms(farmsStaked)\n\n  const rowData = farmsStaked.map((farm) => {\n    const { token, quoteToken } = farm\n    const tokenAddress = token.address\n    const quoteTokenAddress = quoteToken.address\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\n\n    const row: RowProps = {\n      apr: {\n        value: farm.apy && farm.apy.toLocaleString('en-US', { maximumFractionDigits: 2 }),\n        multiplier: farm.multiplier,\n        lpLabel,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice,\n        originalValue: farm.apy,\n      },\n      farm: {\n        image: farm.lpSymbol.split(' ')[0].toLocaleLowerCase(),\n        label: lpLabel,\n        pid: farm.pid,\n      },\n      earned: {\n        earnings: farm.userData ? getBalanceNumber(new BigNumber(farm.userData.earnings)) : null,\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n    }\n    return row\n  })\n\n  const renderContent = (): JSX.Element => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema\n\n      const columns = columnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      }))\n\n      return <Table data={rowData} columns={columns} />\n    }\n    return (\n      <div>\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {farmsStaked.map((farm) => (\n              <FarmCard key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed={false} />\n            ))}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsStaked.map((farm) => (\n              <FarmCard key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed />\n            ))}\n          </Route>\n        </FlexLayout>\n      </div>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  return (\n    <>\n      <Header>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n          {TranslateString(674, 'Farms')}\n        </Heading>\n        <Heading scale=\"lg\" color=\"text\">\n          {TranslateString(999, 'Stake Liquidity Pool (LP) tokens to earn.')}\n        </Heading>\n      </Header>\n      <Page>\n        <ControlContainer>\n          <ViewControls>\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n            <ToggleWrapper>\n              <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n              <Text> {TranslateString(1116, 'Staked only')}</Text>\n            </ToggleWrapper>\n            <FarmTabButtons />\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text>SORT BY</Text>\n              <Select\n                options={[\n                  {\n                    label: 'Hot',\n                    value: 'hot',\n                  },\n                  {\n                    label: 'APR',\n                    value: 'apr',\n                  },\n                  {\n                    label: 'Multiplier',\n                    value: 'multiplier',\n                  },\n                  {\n                    label: 'Earned',\n                    value: 'earned',\n                  },\n                  {\n                    label: 'Liquidity',\n                    value: 'liquidity',\n                  },\n                ]}\n                onChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text>SEARCH</Text>\n              <SearchInput onChange={handleChangeQuery} value={query} />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n        {renderContent()}\n        <StyledImage src=\"/images/3dpan.png\" alt=\"Pancake illustration\" width={120} height={103} />\n      </Page>\n    </>\n  )\n}\n\nexport default Farms\n"],"sourceRoot":""}