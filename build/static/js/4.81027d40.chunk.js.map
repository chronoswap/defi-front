{"version":3,"sources":["views/Profile/ProfileCreation/UserName.tsx","views/Profile/ProfileCreation/config.ts","views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/Profile/ProfileCreation/Header.tsx","views/Profile/components/WalletNotConnected.tsx","hooks/useHasCakeBalance.ts","views/Profile/components/SelectionCard.tsx","views/Profile/components/NextStepButton.tsx","views/Profile/ProfileCreation/contexts/hook.ts","views/Profile/ProfileCreation/Mint.tsx","views/Profile/ProfileCreation/ProfilePicture.tsx","views/Profile/ProfileCreation/TeamSelection.tsx","views/Profile/components/ConfirmProfileCreationModal.tsx","views/Profile/components/EditProfileModal/reducer.ts","views/Profile/ProfileCreation/Steps.tsx","views/Profile/ProfileCreation/index.tsx","views/Profile/components/ClaimGiftModal.tsx","hooks/useGetProfileCosts.ts","views/Profile/components/EditProfileModal/StartView.tsx","views/Profile/components/EditProfileModal/PauseProfileView.tsx","views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","views/Profile/components/EditProfileModal/ApproveCakeView.tsx","views/Profile/components/EditProfileModal/index.tsx","views/Profile/components/Header.tsx","views/Profile/components/AchievementAvatar.tsx","views/Profile/components/AchievementTitle.tsx","views/Profile/components/AchievementDescription.tsx","views/Profile/components/AchievementCard.tsx","views/Profile/components/AchievementsList.tsx","views/Profile/components/ActionColumn.tsx","views/Profile/components/AchievementRow/PointsLabel.tsx","views/Profile/components/AchievementRow/index.tsx","views/Profile/components/ClaimPointsCallout .tsx","views/Profile/components/Menu.tsx","views/Profile/TaskCenter.tsx","views/Profile/components/CardHeader.tsx","views/Profile/components/CollectibleCard.tsx","views/Profile/components/Collectibles.tsx","views/Profile/components/EditProfileAvatar.tsx","views/Profile/PublicProfile.tsx","views/Profile/index.tsx","views/TradingCompetition/components/CompetitionHeadingText.tsx","views/TradingCompetition/components/Section/sectionStyles.tsx","hooks/useTokenBalance.ts","views/TradingCompetition/pngs/all-bunnies-clipped.png","views/TradingCompetition/components/LeadInBanner/index.tsx","views/Profile/components/ApproveConfirmButtons.tsx","hooks/useApproveConfirmTransaction.ts","hooks/useGetWalletNfts.ts","views/Profile/components/HeaderWrapper.tsx","views/Profile/components/ProfileAvatar.tsx","views/Profile/components/ComingSoon.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx"],"names":["ExistingUserState","REGISTER_COST","STARTER_BUNNY_IDS","initialState","isInitialized","currentStep","teamId","tokenId","userName","minimumCakeRequired","BigNumber","MINT_COST","multipliedBy","pow","allowance","totalCost","reducer","state","action","type","step","ProfileCreationContext","createContext","ProfileCreationProvider","children","useReducer","dispatch","account","useWeb3React","useEffect","isSubscribed","a","bunnyFactoryContract","getBunnyFactoryContract","methods","canMint","call","fetchData","actions","useMemo","nextStep","setTeamId","setTokenId","setUserName","Provider","value","Wrapper","styled","div","theme","colors","textSubtle","steps","translationId","label","Header","TranslateString","useI18n","useContext","as","size","color","mb","map","index","WalletNotConnected","UnlockButton","useHasCakeBalance","minimumBalance","useTokenBalance","getCakeAddress","gte","StyledCard","Card","isSuccess","Label","isDisabled","Body","tertiary","Children","StyledBackgroundImage","src","SelectionCard","name","isChecked","image","onChange","disabled","props","checked","e","target","style","flex","NextStepButton","endIcon","useProfileCreation","nfts","nftList","filter","nft","includes","bunnyId","minimumCakeBalanceToMint","Mint","useState","setBunnyId","cakeContract","useCake","useBunnyFactory","hasMinimumCakeRequired","useApproveConfirmTransaction","onRequiresApproval","options","address","response","currentAllowance","onApprove","approve","toJSON","send","from","onConfirm","mintNFT","onSuccess","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","fontSize","bold","num","images","md","parseInt","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","onClick","Link","RouterLink","primary","NftWrapper","ProfilePicture","setIsApproved","setIsApproving","useGetWalletNfts","isLoading","nftsInWallet","pancakeRabbitsContract","usePancakeRabbits","toastError","useToast","bunnyIds","Object","keys","nftWalletItem","Number","walletNfts","length","to","marginLeft","height","walletNft","firstTokenId","tokenIds","getPancakeProfileAddress","on","error","message","spin","undefined","Team","currentTeamId","teams","useTeams","handleTeamSelection","teamValues","shuffle","values","team","id","isJoinable","mr","users","toLocaleString","ConfirmProfileCreationModal","onDismiss","profileContract","useProfile","useAppDispatch","toastSuccess","createProfile","fetchProfile","title","justifyContent","Views","profileApiUrl","process","minimumCakeToRegister","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknowledged","library","web3","useWeb3","IDLE","existingUserState","setExistingUserState","isValid","setIsValid","setIsLoading","setMessage","useModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","checkUsernameValidity","debounce","fetch","res","ok","json","data","bnbSign","signature","eth","personal","sign","method","headers","body","JSON","stringify","username","dateCreated","formatDistance","parseISO","created_at","Date","NEW","fetchUser","width","event","isWarning","minLength","maxLength","placeholder","py","minHeight","htmlFor","display","cursor","marginBottom","alignItems","scale","ml","mt","Steps","TeamSelection","ProfileCreation","Page","useCanClaim","canClaim","setCanClaim","refresh","setRefresh","checkClaimStatus","useCallback","prevRefresh","claimRefundContract","getClaimRefundContract","walletCanClaim","fetchClaimStatus","ClaimGift","setIsConfirming","useClaimRefundContract","maxWidth","getCakeBack","currentView","view","previousView","useEditProfile","START","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useGetProfileCosts","numberCakeToReactivate","numberCakeToRegister","numberCakeToUpdate","costs","setCosts","getProfileContract","makeBatchRequest","fetchCosts","DangerOutline","Button","attrs","variant","failure","AvatarWrapper","mediaQueries","sm","StartPage","needsApproval","setNeedsApproval","profile","isActive","cost","lt","checkApprovalStatus","flexDirection","ProfileAvatar","getFullDisplayBalance","PauseProfilePage","pancakeProfileContract","useProfileContract","getBalanceNumber","pauseProfile","ChangeProfilePicPage","updateProfile","getPancakeRabbitsAddress","reactivateProfile","ApproveCakePage","times","viewTitle","EditProfileModal","isStartView","handleBack","onBack","hideCloseButton","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","ProfileHeader","onPresentClaimGiftModal","onEditProfileModal","hasProfile","HeaderWrapper","startIcon","NoBadgePlaceholder","BunnyPlaceholderIcon","StyledAchievementAvatar","img","AchievementAvatar","badge","alt","AchievementTitle","fallback","Description","Text","AchievementDescription","description","Details","AchievementCard","achievement","points","Grid","AchievementsList","achievements","useAchievements","ActionColumn","PointsLabel","localePoints","StyledAchievementRow","borderColor","AchievementRow","onCollectSuccess","isCollecting","setIsCollecting","pointCenterContract","usePointCenterIfoContract","px","getPoints","ClaimPointsCallout","claimableAchievements","setClaimableAchievement","getClaimableIfoData","ifoData","fetchIfoClaims","handleCollectSuccess","addAchievement","addPoints","prevClaimableAchievements","prevClaimableAchievement","totalPointsToCollect","sumBy","Menu","activeIndex","TaskCenter","ComingSoon","CardHeader","UIKitCardHeader","isDark","getBackground","PreviewImage","CollectibleCard","lg","CollectibleList","Collectibles","tokenIdsInWallet","nftInWallet","p","EditOverlay","StyledEditProfileAvatar","EditProfileAvatar","Content","Username","Heading","Status","ResponsiveText","AddressLink","Section","PublicProfile","href","external","outline","StatBox","icon","PrizeIcon","subtitle","Profile","useFetchAchievements","PageLoader","LeadInBanner","exact","path","H1SizeStyles","H2SizeStyles","sharedStyles","background","$fill","sharedVisiblyHiddenStyles","Heading1Text","Heading2Text","VisuallyHiddenHeading2Text","DARKBG","DARKFILL","MIDBLUEBG","MIDBLUEBG_DARK","MIDBLUEFILL","MIDBLUEFILL_DARK","LIGHTBLUEBG","LIGHTBLUEBG_DARK","LIGHTBLUEFILL","LIGHTBLUEFILL_DARK","GOLDGRADIENT","useTotalSupply","slowRefresh","useRefresh","totalSupply","setTotalSupply","getCakeContract","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","contract","getBep20Contract","balanceOf","fetchBalance","fastRefresh","StyledLeadInBanner","Box","Container","PageContainer","allBunniesImageClipped","SubHeader","LearnMoreLink","LaurelWrapper","StyledApproveConfirmButtons","UIKitButton","iconAttrs","ChevronRight","ChevronRightIcon","ChevronBottom","ChevronDownIcon","spinnerIcon","approvalState","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","payload","noop","handlePreApprove","useRef","current","then","result","console","getPancakeRabbitContract","lastUpdated","now","timestamp","getTokenIdAndBunnyId","tokenOfOwnerByIndex","getBunnyId","tokenURI","tokenUri","tokenIdPromises","i","push","Promise","all","tokenIdsOwnedByWallet","reduce","accum","association","fetchNfts","TeamAvatar","card","bg","AvatarInactive","NoProfileAvatarIcon","SecondaryCard","defaultProps","Icon","textTransform"],"mappings":"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","file":"static/js/4.81027d40.chunk.js","sourcesContent":["import React, { ChangeEvent, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Text,\n  Input as UIKitInput,\n  Button,\n  AutoRenewIcon,\n  CheckmarkIcon,\n  Flex,\n  WarningIcon,\n  useModal,\n  Skeleton,\n  Checkbox,\n} from '@pancakeswap-libs/uikit'\nimport { parseISO, formatDistance } from 'date-fns'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\nimport useWeb3 from 'hooks/useWeb3'\nimport useI18n from 'hooks/useI18n'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport debounce from 'lodash/debounce'\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\nimport useProfileCreation from './contexts/hook'\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\n\nenum ExistingUserState {\n  IDLE = 'idle', // initial state\n  CREATED = 'created', // username has already been created\n  NEW = 'new', // username has not been created\n}\n\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(new BigNumber(10).pow(18))\n\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`\n\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`\n\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`\n\nconst UserName: React.FC = () => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const { teamId, tokenId, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const TranslateString = useI18n()\n  const { account, library } = useWeb3React()\n  const { toastError } = useToast()\n  const web3 = useWeb3()\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\n  const [isValid, setIsValid] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\n  const [onPresentConfirmProfileCreation] = useModal(\n    <ConfirmProfileCreationModal\n      userName={userName}\n      tokenId={tokenId}\n      account={account}\n      teamId={teamId}\n      minimumCakeRequired={minimumCakeRequired}\n      allowance={allowance}\n    />,\n    false,\n  )\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\n\n  const checkUsernameValidity = debounce(async (value: string) => {\n    try {\n      setIsLoading(true)\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`)\n\n      if (res.ok) {\n        setIsValid(true)\n        setMessage('')\n      } else {\n        const data = await res.json()\n        setIsValid(false)\n        setMessage(data?.error?.message)\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }, 200)\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    actions.setUserName(value)\n    checkUsernameValidity(value)\n  }\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true)\n\n      const signature = library?.bnbSign\n        ? (await library.bnbSign(account, userName))?.signature\n        : await web3.eth.personal.sign(userName, account, null) // Last param is the password, and is null to request a signature in the wallet\n\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n          signature,\n        }),\n      })\n\n      if (response.ok) {\n        setExistingUserState(ExistingUserState.CREATED)\n      } else {\n        const data = await response.json()\n        toastError(data?.error?.message)\n      }\n    } catch (error) {\n      toastError(error?.message ? error.message : JSON.stringify(error))\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\n\n  // Perform an initial check to see if the wallet has already created a username\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`)\n        const data = await response.json()\n\n        if (response.ok) {\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\n          setMessage(`Created ${dateCreated} ago`)\n\n          actions.setUserName(data.username)\n          setExistingUserState(ExistingUserState.CREATED)\n          setIsValid(true)\n        } else {\n          setExistingUserState(ExistingUserState.NEW)\n        }\n      } catch (error) {\n        toastError('Error: Unable to verify username')\n      }\n    }\n\n    if (account) {\n      fetchUser()\n    }\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${4}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(1110, 'Set Your Name')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(\n          999,\n          'This name will be shown in team leaderboards and search results as long as your profile is active.',\n        )}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(1110, 'Set Your Name')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(\n              840,\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\n            )}\n          </Text>\n          {existingUserState === ExistingUserState.IDLE ? (\n            <Skeleton height=\"40px\" width=\"240px\" />\n          ) : (\n            <InputWrap>\n              <Input\n                onChange={handleChange}\n                isWarning={userName && !isValid}\n                isSuccess={userName && isValid}\n                minLength={USERNAME_MIN_LENGTH}\n                maxLength={USERNAME_MAX_LENGTH}\n                disabled={isUserCreated}\n                placeholder={TranslateString(1094, 'Enter your name...')}\n                value={userName}\n              />\n              <Indicator>\n                {isLoading && <AutoRenewIcon spin />}\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\n              </Indicator>\n            </InputWrap>\n          )}\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\n            {message}\n          </Text>\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\n            {TranslateString(\n              1100,\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\n            )}\n          </Text>\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\n            <Flex alignItems=\"center\">\n              <div style={{ flex: 'none' }}>\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\n              </div>\n              <Text ml=\"8px\">\n                {TranslateString(1096, 'I understand that people can view my wallet if they know my username')}\n              </Text>\n            </Flex>\n          </label>\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\n            {TranslateString(464, 'Confirm')}\n          </Button>\n        </CardBody>\n      </Card>\n      <Button onClick={onPresentConfirmProfileCreation} disabled={!isValid || !isUserCreated}>\n        {TranslateString(842, 'Complete Profile')}\n      </Button>\n      {!hasMinimumCakeRequired && (\n        <Text color=\"failure\" mt=\"16px\">\n          {TranslateString(1098, `A minimum of ${REGISTER_COST} CAKE is required`, { num: REGISTER_COST })}\n        </Text>\n      )}\n    </>\n  )\n}\n\nexport default UserName\n","export const MINT_COST = 1\nexport const REGISTER_COST = 0.5\nexport const ALLOWANCE_MULTIPLIER = 5\nexport const STARTER_BUNNY_IDS = [5, 6, 7, 8, 9]\nexport const USERNAME_MIN_LENGTH = 3\nexport const USERNAME_MAX_LENGTH = 15\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\nimport { Actions, State, ContextType } from './types'\n\nconst totalCost = MINT_COST + REGISTER_COST\nconst allowance = totalCost * ALLOWANCE_MULTIPLIER\n\nconst initialState: State = {\n  isInitialized: false,\n  currentStep: 0,\n  teamId: null,\n  tokenId: null,\n  userName: '',\n  minimumCakeRequired: new BigNumber(totalCost).multipliedBy(new BigNumber(10).pow(18)),\n  allowance: new BigNumber(allowance).multipliedBy(new BigNumber(10).pow(18)),\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'initialize':\n      return {\n        ...state,\n        isInitialized: true,\n        currentStep: action.step,\n      }\n    case 'next_step':\n      return {\n        ...state,\n        currentStep: state.currentStep + 1,\n      }\n    case 'set_team':\n      return {\n        ...state,\n        teamId: action.teamId,\n      }\n    case 'set_tokenid':\n      return {\n        ...state,\n        tokenId: action.tokenId,\n      }\n    case 'set_username':\n      return {\n        ...state,\n        userName: action.userName,\n      }\n    default:\n      return state\n  }\n}\n\nexport const ProfileCreationContext = createContext<ContextType>(null)\n\nconst ProfileCreationProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWeb3React()\n\n  // Initial checks\n  useEffect(() => {\n    let isSubscribed = true\n\n    const fetchData = async () => {\n      const bunnyFactoryContract = getBunnyFactoryContract()\n      const canMint = await bunnyFactoryContract.methods.canMint(account).call()\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\n      if (isSubscribed) {\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n      }\n    }\n\n    if (account) {\n      fetchData()\n    }\n\n    return () => {\n      isSubscribed = false\n    }\n  }, [account, dispatch])\n\n  const actions: ContextType['actions'] = useMemo(\n    () => ({\n      nextStep: () => dispatch({ type: 'next_step' }),\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\n      setTokenId: (tokenId: number) => dispatch({ type: 'set_tokenid', tokenId }),\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\n    }),\n    [dispatch],\n  )\n\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\n}\n\nexport default ProfileCreationProvider\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { Breadcrumbs, Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Wrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nconst steps = [\n  { translationId: 776, label: 'Get Starter Collectible' },\n  { translationId: 778, label: 'Set Profile Picture' },\n  { translationId: 780, label: 'Join Team' },\n  { translationId: 782, label: 'Set Name' },\n]\n\nconst Header: React.FC = () => {\n  const TranslateString = useI18n()\n  const { currentStep } = useContext(ProfileCreationContext)\n\n  return (\n    <Wrapper>\n      <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"8px\">\n        {TranslateString(770, 'Profile Setup')}\n      </Heading>\n      <Heading as=\"h2\" size=\"lg\" mb=\"8px\">\n        {TranslateString(772, 'Show off your stats and collectibles with your unique profile')}\n      </Heading>\n      <Text color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, 'Total cost: 1.5 CAKE')}\n      </Text>\n      <Breadcrumbs>\n        {steps.map(({ translationId, label }, index) => {\n          return (\n            <Text key={label} color={index <= currentStep ? 'text' : 'textDisabled'}>\n              {TranslateString(translationId, label)}\n            </Text>\n          )\n        })}\n      </Breadcrumbs>\n    </Wrapper>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst WalletNotConnected = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <Heading size=\"xl\" mb=\"8px\">\n        {TranslateString(852, 'Oops!')}\n      </Heading>\n      <Text as=\"p\" mb=\"16px\">\n        {TranslateString(999, 'Please connect your wallet to continue')}\n      </Text>\n      <UnlockButton />\n    </div>\n  )\n}\n\nexport default WalletNotConnected\n","import BigNumber from 'bignumber.js'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useTokenBalance from './useTokenBalance'\n\n/**\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\n */\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  return cakeBalance.gte(minimumBalance)\n}\n\nexport default useHasCakeBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, Radio } from '@pancakeswap-libs/uikit'\n\ninterface SelectionCardProps {\n  name: string\n  value: string | number\n  isChecked?: boolean\n  onChange: (val: any) => void\n  image: string\n  disabled?: boolean\n}\n\nconst StyledCard = styled(Card)`\n  ${({ isSuccess }) => !isSuccess && 'box-shadow: none;'}\n  border-radius: 16px;\n  margin-bottom: 16px;\n`\n\nconst Label = styled.label<{ isDisabled: boolean }>`\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\n`\n\nconst Body = styled.div`\n  align-items: center;\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px 0 0 16px;\n  display: flex;\n  flex-grow: 1;\n  height: 80px;\n  padding: 8px 16px;\n`\n\nconst Children = styled.div`\n  margin-left: 16px;\n`\n\nconst StyledBackgroundImage = styled.div<{ src: string }>`\n  align-self: stretch;\n  background-image: url('${({ src }) => src}');\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 80px;\n`\n\nconst SelectionCard: React.FC<SelectionCardProps> = ({\n  name,\n  value,\n  isChecked = false,\n  image,\n  onChange,\n  disabled,\n  children,\n  ...props\n}) => {\n  return (\n    <StyledCard isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\n      <Label isDisabled={disabled}>\n        <Body>\n          <Radio\n            name={name}\n            checked={isChecked}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            disabled={disabled}\n            style={{ flex: 'none' }}\n          />\n          <Children>{children}</Children>\n        </Body>\n        <StyledBackgroundImage src={image} />\n      </Label>\n    </StyledCard>\n  )\n}\n\nexport default SelectionCard\n","import React from 'react'\nimport { ArrowForwardIcon, Button, ButtonProps } from '@pancakeswap-libs/uikit'\n\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\n}\n\nexport default NextStepButton\n","import { useContext } from 'react'\nimport { ProfileCreationContext } from './ProfileCreationProvider'\n\nconst useProfileCreation = () => {\n  return useContext(ProfileCreationContext)\n}\n\nexport default useProfileCreation\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useI18n from 'hooks/useI18n'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport nftList from 'config/constants/nfts'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\nimport useProfileCreation from './contexts/hook'\nimport { MINT_COST, STARTER_BUNNY_IDS } from './config'\n\nconst nfts = nftList.filter((nft) => STARTER_BUNNY_IDS.includes(nft.bunnyId))\nconst minimumCakeBalanceToMint = new BigNumber(MINT_COST).multipliedBy(new BigNumber(10).pow(18))\n\nconst Mint: React.FC = () => {\n  const [bunnyId, setBunnyId] = useState(null)\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\n\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const bunnyFactoryContract = useBunnyFactory()\n  const TranslateString = useI18n()\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalanceToMint)\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      // TODO: Move this to a helper, this check will be probably be used many times\n      try {\n        const response = await cakeContract.methods.allowance(account, bunnyFactoryContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gte(minimumCakeRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return cakeContract.methods\n        .approve(bunnyFactoryContract.options.address, allowance.toJSON())\n        .send({ from: account })\n    },\n    onConfirm: () => {\n      return bunnyFactoryContract.methods.mintNFT(bunnyId).send({ from: account })\n    },\n    onSuccess: () => actions.nextStep(),\n  })\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${1}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(776, 'Get Starter Collectible')}\n      </Heading>\n      <Text as=\"p\">{TranslateString(786, 'Every profile starts by making a “starter” collectible (NFT).')}</Text>\n      <Text as=\"p\">{TranslateString(788, 'This starter will also become your first profile picture.')}</Text>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(790, 'You can change your profile pic later if you get another approved Pancake Collectible.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(792, 'Choose your Starter!')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {TranslateString(794, 'Choose wisely: you can only ever make one starter collectible!')}\n          </Text>\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\n            {TranslateString(999, `Cost: ${MINT_COST} CAKE`, { num: MINT_COST })}\n          </Text>\n          {nfts.map((nft) => {\n            const handleChange = (value: string) => setBunnyId(parseInt(value, 10))\n\n            return (\n              <SelectionCard\n                key={nft.bunnyId}\n                name=\"mintStarter\"\n                value={nft.bunnyId}\n                image={`/images/nfts/${nft.images.md}`}\n                isChecked={bunnyId === nft.bunnyId}\n                onChange={handleChange}\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\n              >\n                <Text bold>{nft.name}</Text>\n              </SelectionCard>\n            )\n          })}\n          {!hasMinimumCakeRequired && (\n            <Text color=\"failure\" mb=\"16px\">\n              {TranslateString(1098, `A minimum of ${MINT_COST} CAKE is required`)}\n            </Text>\n          )}\n          <ApproveConfirmButtons\n            isApproveDisabled={bunnyId === null || isConfirmed || isConfirming || isApproved}\n            isApproving={isApproving}\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\n            isConfirming={isConfirming}\n            onApprove={handleApprove}\n            onConfirm={handleConfirm}\n          />\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Mint\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap-libs/uikit'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport nftList from 'config/constants/nfts'\nimport useI18n from 'hooks/useI18n'\nimport { useToast } from 'state/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { usePancakeRabbits } from 'hooks/useContract'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Link = styled(RouterLink)`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst NftWrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst ProfilePicture: React.FC = () => {\n  const [isApproved, setIsApproved] = useState(false)\n  const [isApproving, setIsApproving] = useState(false)\n  const { tokenId, actions } = useContext(ProfileCreationContext)\n  const TranslateString = useI18n()\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const { account } = useWeb3React()\n  const { toastError } = useToast()\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  const handleApprove = () => {\n    pancakeRabbitsContract.methods\n      .approve(getPancakeProfileAddress(), tokenId)\n      .send({ from: account })\n      .on('sending', () => {\n        setIsApproving(true)\n      })\n      .on('receipt', () => {\n        setIsApproving(false)\n        setIsApproved(true)\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!isLoading && walletNfts.length === 0) {\n    return (\n      <>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(852, 'Oops!')}\n        </Heading>\n        <Text bold fontSize=\"20px\" mb=\"24px\">\n          {TranslateString(854, 'We couldn’t find any Pancake Collectibles in your wallet.')}\n        </Text>\n        <Text as=\"p\">\n          {TranslateString(\n            856,\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\n          )}\n        </Text>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${2}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(778, 'Set Profile Picture')}\n      </Heading>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(812, 'Choose collectible')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {TranslateString(\n              814,\n              'Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.',\n            )}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(816, 'Only approved Pancake Collectibles can be used.')}\n            <Link to=\"/collectibles\" style={{ marginLeft: '4px' }}>\n              {TranslateString(999, 'See the list >')}\n            </Link>\n          </Text>\n          <NftWrapper>\n            {isLoading ? (\n              <Skeleton height=\"80px\" mb=\"16px\" />\n            ) : (\n              walletNfts.map((walletNft) => {\n                const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\n\n                return (\n                  <SelectionCard\n                    name=\"profilePicture\"\n                    key={walletNft.bunnyId}\n                    value={firstTokenId}\n                    image={`/images/nfts/${walletNft.images.md}`}\n                    isChecked={firstTokenId === tokenId}\n                    onChange={(value: string) => actions.setTokenId(parseInt(value, 10))}\n                  >\n                    <Text bold>{walletNft.name}</Text>\n                  </SelectionCard>\n                )\n              })\n            )}\n          </NftWrapper>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(818, 'Allow collectible to be locked')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {TranslateString(\n              820,\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\n            )}\n          </Text>\n          <Button\n            isLoading={isApproving}\n            disabled={isApproved || isApproving || tokenId === null}\n            onClick={handleApprove}\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n          >\n            {TranslateString(564, 'Approve')}\n          </Button>\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={tokenId === null || !isApproved || isApproving}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default ProfilePicture\n","import React, { useMemo } from 'react'\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@pancakeswap-libs/uikit'\nimport shuffle from 'lodash/shuffle'\nimport { useTeams } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport useProfileCreation from './contexts/hook'\n\nconst Team: React.FC = () => {\n  const { teamId: currentTeamId, actions } = useProfileCreation()\n  const TranslateString = useI18n()\n  const { teams } = useTeams()\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${3}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(826, 'Join a Team')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(828, 'It won’t be possible to undo the choice you make for the foreseeable future!')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(826, 'Join a Team')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(\n              830,\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\n            )}\n          </Text>\n          {teamValues &&\n            teamValues.map((team) => {\n              return (\n                <SelectionCard\n                  key={team.name}\n                  name=\"teams-selection\"\n                  value={team.id}\n                  isChecked={currentTeamId === team.id}\n                  image={`/images/teams/${team.images.md}`}\n                  onChange={handleTeamSelection}\n                  disabled={!team.isJoinable}\n                >\n                  <Text bold>{team.name}</Text>\n                  <Flex>\n                    <CommunityIcon mr=\"8px\" />\n                    <Text>{team.users.toLocaleString()}</Text>\n                  </Flex>\n                </SelectionCard>\n              )\n            })}\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Team\n","import React from 'react'\nimport { Modal, Flex, Text } from '@pancakeswap-libs/uikit'\nimport { useAppDispatch } from 'state'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport { useCake, usePancakeRabbits, useProfile } from 'hooks/useContract'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { fetchProfile } from 'state/profile'\nimport { useToast } from 'state/hooks'\nimport { REGISTER_COST } from '../ProfileCreation/config'\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\n\ninterface Props {\n  userName: string\n  tokenId: number\n  account: string\n  teamId: number\n  minimumCakeRequired: BigNumber\n  allowance: BigNumber\n  onDismiss?: () => void\n}\n\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\n  account,\n  teamId,\n  tokenId,\n  minimumCakeRequired,\n  allowance,\n  onDismiss,\n}) => {\n  const TranslateString = useI18n()\n  const profileContract = useProfile()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const dispatch = useAppDispatch()\n  const { toastSuccess } = useToast()\n  const cakeContract = useCake()\n\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await cakeContract.methods.allowance(account, profileContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gte(minimumCakeRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return cakeContract.methods.approve(profileContract.options.address, allowance.toJSON()).send({ from: account })\n    },\n    onConfirm: () => {\n      return profileContract.methods\n        .createProfile(teamId, pancakeRabbitsContract.options.address, tokenId)\n        .send({ from: account })\n    },\n    onSuccess: async () => {\n      await dispatch(fetchProfile(account))\n      onDismiss()\n      toastSuccess('Profile created!')\n    },\n  })\n\n  return (\n    <Modal title=\"Complete Profile\" onDismiss={onDismiss}>\n      <Text color=\"textSubtle\" mb=\"8px\">\n        {TranslateString(999, 'Submitting NFT to contract and confirming User Name and Team.')}\n      </Text>\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\n        <Text>{TranslateString(999, 'Cost')}</Text>\n        <Text>{TranslateString(999, `${REGISTER_COST} CAKE`, { num: REGISTER_COST })}</Text>\n      </Flex>\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n    </Modal>\n  )\n}\n\nexport default ConfirmProfileCreationModal\n","import { useReducer } from 'react'\n\nexport enum Views {\n  START = 'start',\n  CHANGE = 'change',\n  REMOVE = 'remove',\n  APPROVE = 'approve',\n}\n\nexport type Actions =\n  | {\n      type: 'set_view'\n      view: Views\n    }\n  | {\n      type: 'go_previous'\n    }\n\nexport interface State {\n  currentView: Views\n  previousView: Views | null\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'set_view':\n      return {\n        ...state,\n        currentView: action.view,\n        previousView: state.currentView,\n      }\n    case 'go_previous':\n      return {\n        ...state,\n        currentView: state.previousView,\n        previousView: state.currentView,\n      }\n    default:\n      return state\n  }\n}\n\nexport interface UseEditProfileResponse extends State {\n  goToStart: () => void\n  goToChange: () => void\n  goToApprove: () => void\n  goToRemove: () => void\n  goPrevious: () => void\n}\n\nconst useEditProfile = (): UseEditProfileResponse => {\n  const [state, dispatch] = useReducer(reducer, {\n    currentView: Views.START,\n    previousView: null,\n  })\n\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\n  const goPrevious = () => dispatch({ type: 'go_previous' })\n\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\n}\n\nexport default useEditProfile\n","import React, { useContext } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport NoWalletConnected from '../components/WalletNotConnected'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\nimport Mint from './Mint'\nimport ProfilePicture from './ProfilePicture'\nimport TeamSelection from './TeamSelection'\nimport UserName from './UserName'\n\nconst Steps = () => {\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return <NoWalletConnected />\n  }\n\n  if (!isInitialized) {\n    return <div>Loading...</div>\n  }\n\n  if (currentStep === 0) {\n    return <Mint />\n  }\n\n  if (currentStep === 1) {\n    return <ProfilePicture />\n  }\n\n  if (currentStep === 2) {\n    return <TeamSelection />\n  }\n\n  if (currentStep === 3) {\n    return <UserName />\n  }\n\n  return null\n}\n\nexport default Steps\n","import React from 'react'\nimport Page from 'components/layout/Page'\nimport Header from './Header'\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\nimport Steps from './Steps'\n\nconst ProfileCreation = () => (\n  <ProfileCreationProvider>\n    <Page>\n      <Header />\n      <Steps />\n    </Page>\n  </ProfileCreationProvider>\n)\n\nexport default ProfileCreation\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from '@pancakeswap-libs/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\nimport { useClaimRefundContract } from 'hooks/useContract'\nimport useI18n from 'hooks/useI18n'\nimport { getClaimRefundContract } from 'utils/contractHelpers'\n\ninterface ClaimGiftProps extends InjectedModalProps {\n  onSuccess: () => void\n}\n\nexport const useCanClaim = () => {\n  const [canClaim, setCanClaim] = useState(false)\n  const [refresh, setRefresh] = useState(1)\n  const { account } = useWeb3React()\n\n  const checkClaimStatus = useCallback(() => {\n    setRefresh((prevRefresh) => prevRefresh + 1)\n  }, [setRefresh])\n\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimRefundContract = getClaimRefundContract()\n      const walletCanClaim = await claimRefundContract.methods.canClaim(account).call()\n      setCanClaim(walletCanClaim)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, refresh, setCanClaim])\n\n  return { canClaim, checkClaimStatus }\n}\n\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { account } = useWeb3React()\n  const TranslateString = useI18n()\n  const { canClaim } = useCanClaim()\n  const claimRefundContract = useClaimRefundContract()\n  const { toastSuccess, toastError } = useToast()\n\n  const handleClick = () => {\n    claimRefundContract.methods\n      .getCakeBack()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', () => {\n        toastSuccess('Success!')\n        onSuccess()\n        onDismiss()\n      })\n      .on('error', (error) => {\n        setIsConfirming(false)\n        toastError('Error', error?.message)\n      })\n  }\n\n  return (\n    <Modal title={TranslateString(999, 'Claim your Gift!')} onDismiss={onDismiss}>\n      <div style={{ maxWidth: '640px' }}>\n        <Text as=\"p\">{TranslateString(999, 'Thank you for being a day-one user of Pancake Profiles!')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {TranslateString(\n            999,\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\n          )}\n        </Text>\n        <Text as=\"p\">\n          {TranslateString(999, \"To make it up to you, we'll refund you the full 4 CAKE it cost to make your bunny.\")}\n        </Text>\n        <Text as=\"p\" mb=\"8px\">\n          {TranslateString(\n            999,\n            \"We're also preparing an all-new collectible for you to claim (for free!) in the near future.\",\n          )}\n        </Text>\n        <Text as=\"p\" mb=\"24px\">\n          {TranslateString(\n            999,\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\n          )}\n        </Text>\n        <Button\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          isLoading={isConfirming}\n          onClick={handleClick}\n          disabled={!canClaim}\n        >\n          {TranslateString(999, 'Claim Your CAKE')}\n        </Button>\n      </div>\n    </Modal>\n  )\n}\n\nexport default ClaimGift\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { useToast } from 'state/hooks'\n\nconst useGetProfileCosts = () => {\n  const [costs, setCosts] = useState({\n    numberCakeToReactivate: new BigNumber(0),\n    numberCakeToRegister: new BigNumber(0),\n    numberCakeToUpdate: new BigNumber(0),\n  })\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    const fetchCosts = async () => {\n      try {\n        const profileContract = getProfileContract()\n        const [numberCakeToReactivate, numberCakeToRegister, numberCakeToUpdate] = await makeBatchRequest([\n          profileContract.methods.numberCakeToReactivate().call,\n          profileContract.methods.numberCakeToRegister().call,\n          profileContract.methods.numberCakeToUpdate().call,\n        ])\n\n        setCosts({\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate as string),\n          numberCakeToRegister: new BigNumber(numberCakeToRegister as string),\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate as string),\n        })\n      } catch (error) {\n        toastError('Error', 'Could not retrieve CAKE costs for profile')\n      }\n    }\n\n    fetchCosts()\n  }, [setCosts, toastError])\n\n  return costs\n}\n\nexport default useGetProfileCosts\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Flex, Text, InjectedModalProps } from '@pancakeswap-libs/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { useCake } from 'hooks/useContract'\nimport useI18n from 'hooks/useI18n'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { useProfile } from 'state/hooks'\nimport { UseEditProfileResponse } from './reducer'\nimport ProfileAvatar from '../ProfileAvatar'\n\ninterface StartPageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n  goToRemove: UseEditProfileResponse['goToRemove']\n  goToApprove: UseEditProfileResponse['goToApprove']\n}\n\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary' })`\n  border-color: ${({ theme }) => theme.colors.failure};\n  color: ${({ theme }) => theme.colors.failure};\n  margin-bottom: 24px;\n\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\n    border-color: ${({ theme }) => theme.colors.failure};\n    opacity: 0.8;\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\n  const [needsApproval, setNeedsApproval] = useState(null)\n  const { profile } = useProfile()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const minimumCakeRequired = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeRequired)\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  /**\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\n   * If they don't, we send them to the approval screen first\n   */\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      const response = await cakeContract.methods.allowance(account, getPancakeProfileAddress()).call()\n      const currentAllowance = new BigNumber(response)\n      setNeedsApproval(currentAllowance.lt(cost))\n    }\n\n    if (account) {\n      checkApprovalStatus()\n    }\n  }, [account, cost, setNeedsApproval, cakeContract])\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\n        <Text as=\"p\" color=\"failure\">\n          {!hasMinimumCakeRequired &&\n            TranslateString(999, `${getFullDisplayBalance(minimumCakeRequired)} CAKE required to change profile pic`)}\n        </Text>\n      </Flex>\n      {profile.isActive ? (\n        <>\n          <Button\n            width=\"100%\"\n            mb=\"8px\"\n            onClick={needsApproval === true ? goToApprove : goToChange}\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\n          >\n            {TranslateString(999, 'Change Profile Pic')}\n          </Button>\n          <DangerOutline width=\"100%\" onClick={goToRemove}>\n            {TranslateString(999, 'Remove Profile Pic')}\n          </DangerOutline>\n        </>\n      ) : (\n        <Button\n          width=\"100%\"\n          mb=\"8px\"\n          onClick={needsApproval === true ? goToApprove : goToChange}\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\n        >\n          {TranslateString(999, 'Reactivate Profile')}\n        </Button>\n      )}\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default StartPage\n","import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport { useAppDispatch } from 'state'\nimport { useProfile, useToast } from 'state/hooks'\nimport { fetchProfile } from 'state/profile'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useWeb3React } from '@web3-react/core'\n\ntype PauseProfilePageProps = InjectedModalProps\n\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { profile } = useProfile()\n  const { numberCakeToReactivate } = useGetProfileCosts()\n  const TranslateString = useI18n()\n  const pancakeProfileContract = useProfileContract()\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const dispatch = useAppDispatch()\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\n\n  const handleDeactivateProfile = () => {\n    pancakeProfileContract.methods\n      .pauseProfile()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess('Profile Paused!')\n\n        onDismiss()\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsConfirming(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <>\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\n        {TranslateString(999, 'This will suspend your profile and send your Collectible back to your wallet')}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(\n          999,\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\n        )}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, `Cost to reactivate in future: ${getBalanceNumber(numberCakeToReactivate)} CAKE`)}\n      </Text>\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\n        <Flex alignItems=\"center\">\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\n          <Text ml=\"8px\">{TranslateString(476, 'I understand')}</Text>\n        </Flex>\n      </label>\n      <Button\n        width=\"100%\"\n        isLoading={isConfirming}\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={!isAcknowledged || isConfirming}\n        onClick={handleDeactivateProfile}\n        mb=\"8px\"\n      >\n        {TranslateString(464, 'Confirm')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default PauseProfilePage\n","import React, { useState } from 'react'\nimport { Button, InjectedModalProps, Skeleton, Text } from '@pancakeswap-libs/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport nftList from 'config/constants/nfts'\nimport { useProfile, useToast } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { fetchProfile } from 'state/profile'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { usePancakeRabbits, useProfile as useProfileContract } from 'hooks/useContract'\nimport { getPancakeProfileAddress, getPancakeRabbitsAddress } from 'utils/addressHelpers'\nimport SelectionCard from '../SelectionCard'\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\n\ntype ChangeProfilePicPageProps = InjectedModalProps\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\n  const [tokenId, setTokenId] = useState(null)\n  const TranslateString = useI18n()\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const profileContract = useProfileContract()\n  const { account } = useWeb3React()\n  const { toastSuccess } = useToast()\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onApprove: () => {\n      return pancakeRabbitsContract.methods.approve(getPancakeProfileAddress(), tokenId).send({ from: account })\n    },\n    onConfirm: () => {\n      if (!profile.isActive) {\n        return profileContract.methods.reactivateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\n      }\n\n      return profileContract.methods.updateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\n    },\n    onSuccess: async () => {\n      // Re-fetch profile\n      await dispatch(fetchProfile(account))\n      toastSuccess('Profile Updated!')\n\n      onDismiss()\n    },\n  })\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, 'Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      {isLoading ? (\n        <Skeleton height=\"80px\" mb=\"16px\" />\n      ) : (\n        walletNfts.map((walletNft) => {\n          const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\n\n          return (\n            <SelectionCard\n              name=\"profilePicture\"\n              key={walletNft.bunnyId}\n              value={firstTokenId}\n              image={`/images/nfts/${walletNft.images.md}`}\n              isChecked={firstTokenId === tokenId}\n              onChange={(value: string) => setTokenId(parseInt(value, 10))}\n              disabled={isApproving || isConfirming || isConfirmed}\n            >\n              <Text bold>{walletNft.name}</Text>\n            </SelectionCard>\n          )\n        })\n      )}\n      {!isLoading && walletNfts.length === 0 && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {TranslateString(999, 'Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(999, 'Make sure you have a Pancake Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed || tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useCake } from 'hooks/useContract'\nimport { useProfile, useToast } from 'state/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport { UseEditProfileResponse } from './reducer'\n\ninterface ApproveCakePageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n}\n\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\n  const [isApproving, setIsApproving] = useState(false)\n  const { profile } = useProfile()\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const cakeContract = useCake()\n  const { toastError } = useToast()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(getPancakeProfileAddress(), cost.times(2).toJSON())\n      .send({ from: account })\n      .on('sending', () => {\n        setIsApproving(true)\n      })\n      .on('receipt', () => {\n        goToChange()\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text>\n          {profile.isActive ? TranslateString(999, 'Cost to update:') : TranslateString(999, 'Cost to reactivate:')}\n        </Text>\n        <Text>{TranslateString(999, `${getFullDisplayBalance(cost)} CAKE`)}</Text>\n      </Flex>\n      <Button\n        disabled={isApproving}\n        isLoading={isApproving}\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={handleApprove}\n      >\n        {TranslateString(999, 'Approve')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveCakePage\n","import React from 'react'\nimport { InjectedModalProps, Modal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useEditProfile, { Views } from './reducer'\nimport StartView from './StartView'\nimport PauseProfileView from './PauseProfileView'\nimport ChangeProfilePicView from './ChangeProfilePicView'\nimport ApproveCakeView from './ApproveCakeView'\n\ntype EditProfileModalProps = InjectedModalProps\n\nconst viewTitle = {\n  [Views.START]: { id: 999, label: 'Edit Profile' },\n  [Views.CHANGE]: { id: 999, label: 'Change Profile Pic' },\n  [Views.REMOVE]: { id: 999, label: 'Remove Profile Pic' },\n  [Views.APPROVE]: { id: 999, label: 'Approve CAKE' },\n}\n\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\n  const TranslateString = useI18n()\n  const { id, label } = viewTitle[currentView]\n\n  const isStartView = currentView === Views.START\n  const handleBack = isStartView ? null : () => goPrevious()\n\n  return (\n    <Modal title={TranslateString(id, label)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\n      <div style={{ maxWidth: '400px' }}>\n        {currentView === Views.START && (\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\n        )}\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\n      </div>\n    </Modal>\n  )\n}\n\nexport default EditProfileModal\n","import React from 'react'\nimport { Button, Flex, Heading, useModal, Won } from '@pancakeswap-libs/uikit'\nimport { useProfile } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\nimport HeaderWrapper from './HeaderWrapper'\nimport EditProfileModal from './EditProfileModal'\n\nconst ProfileHeader = () => {\n  const TranslateString = useI18n()\n  const { canClaim, checkClaimStatus } = useCanClaim()\n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n  const { hasProfile } = useProfile()\n\n  return (\n    <HeaderWrapper>\n      <Flex\n        flexDirection={['column', null, 'row']}\n        alignItems={['start', null, 'center']}\n        justifyContent=\"space-between\"\n      >\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"8px\" color=\"secondary\">\n            {TranslateString(999, 'Your Profile')}\n          </Heading>\n          <Heading as=\"h2\" size=\"lg\" mb=\"16px\">\n            {TranslateString(999, 'Check your stats and collect achievements')}\n          </Heading>\n          {hasProfile && <Button onClick={onEditProfileModal}>{TranslateString(999, 'Edit Profile')}</Button>}\n        </div>\n        {canClaim && (\n          <Button variant=\"tertiary\" onClick={onPresentClaimGiftModal} startIcon={<Won />}>\n            {TranslateString(999, \"You've got a gift to claim!\")}\n          </Button>\n        )}\n      </Flex>\n    </HeaderWrapper>\n  )\n}\n\nexport default ProfileHeader\n","import React, { ImgHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { BunnyPlaceholderIcon } from '@pancakeswap-libs/uikit'\n\ninterface AchievementAvatarProps extends ImgHTMLAttributes<HTMLImageElement> {\n  badge?: string\n}\n\nconst NoBadgePlaceholder = styled(BunnyPlaceholderIcon)`\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst StyledAchievementAvatar = styled.img`\n  border-radius: 50%;\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst AchievementAvatar: React.FC<AchievementAvatarProps> = ({ badge, ...props }) => {\n  if (!badge) {\n    return <NoBadgePlaceholder />\n  }\n\n  return <StyledAchievementAvatar src={`/images/achievements/${badge}`} alt=\"achievement badge\" {...props} />\n}\n\nexport default AchievementAvatar\n","import React from 'react'\nimport { Text, TextProps } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { TranslatableText as AchievementTitleType } from 'state/types'\n\ninterface AchievementTitleProps extends TextProps {\n  title: AchievementTitleType\n}\n\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\n  const TranslateString = useI18n()\n\n  if (typeof title === 'string') {\n    return (\n      <Text bold {...props}>\n        {title}\n      </Text>\n    )\n  }\n\n  const { id, fallback, data = {} } = title\n\n  return (\n    <Text bold {...props}>\n      {TranslateString(id, fallback, data)}\n    </Text>\n  )\n}\n\nexport default AchievementTitle\n","import React from 'react'\nimport { Text, TextProps } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { TranslatableText as AchievementDescriptionType } from 'state/types'\nimport styled from 'styled-components'\n\ninterface AchievementDescriptionProps extends TextProps {\n  description?: AchievementDescriptionType\n}\n\nconst Description = styled(Text).attrs({ as: 'p', fontSize: '14px' })`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst AchievementDescription: React.FC<AchievementDescriptionProps> = ({ description, ...props }) => {\n  const TranslateString = useI18n()\n\n  if (!description) {\n    return null\n  }\n\n  if (typeof description === 'string') {\n    return (\n      <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\" {...props}>\n        {description}\n      </Text>\n    )\n  }\n\n  const { id, fallback, data = {} } = description\n\n  return (\n    <Description color=\"textSubtle\" {...props}>\n      {TranslateString(id, fallback, data)}\n    </Description>\n  )\n}\n\nexport default AchievementDescription\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, PrizeIcon, Text } from '@pancakeswap-libs/uikit'\nimport { Achievement } from 'state/types'\nimport AchievementAvatar from './AchievementAvatar'\nimport AchievementTitle from './AchievementTitle'\nimport AchievementDescription from './AchievementDescription'\n\ninterface AchievementCardProps {\n  achievement: Achievement\n}\n\nconst Details = styled(Flex)`\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: 8px;\n  padding-right: 8px;\n`\n\nconst AchievementCard: React.FC<AchievementCardProps> = ({ achievement }) => {\n  return (\n    <Flex>\n      <AchievementAvatar badge={achievement.badge} />\n      <Details>\n        <AchievementTitle title={achievement.title} />\n        <AchievementDescription description={achievement.description} />\n      </Details>\n      <Flex alignItems=\"center\">\n        <PrizeIcon width=\"18px\" color=\"textSubtle\" mr=\"4px\" />\n        <Text color=\"textSubtle\">{achievement.points.toLocaleString()}</Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default AchievementCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useAchievements } from 'state/hooks'\nimport AchievementCard from './AchievementCard'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 1fr;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`\n\nconst AchievementsList = () => {\n  const TranslateString = useI18n()\n  const achievements = useAchievements()\n\n  return (\n    <>\n      <Grid>\n        {achievements.map((achievement) => (\n          <AchievementCard key={achievement.id} achievement={achievement} />\n        ))}\n      </Grid>\n      {achievements.length === 0 && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" style={{ height: '64px' }}>\n          <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\n            {TranslateString(999, 'No achievements yet!')}\n          </Heading>\n        </Flex>\n      )}\n    </>\n  )\n}\n\nexport default AchievementsList\n","import styled from 'styled-components'\n\nconst ActionColumn = styled.div`\n  flex: none;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 160px;\n\n    & > button {\n      width: 100%;\n    }\n  }\n`\n\nexport default ActionColumn\n","import React from 'react'\nimport { Flex, FlexProps, PrizeIcon, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PointsLabelProps extends FlexProps {\n  points: number\n}\n\nconst PointsLabel: React.FC<PointsLabelProps> = ({ points, ...props }) => {\n  const TranslateString = useI18n()\n  const localePoints = points.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" {...props}>\n      <PrizeIcon mr=\"4px\" color=\"textSubtle\" />\n      <Text color=\"textSubtle\">{TranslateString(999, `${localePoints} points`, { num: localePoints })}</Text>\n    </Flex>\n  )\n}\n\nexport default PointsLabel\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Flex } from '@pancakeswap-libs/uikit'\nimport { Achievement } from 'state/types'\nimport { useToast } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { usePointCenterIfoContract } from 'hooks/useContract'\nimport ActionColumn from '../ActionColumn'\nimport PointsLabel from './PointsLabel'\nimport AchievementTitle from '../AchievementTitle'\nimport AchievementAvatar from '../AchievementAvatar'\nimport AchievementDescription from '../AchievementDescription'\n\ninterface AchievementRowProps {\n  achievement: Achievement\n  onCollectSuccess?: (achievement: Achievement) => void\n}\n\nconst StyledAchievementRow = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\n  padding-bottom: 16px;\n  padding-top: 16px;\n`\n\nconst Details = styled.div`\n  flex: 1;\n`\n\nconst Body = styled(Flex)`\n  flex-direction: column;\n  flex: 1;\n  margin-left: 8px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    align-items: center;\n    flex-direction: row;\n  }\n`\n\nconst AchievementRow: React.FC<AchievementRowProps> = ({ achievement, onCollectSuccess }) => {\n  const [isCollecting, setIsCollecting] = useState(false)\n  const TranslateString = useI18n()\n  const pointCenterContract = usePointCenterIfoContract()\n  const { account } = useWeb3React()\n  const { toastError, toastSuccess } = useToast()\n\n  const handleCollectPoints = () => {\n    pointCenterContract.methods\n      .getPoints(achievement.address)\n      .send({ from: account })\n      .on('sending', () => {\n        setIsCollecting(true)\n      })\n      .on('receipt', () => {\n        setIsCollecting(false)\n        onCollectSuccess(achievement)\n        toastSuccess('Points Collected!')\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsCollecting(false)\n      })\n  }\n\n  return (\n    <StyledAchievementRow>\n      <AchievementAvatar badge={achievement.badge} />\n      <Body>\n        <Details>\n          <AchievementTitle title={achievement.title} />\n          <AchievementDescription description={achievement.description} />\n        </Details>\n        <PointsLabel points={achievement.points} px={[0, null, null, '32px']} mb={['16px', null, null, 0]} />\n        <ActionColumn>\n          <Button\n            onClick={handleCollectPoints}\n            isLoading={isCollecting}\n            endIcon={isCollecting ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n            disabled={isCollecting}\n            variant=\"secondary\"\n          >\n            {TranslateString(999, 'Collect')}\n          </Button>\n        </ActionColumn>\n      </Body>\n    </StyledAchievementRow>\n  )\n}\n\nexport default AchievementRow\n","import React, { useEffect, useState } from 'react'\nimport { sumBy } from 'lodash'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, CardBody, CardHeader, Flex, Heading, PrizeIcon } from '@pancakeswap-libs/uikit'\nimport { useProfile } from 'state/hooks'\nimport { Achievement } from 'state/types'\nimport { addPoints } from 'state/profile'\nimport { addAchievement } from 'state/achievements'\nimport useI18n from 'hooks/useI18n'\nimport { getClaimableIfoData } from 'utils/achievements'\nimport AchievementRow from './AchievementRow'\n\nconst ClaimPointsCallout = () => {\n  const [claimableAchievements, setClaimableAchievement] = useState<Achievement[]>([])\n  const TranslateString = useI18n()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const fetchIfoClaims = async () => {\n      const ifoData = await getClaimableIfoData(account)\n      setClaimableAchievement(ifoData)\n    }\n\n    if (account) {\n      fetchIfoClaims()\n    }\n  }, [account, dispatch, setClaimableAchievement])\n\n  const handleCollectSuccess = (achievement: Achievement) => {\n    dispatch(addAchievement(achievement))\n    dispatch(addPoints(achievement.points))\n\n    setClaimableAchievement((prevClaimableAchievements) =>\n      prevClaimableAchievements.filter((prevClaimableAchievement) => prevClaimableAchievement.id !== achievement.id),\n    )\n  }\n\n  if (!profile?.isActive) {\n    return null\n  }\n\n  if (claimableAchievements.length === 0) {\n    return null\n  }\n\n  const totalPointsToCollect = sumBy(claimableAchievements, 'points')\n\n  return (\n    <Card isActive mb=\"32px\">\n      <CardHeader>\n        <Flex flexDirection={['column', null, 'row']} justifyContent={['start', null, 'space-between']}>\n          <Flex alignItems=\"center\" mb={['16px', null, 0]}>\n            <PrizeIcon width=\"32px\" mr=\"8px\" />\n            <Heading size=\"lg\">\n              {TranslateString(999, `${totalPointsToCollect} Points to Collect`, { num: totalPointsToCollect })}\n            </Heading>\n          </Flex>\n        </Flex>\n      </CardHeader>\n      <CardBody>\n        {claimableAchievements.map((achievement) => (\n          <AchievementRow key={achievement.address} achievement={achievement} onCollectSuccess={handleCollectSuccess} />\n        ))}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ClaimPointsCallout\n","import useI18n from 'hooks/useI18n'\nimport React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { ChevronLeftIcon, Flex, Text, ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\n\ninterface MenuProps {\n  activeIndex?: number\n}\n\nconst Menu: React.FC<MenuProps> = ({ activeIndex = 0 }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <Flex mb=\"24px\">\n        <RouterLink to=\"/teams\">\n          <Flex alignItems=\"center\">\n            <ChevronLeftIcon color=\"primary\" />\n            <Text color=\"primary\">{TranslateString(1038, 'Teams Overview')}</Text>\n          </Flex>\n        </RouterLink>\n      </Flex>\n\n      <Flex mb=\"24px\" justifyContent=\"center\">\n        <ButtonMenu activeIndex={activeIndex} variant=\"subtle\" scale=\"sm\">\n          <ButtonMenuItem as={RouterLink} to=\"/profile/tasks\">\n            {TranslateString(1090, 'Task Center')}\n          </ButtonMenuItem>\n          <ButtonMenuItem as={RouterLink} to=\"/profile\">\n            {TranslateString(1104, 'Public Profile')}\n          </ButtonMenuItem>\n        </ButtonMenu>\n      </Flex>\n    </>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { Card, CardBody, CardHeader, Flex, Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport AchievementsList from './components/AchievementsList'\nimport ClaimPointsCallout from './components/ClaimPointsCallout '\nimport ComingSoon from './components/ComingSoon'\nimport Menu from './components/Menu'\n\nconst TaskCenter = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <Menu />\n      <ClaimPointsCallout />\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading size=\"lg\" mb=\"8px\">\n                {TranslateString(1092, 'Achievements')}\n              </Heading>\n              <Text as=\"p\">{TranslateString(1084, 'Earn more points for completing larger quests!')}</Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <AchievementsList />\n        </CardBody>\n      </Card>\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading size=\"lg\" mb=\"8px\">\n                {TranslateString(1090, 'Task Center')}\n              </Heading>\n              <Text as=\"p\">{TranslateString(1088, 'Earn points by completing regular tasks!')}</Text>\n              <Text as=\"p\">\n                {TranslateString(1086, 'Collecting points for these tasks makes them available again.')}\n              </Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <ComingSoon />\n        </CardBody>\n      </Card>\n    </>\n  )\n}\n\nexport default TaskCenter\n","import styled, { DefaultTheme } from 'styled-components'\nimport { CardHeader as UIKitCardHeader } from '@pancakeswap-libs/uikit'\n\nconst getBackground = (theme: DefaultTheme) => {\n  if (theme.isDark) {\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\n  }\n\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\n}\n\nconst CardHeader = styled(UIKitCardHeader)`\n  background: ${({ theme }) => getBackground(theme)};\n  position: relative;\n`\n\nexport default CardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport { Nft } from 'config/constants/types'\n\ninterface CollectibleCardProps {\n  nft: Nft\n}\n\nconst PreviewImage = styled.img`\n  border-radius: 4px;\n  margin-bottom: 8px;\n`\n\nconst CollectibleCard: React.FC<CollectibleCardProps> = ({ nft }) => {\n  return (\n    <div>\n      <PreviewImage src={`/images/nfts/${nft.images.lg}`} />\n      <Text bold mb=\"8px\">\n        {nft.name}\n      </Text>\n      <Text as=\"p\" fontSize=\"12px\" color=\"textSubtle\">\n        {nft.description}\n      </Text>\n    </div>\n  )\n}\n\nexport default CollectibleCard\n","import React from 'react'\nimport { Heading, Text, Flex, ChevronRightIcon } from '@pancakeswap-libs/uikit'\nimport { Link } from 'react-router-dom'\nimport useI18n from 'hooks/useI18n'\nimport nfts from 'config/constants/nfts'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport styled from 'styled-components'\nimport CollectibleCard from './CollectibleCard'\n\nconst CollectibleList = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 24px;\n    grid-template-columns: repeat(3, 1fr);\n    padding: 24px 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`\n\nconst Collectibles = () => {\n  const TranslateString = useI18n()\n  const { nfts: tokenIdsInWallet } = useGetWalletNfts()\n  const bunnyIds = Object.keys(tokenIdsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const nftsInWallet = nfts.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  return (\n    <>\n      <Heading as=\"h4\" size=\"md\" mb=\"8px\">\n        {TranslateString(999, 'Pancake Collectibles')}\n      </Heading>\n      <Text as=\"p\">\n        {TranslateString(\n          999,\n          'Pancake Collectibles are special ERC-721 NFTs that can be used on the PancakeSwap platform.',\n        )}\n      </Text>\n      <Text as=\"p\">\n        {TranslateString(\n          999,\n          \"NFTs in this user's wallet that aren't approved Pancake Collectibles won't be shown here.\",\n        )}\n      </Text>\n      {nftsInWallet.length > 0 && (\n        <CollectibleList>\n          {nftsInWallet.map((nftInWallet) => (\n            <CollectibleCard key={nftInWallet.bunnyId} nft={nftInWallet} />\n          ))}\n        </CollectibleList>\n      )}\n      {nftsInWallet.length === 0 && (\n        <Flex justifyContent=\"center\" p=\"32px\">\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\n            {TranslateString(999, 'No NFTs Found')}\n          </Text>\n        </Flex>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n        <Link to=\"/collectibles\">{TranslateString(999, 'See all approved Pancake Collectibles')}</Link>\n        <ChevronRightIcon />\n      </Flex>\n    </>\n  )\n}\n\nexport default Collectibles\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useModal } from '@pancakeswap-libs/uikit'\nimport EditProfileModal from './EditProfileModal'\nimport ProfileAvatar, { ProfileAvatarProps } from './ProfileAvatar'\n\nconst EditOverlay = styled.div`\n  background: rgba(0, 0, 0, 0.6) url('/images/camera.svg') no-repeat center center;\n  background-size: 24px;\n  border-radius: 50%;\n  left: 0;\n  height: 100%;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  transition: opacity 300ms;\n  width: 100%;\n  z-index: 3;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    background-size: 48px;\n  }\n`\n\nconst StyledEditProfileAvatar = styled.div`\n  position: relative;\n\n  &:hover {\n    cursor: pointer;\n\n    ${EditOverlay} {\n      opacity: 1;\n    }\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst EditProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n\n  return (\n    <StyledEditProfileAvatar onClick={onEditProfileModal}>\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <EditOverlay />\n    </StyledEditProfileAvatar>\n  )\n}\n\nexport default EditProfileAvatar\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Card,\n  CardBody,\n  CheckmarkCircleIcon,\n  Flex,\n  Heading,\n  Link,\n  Tag,\n  Text,\n  PrizeIcon,\n  OpenNewIcon,\n  BlockIcon,\n} from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useProfile } from 'state/hooks'\nimport Menu from './components/Menu'\nimport CardHeader from './components/CardHeader'\nimport Collectibles from './components/Collectibles'\nimport WalletNotConnected from './components/WalletNotConnected'\nimport StatBox from './components/StatBox'\nimport EditProfileAvatar from './components/EditProfileAvatar'\nimport AchievementsList from './components/AchievementsList'\n\nconst Content = styled.div`\n  flex: 1;\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 0 16px;\n  }\n`\n\nconst Username = styled(Heading)`\n  font-size: 16px;\n  line-height: 24px;\n  margin-bottom: 8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 40px;\n    line-height: 44px;\n  }\n`\n\nconst Status = styled.div`\n  position: absolute;\n  right: 24px;\n  top: 24px;\n`\n\nconst ResponsiveText = styled(Text)`\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n  }\n`\n\nconst AddressLink = styled(Link)`\n  display: inline-block;\n  font-weight: 400;\n  font-size: 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 80px;\n  white-space: nowrap;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n    width: auto;\n  }\n`\n\nconst Section = styled.div`\n  margin-bottom: 40px;\n`\n\nconst PublicProfile = () => {\n  const { account } = useWeb3React()\n  const { profile } = useProfile()\n  const TranslateString = useI18n()\n\n  if (!account) {\n    return <WalletNotConnected />\n  }\n\n  return (\n    <>\n      <Menu activeIndex={1} />\n      <div>\n        <Card>\n          <CardHeader>\n            <Flex alignItems={['start', null, 'center']} flexDirection={['column', null, 'row']}>\n              <EditProfileAvatar profile={profile} />\n              <Content>\n                <Username>{`@${profile.username}`}</Username>\n                <Flex alignItems=\"center\">\n                  <AddressLink href={`https://bscscan.com/address/${account}`} color=\"text\" external>\n                    {account}\n                  </AddressLink>\n                  <OpenNewIcon ml=\"4px\" />\n                </Flex>\n                <ResponsiveText bold>{profile.team.name}</ResponsiveText>\n              </Content>\n            </Flex>\n            <Status>\n              {profile.isActive ? (\n                <Tag startIcon={<CheckmarkCircleIcon width=\"18px\" />} outline>\n                  {TranslateString(698, 'Active')}\n                </Tag>\n              ) : (\n                <Tag variant=\"failure\" startIcon={<BlockIcon width=\"18px\" />} outline>\n                  {TranslateString(999, 'Paused')}\n                </Tag>\n              )}\n            </Status>\n          </CardHeader>\n          <CardBody>\n            <StatBox icon={PrizeIcon} title={profile.points} subtitle={TranslateString(999, 'Points')} mb=\"24px\" />\n            <Section>\n              <Heading as=\"h4\" size=\"md\" mb=\"16px\">\n                {TranslateString(1092, 'Achievements')}\n              </Heading>\n              <AchievementsList />\n            </Section>\n            <Collectibles />\n          </CardBody>\n        </Card>\n      </div>\n    </>\n  )\n}\n\nexport default PublicProfile\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport Page from 'components/layout/Page'\nimport PageLoader from 'components/PageLoader'\nimport { useFetchAchievements, useProfile } from 'state/hooks'\nimport ProfileCreation from './ProfileCreation'\nimport Header from './components/Header'\nimport TaskCenter from './TaskCenter'\nimport PublicProfile from './PublicProfile'\nimport LeadInBanner from '../TradingCompetition/components/LeadInBanner'\n\nconst Profile = () => {\n  const { isInitialized, isLoading, hasProfile } = useProfile()\n  const { account } = useWeb3React()\n\n  useFetchAchievements()\n\n  if (!isInitialized || isLoading) {\n    return <PageLoader />\n  }\n\n  if (account && !hasProfile) {\n    return (\n      <Page>\n        <ProfileCreation />\n      </Page>\n    )\n  }\n\n  return (\n    <>\n      <LeadInBanner />\n      <Page>\n        <Header />\n        <Route exact path=\"/profile\">\n          <PublicProfile />\n        </Route>\n        <Route path=\"/profile/tasks\">\n          <TaskCenter />\n        </Route>\n      </Page>\n    </>\n  )\n}\n\nexport default Profile\n","import { Heading } from '@pancakeswap-libs/uikit'\nimport styled, { DefaultTheme } from 'styled-components'\n\nconst H1SizeStyles = (theme: DefaultTheme) => `\n  font-size: 48px;\n  white-space: nowrap;\n\n  ${theme.mediaQueries.sm} {\n    font-size: 64px;\n  }\n`\n\nconst H2SizeStyles = (theme: DefaultTheme) => `\n  font-size: 32px;\n  white-space: nowrap;\n\n  ${theme.mediaQueries.sm} {\n    font-size: 40px\n  }\n`\n\nconst sharedStyles = (props: HeadingProps) => `\n  text-align: center;\n  line-height: 110%;\n  color: #ffffff;\n  background:  ${props.background ? props.background : 'linear-gradient(#7645d9 0%, #452a7a 100%)'};\n  background-clip: text;\n  -webkit-background-clip: text;\n  ${\n    props.$fill\n      ? `-webkit-text-fill-color: transparent;`\n      : `-webkit-text-stroke: 4px transparent;\n       text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);`\n  }\n`\n\nconst sharedVisiblyHiddenStyles = `\n  visibility: hidden;\n  height: 0px;\n`\n\ninterface HeadingProps {\n  background?: string\n  $fill?: boolean\n}\n\nexport const Heading1Text = styled(Heading)<HeadingProps>`\n  ${({ theme }) => H1SizeStyles(theme)}\n  ${(props) => sharedStyles(props)}\n`\n\nexport const Heading2Text = styled(Heading)<HeadingProps>`\n  ${({ theme }) => H2SizeStyles(theme)}\n  ${(props) => sharedStyles(props)}\n`\n\nexport const VisuallyHiddenHeading1Text = styled(Heading)`\n  ${({ theme }) => H1SizeStyles(theme)}\n  ${sharedVisiblyHiddenStyles}\n`\n\nexport const VisuallyHiddenHeading2Text = styled(Heading)`\n  ${({ theme }) => H2SizeStyles(theme)}\n  ${sharedVisiblyHiddenStyles}\n`\n\nexport default Heading1Text\n","export const DARKBG = 'radial-gradient(329.58% 50% at 50% 50%, #3B2864 0%, #191326 100%)'\nexport const DARKFILL = '#191326'\nexport const MIDBLUEBG = 'linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%)'\nexport const MIDBLUEBG_DARK = 'linear-gradient(180deg, #434575 0%, #66578D 100%)'\nexport const MIDBLUEFILL = '#9A9FD0'\nexport const MIDBLUEFILL_DARK = '#66578D'\nexport const LIGHTBLUEBG = 'linear-gradient(139.73deg, #E6FDFF 0%, #F3EFFF 100%)'\nexport const LIGHTBLUEBG_DARK = 'linear-gradient(139.73deg, #313D5C 0%, #3D2A54 100%)'\nexport const LIGHTBLUEFILL = '#F3EFFF'\nexport const LIGHTBLUEFILL_DARK = '#3D2A54'\nexport const GOLDGRADIENT = 'linear-gradient(180deg, #FFD800 0%, #EB8C00 100%)'\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","export default __webpack_public_path__ + \"static/media/all-bunnies-clipped.6aa99e2e.png\";","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { ArrowForwardIcon, Box, Flex, LaurelLeftIcon, LaurelRightIcon } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport PageContainer from 'components/layout/Container'\nimport allBunniesImageClipped from '../../pngs/all-bunnies-clipped.png'\nimport { DARKBG, GOLDGRADIENT } from '../Section/sectionStyles'\nimport { Heading1Text, Heading2Text } from '../CompetitionHeadingText'\n\nconst StyledLeadInBanner = styled(Box)`\n  background: ${DARKBG};\n`\n\nconst Container = styled(PageContainer)`\n  padding-bottom: 24px;\n  padding-top: 24px;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    background: url(${allBunniesImageClipped}) no-repeat bottom right 24px;\n    text-align: left;\n  }\n`\n\nconst Header = styled(Heading1Text)`\n  font-size: 24px;\n`\n\nconst SubHeader = styled(Heading2Text)`\n  font-size: 24px;\n  margin-bottom: 4px;\n`\n\nconst LearnMoreLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: inline-flex;\n  font-weight: 600;\n`\n\nconst LaurelWrapper = styled.div`\n  flex: none;\n  width: 40px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst LeadInBanner = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledLeadInBanner>\n      <Container>\n        <Flex alignItems=\"center\" justifyContent={['center', 'center', null, 'start']}>\n          <LaurelWrapper>\n            <LaurelLeftIcon width=\"40px\" color=\"warning\" />\n          </LaurelWrapper>\n          <Box px={['8px', '16px', null, '0']}>\n            <Header>{TranslateString(999, 'Easter Battle')}</Header>\n            <SubHeader background={GOLDGRADIENT} $fill>\n              {TranslateString(999, '$200,000 in Prizes!')}\n            </SubHeader>\n            <LearnMoreLink id=\"hp-learn-more-cta\" to=\"/competition\">\n              {TranslateString(999, 'Learn More')}\n              <ArrowForwardIcon color=\"primary\" ml=\"4px\" />\n            </LearnMoreLink>\n          </Box>\n          <LaurelWrapper>\n            <LaurelRightIcon width=\"40px\" color=\"warning\" />\n          </LaurelWrapper>\n        </Flex>\n      </Container>\n    </StyledLeadInBanner>\n  )\n}\n\nexport default LeadInBanner\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  ChevronRightIcon,\n  Button as UIKitButton,\n  AutoRenewIcon,\n  ChevronDownIcon,\n  Box,\n  Flex,\n} from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n}\n\nconst StyledApproveConfirmButtons = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledApproveConfirmButtons>\n      <Box>\n        <Button\n          disabled={isApproveDisabled}\n          onClick={onApprove}\n          endIcon={isApproving ? spinnerIcon : undefined}\n          isLoading={isApproving}\n        >\n          {isApproving ? TranslateString(800, 'Approving') : TranslateString(564, 'Approve')}\n        </Button>\n      </Box>\n      <Flex justifyContent=\"center\">\n        <ChevronRight />\n        <ChevronBottom />\n      </Flex>\n      <Box>\n        <Button\n          onClick={onConfirm}\n          disabled={isConfirmDisabled}\n          isLoading={isConfirming}\n          endIcon={isConfirming ? spinnerIcon : undefined}\n        >\n          {isConfirming ? TranslateString(802, 'Confirming') : TranslateString(464, 'Confirm')}\n        </Button>\n      </Box>\n    </StyledApproveConfirmButtons>\n  )\n}\n\nexport default ApproveConfirmButtons\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\n\ntype Web3Payload = Record<string, unknown> | null\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt'; payload: Web3Payload }\n  | { type: 'approve_error'; payload: Web3Payload }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt'; payload: Web3Payload }\n  | { type: 'confirm_error'; payload: Web3Payload }\n\ninterface State {\n  approvalState: LoadingState\n  approvalReceipt: Web3Payload\n  approvalError: Web3Payload\n  confirmState: LoadingState\n  confirmReceipt: Web3Payload\n  confirmError: Web3Payload\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  approvalReceipt: null,\n  approvalError: null,\n  confirmState: 'idle',\n  confirmReceipt: null,\n  confirmError: null,\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n        approvalReceipt: actions.payload,\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n        approvalError: actions.payload,\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n        confirmReceipt: actions.payload,\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n        confirmError: actions.payload,\n      }\n    default:\n      return state\n  }\n}\n\ntype ContractHandler = () => any\n\ninterface ApproveConfirmTransaction {\n  onApprove: ContractHandler\n  onConfirm: ContractHandler\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: (state: State) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    approvalReceipt: state.approvalReceipt,\n    approvalError: state.approvalError,\n    confirmReceipt: state.confirmReceipt,\n    confirmError: state.confirmError,\n    handleApprove: () => {\n      onApprove()\n        .on('sending', () => {\n          dispatch({ type: 'approve_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'approve_receipt', payload })\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'approve_error', payload: error })\n          console.error('An error occurred approving transaction:', error)\n          toastError('An error occurred approving transaction')\n        })\n    },\n    handleConfirm: () => {\n      onConfirm()\n        .on('sending', () => {\n          dispatch({ type: 'confirm_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'confirm_receipt', payload })\n          onSuccess(state)\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'confirm_error', payload: error })\n          console.error('An error occurred confirming transaction:', error)\n          toastError('An error occurred confirming transaction')\n        })\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import { useWeb3React } from '@web3-react/core'\nimport { useEffect, useReducer } from 'react'\nimport { getPancakeRabbitContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nconst pancakeRabbitsContract = getPancakeRabbitContract()\n\nexport type NftMap = {\n  [key: number]: {\n    tokenUri: string\n    tokenIds: number[]\n  }\n}\n\ntype Action = { type: 'set_nfts'; data: NftMap } | { type: 'reset' } | { type: 'refresh'; timestamp: number }\n\ntype State = {\n  isLoading: boolean\n  nfts: NftMap\n  lastUpdated: number\n}\n\nconst initialState: State = {\n  isLoading: true,\n  nfts: {},\n  lastUpdated: Date.now(),\n}\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'set_nfts':\n      return {\n        ...initialState,\n        isLoading: false,\n        nfts: action.data,\n      }\n    case 'refresh':\n      return {\n        ...initialState,\n        lastUpdated: action.timestamp,\n      }\n    case 'reset':\n      return {\n        ...initialState,\n        isLoading: false,\n      }\n    default:\n      return state\n  }\n}\n\nconst useGetWalletNfts = () => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWeb3React()\n  const { lastUpdated } = state\n\n  useEffect(() => {\n    const fetchNfts = async () => {\n      try {\n        const balanceOf = await pancakeRabbitsContract.methods.balanceOf(account).call()\n\n        if (balanceOf > 0) {\n          const getTokenIdAndBunnyId = async (index: number) => {\n            try {\n              const { tokenOfOwnerByIndex, getBunnyId, tokenURI } = pancakeRabbitsContract.methods\n              const tokenId = await tokenOfOwnerByIndex(account, index).call()\n              const [bunnyId, tokenUri] = await makeBatchRequest([getBunnyId(tokenId).call, tokenURI(tokenId).call])\n\n              return [Number(bunnyId), Number(tokenId), tokenUri]\n            } catch (error) {\n              return null\n            }\n          }\n\n          const tokenIdPromises = []\n\n          for (let i = 0; i < balanceOf; i++) {\n            tokenIdPromises.push(getTokenIdAndBunnyId(i))\n          }\n\n          const tokenIdsOwnedByWallet = await Promise.all(tokenIdPromises)\n\n          const nfts: NftMap = tokenIdsOwnedByWallet.reduce((accum, association) => {\n            if (!association) {\n              return accum\n            }\n\n            const [bunnyId, tokenId, tokenUri] = association\n\n            return {\n              ...accum,\n              [bunnyId]: {\n                tokenUri,\n                tokenIds: accum[bunnyId] ? [...accum[bunnyId].tokenIds, tokenId] : [tokenId],\n              },\n            }\n          }, {})\n\n          dispatch({ type: 'set_nfts', data: nfts })\n        } else {\n          // Reset it in case of wallet change\n          dispatch({ type: 'reset' })\n        }\n      } catch (error) {\n        dispatch({ type: 'reset' })\n      }\n    }\n\n    if (account) {\n      fetchNfts()\n    }\n  }, [account, lastUpdated, dispatch])\n\n  const refresh = () => dispatch({ type: 'refresh', timestamp: Date.now() })\n\n  return { ...state, refresh }\n}\n\nexport default useGetWalletNfts\n","import styled from 'styled-components'\n\nconst HeaderWrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nexport default HeaderWrapper\n","import React from 'react'\nimport { NoProfileAvatarIcon } from '@pancakeswap-libs/uikit'\nimport { Profile } from 'state/types'\nimport styled from 'styled-components'\n\nexport interface ProfileAvatarProps {\n  profile: Profile\n}\n\nconst TeamAvatar = styled.img`\n  border: 1px solid ${({ theme }) => theme.card.background};\n  border-radius: 50%;\n  bottom: 0px;\n  position: absolute;\n  right: 0px;\n  min-width: 20px;\n  min-height: 20px;\n  width: 37.5%;\n  height: 37.5%;\n  z-index: 5;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    border-width: 2px;\n  }\n`\n\nconst AvatarWrapper = styled.div<{ bg: string }>`\n  background: url('${({ bg }) => bg}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n// TODO: replace with no profile avatar icon\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\n  width: 100%;\n  height: 100%;\n`\n\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  return (\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\n      {!profile.isActive && <AvatarInactive />}\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\n    </AvatarWrapper>\n  )\n}\n\nexport default ProfileAvatar\n","import React from 'react'\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ComingSoonProps {\n  children?: React.ReactNode\n}\n\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\n      <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\n        {children || TranslateString(999, 'Coming Soon!')}\n      </Heading>\n    </Flex>\n  )\n}\n\nexport default ComingSoon\n","import styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\nconst SecondaryCard = styled(Text)`\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px;\n`\n\nSecondaryCard.defaultProps = {\n  p: '24px',\n}\n\nexport default SecondaryCard\n","import React, { ElementType, ReactNode } from 'react'\nimport { Flex, Heading, Text, TextProps } from '@pancakeswap-libs/uikit'\nimport SecondaryCard from './SecondaryCard'\n\ninterface StatBoxProps extends TextProps {\n  icon: ElementType\n  title: ReactNode\n  subtitle: ReactNode\n  isDisabled?: boolean\n}\n\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\n  return (\n    <SecondaryCard {...props}>\n      <Flex alignItems=\"start\">\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\n        <div>\n          <Heading as=\"h3\" size=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\n            {title}\n          </Heading>\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\n            {subtitle}\n          </Text>\n        </div>\n      </Flex>\n    </SecondaryCard>\n  )\n}\n\nexport default StatBox\n"],"sourceRoot":""}